<nesc xmlns="http://www.tinyos.net/nesC">
  <components>
    <component qname="NewMetricORAppC" loc="40:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORAppC.nc">
      <configuration/>
    </component>
    <component qname="NewMetricORC" loc="48:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc" safe="">
      <module/>
    </component>
    <component qname="MainC" loc="47:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/MainC.nc">
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:/Users/ytc/Applications/tinyos-main/tos/platforms/mica/sim/PlatformC.nc">
      <documentation loc="1:/Users/ytc/Applications/tinyos-main/tos/platforms/micaz/sim/platform_hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: platform_hardware.h,v 1.6 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/Users/ytc/Applications/tinyos-main/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/Users/ytc/Applications/tinyos-main/tos/platforms/micaz/sim/platform_hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: platform_hardware.h,v 1.6 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/Users/ytc/Applications/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/Users/ytc/Applications/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/Users/ytc/Applications/tinyos-main/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/Users/ytc/Applications/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:27">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:23">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:22">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:21">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:20">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:19">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:18">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:17">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:16">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="10:/Users/ytc/Applications/tinyos-main/tos/platforms/mica/sim/MeasureClockC.nc">
      <documentation loc="3:/Users/ytc/Applications/tinyos-main/tos/platforms/mica/sim/MeasureClockC.nc">
        <short>&#10; Simulation version of MeasureClockC for the mica platform.</short>
        <long>&#10; Simulation version of MeasureClockC for the mica platform. See &#10; tos/platforms/mica/MeasureClockC.nc for more details.&#10;&#10; @author Phil Levis&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SimMainP" loc="43:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/SimMainP.nc">
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="42:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TinySchedulerC.nc">
      <documentation loc="32:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TinySchedulerC.nc">
        <short>&#10; TOSSIM-specific scheduler implementation, which models&#10; tasks as simulation events (in order to capture delay).</short>
        <long>&#10; TOSSIM-specific scheduler implementation, which models&#10; tasks as simulation events (in order to capture delay).&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SimSchedulerBasicP" loc="47:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/SimSchedulerBasicP.nc">
      <documentation loc="33:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_event_queue.h">
        <short>&#10; The event queue is the core of the mote side of TOSSIM.</short>
        <long>&#10; The event queue is the core of the mote side of TOSSIM. It is a&#10; wrapper around the underlying heap. Unlike the 1.x version, it is&#10; not re-entrant: merging the Python console and TOSSIM means that&#10; functionality like packet injection/reception from external tools&#10; is on the Python side.&#10;&#10; @author Phil Levis&#10; @date   November 22 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SimMoteP" loc="45:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/SimMoteP.nc">
      <documentation loc="33:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/SimMoteP.nc">
        <short>&#10; The TOSSIM abstraction of a mote.</short>
        <long>&#10; The TOSSIM abstraction of a mote. By putting simulation state into&#10; a component, we can scale and reference this state automatically&#10; using nesC's rewriting, rather than managing and indexing into&#10; arrays manually.&#10;&#10; @author Phil Levis&#10; @date   August 19 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="42:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/ActiveMessageC.nc">
      <documentation loc="33:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/ActiveMessageC.nc">
        <short>&#10;&#10; The basic chip-independent TOSSIM Active Message layer for radio chips&#10; that do not have simulation support.</short>
        <long>&#10;&#10; The basic chip-independent TOSSIM Active Message layer for radio chips&#10; that do not have simulation support.&#10;&#10; @author Philip Levis&#10; @date December 2 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TossimActiveMessageC" loc="44:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimActiveMessageC.nc">
      <documentation loc="33:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimActiveMessageC.nc">
        <short>&#10;&#10; The basic chip-independent TOSSIM Active Message layer for radio chips&#10; that do not have simulation support.</short>
        <long>&#10;&#10; The basic chip-independent TOSSIM Active Message layer for radio chips&#10; that do not have simulation support.&#10;&#10; @author Philip Levis&#10; @date December 2 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TossimPacketModelC" loc="60:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <documentation loc="32:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_csma.h">
        <short>&#10;&#10; Configuration parameters for a CSMA link.</short>
        <long>&#10;&#10; Configuration parameters for a CSMA link.&#10;&#10; @author Philip Levis&#10; @date   Dec 10 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CpmModelC" loc="54:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <documentation loc="32:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_noise.h">
        <short>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.&#10;&#10; @author Hyungjune Lee&#10; @date   Oct 13 2006&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="57:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/ActiveMessageAddressC.nc">
      <documentation loc="49:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/ActiveMessageAddressC.nc">
        <short>&#10; Accessor methods for Active Messages.</short>
        <long>&#10; Accessor methods for Active Messages.&#10;&#10; @author Philip Levis&#10; @author Morten Tranberg Hansen (added ActiveMessageAddress)&#10; @date June 19 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="NewMetricORAppC.packetTimer" loc="44(NewMetricORAppC.packetTimer):/Users/ytc/Applications/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/Users/ytc/Applications/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/Users/ytc/Applications/tinyos-main/tos/system/TimerMilliP.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/Users/ytc/Applications/tinyos-main/tos/platforms/mica/sim/HilTimerMilliC.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/platforms/mica/sim/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/Users/ytc/Applications/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x108cfa940"/>
            <typename><typedef-ref name="TMilli" ref="0x108cfacb0"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x109867470"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="50:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncC.nc">
      <documentation loc="32:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncC.nc">
        <short>&#10; The TOSSIM implementation of the Atm128 Timer0.</short>
        <long>&#10; The TOSSIM implementation of the Atm128 Timer0. It is built from a&#10; timer-specific counter component and a generic compare&#10; component. The counter component has an additional simulation-only&#10; interface to let the compare component know when its state has&#10; changed (e.g., TCNTX was set).&#10;&#10; @date November 22 2005&#10;&#10; @author Philip Levis &#60;pal@cs.stanford.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="48:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <documentation loc="1:/Users/ytc/Applications/tinyos-main/tos/platforms/micaz/sim/platform_hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: platform_hardware.h,v 1.6 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/Users/ytc/Applications/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/Users/ytc/Applications/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x108cfa940"/>
            <typename><typedef-ref name="TMilli" ref="0x108cfacb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/Users/ytc/Applications/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x108cfa940"/>
            <typename><typedef-ref name="TMilli" ref="0x108cfacb0"/></typename>
          </type-tag>
          <value cst="I:6">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/Users/ytc/Applications/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/Users/ytc/Applications/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x108cfa940"/>
            <typename><typedef-ref name="TMilli" ref="0x108cfacb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NewMetricORAppC.wakeTimer" loc="44(NewMetricORAppC.wakeTimer):/Users/ytc/Applications/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/Users/ytc/Applications/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="NewMetricORAppC.sleepTimer" loc="44(NewMetricORAppC.sleepTimer):/Users/ytc/Applications/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/Users/ytc/Applications/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="NewMetricORAppC.forwardPacketTimer" loc="44(NewMetricORAppC.forwardPacketTimer):/Users/ytc/Applications/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/Users/ytc/Applications/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="NewMetricORAppC.forwardPauseTimer" loc="44(NewMetricORAppC.forwardPauseTimer):/Users/ytc/Applications/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/Users/ytc/Applications/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="NewMetricORAppC.AMSenderC" loc="47(NewMetricORAppC.AMSenderC):/Users/ytc/Applications/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/Users/ytc/Applications/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:11">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NewMetricORAppC.AMSenderC.SenderC" loc="47(NewMetricORAppC.AMSenderC.SenderC):/Users/ytc/Applications/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/Users/ytc/Applications/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x108c7c020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NewMetricORAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(NewMetricORAppC.AMSenderC.SenderC.AMQueueEntryP):/Users/ytc/Applications/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/Users/ytc/Applications/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x108c7c020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/Users/ytc/Applications/tinyos-main/tos/system/AMQueueP.nc">
      <documentation loc="33:/Users/ytc/Applications/tinyos-main/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/Users/ytc/Applications/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/Users/ytc/Applications/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NewMetricORAppC.AMReceiverC" loc="43(NewMetricORAppC.AMReceiverC):/Users/ytc/Applications/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/Users/ytc/Applications/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:11">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:/Users/ytc/Applications/tinyos-main/tos/system/RandomC.nc">
      <documentation loc="33:/Users/ytc/Applications/tinyos-main/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/Users/ytc/Applications/tinyos-main/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/Users/ytc/Applications/tinyos-main/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="NeighborDiscoveryC" loc="3:/Users/ytc/Documents/workspace/NewMetricOR/src/NeighborDiscovery/NeighborDiscoveryC.nc">
      <configuration/>
    </component>
    <component qname="NeighborDiscoveryP" loc="7:/Users/ytc/Documents/workspace/NewMetricOR/src/NeighborDiscovery/NeighborDiscoveryP.nc">
      <module/>
    </component>
    <component qname="NeighborDiscoveryC.packetTimer" loc="44(NeighborDiscoveryC.packetTimer):/Users/ytc/Applications/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/Users/ytc/Applications/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="NeighborDiscoveryC.probeSender" loc="47(NeighborDiscoveryC.probeSender):/Users/ytc/Applications/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/Users/ytc/Applications/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:13">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NeighborDiscoveryC.probeSender.SenderC" loc="47(NeighborDiscoveryC.probeSender.SenderC):/Users/ytc/Applications/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/Users/ytc/Applications/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x108c7c020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NeighborDiscoveryC.probeSender.SenderC.AMQueueEntryP" loc="43(NeighborDiscoveryC.probeSender.SenderC.AMQueueEntryP):/Users/ytc/Applications/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/Users/ytc/Applications/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x108c7c020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NeighborDiscoveryC.probeReceiver" loc="43(NeighborDiscoveryC.probeReceiver):/Users/ytc/Applications/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/Users/ytc/Applications/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:13">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x109867470" loc="23:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x109867470"/></type-var>
        </typedef>
        <constant name="divider" ref="0x109867780" loc="23:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc" abstract="">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x109487d30" loc="41:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x109484110" loc="42:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x1094844a0" loc="43:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x1094847f0" loc="44:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x109504700" loc="42:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x109504a90" loc="43:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x109504e20" loc="44:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x1095011c0" loc="45:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/Users/ytc/Applications/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x109a48780" loc="46:/Users/ytc/Applications/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x109a48780"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x109a48ab0" loc="46:/Users/ytc/Applications/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/Users/ytc/Applications/tinyos-main/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/Users/ytc/Applications/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x109afa640" loc="45:/Users/ytc/Applications/tinyos-main/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x1094536c0" loc="40:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x109453a30" loc="40:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x109453da0" loc="40:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMReceiverC" loc="43:/Users/ytc/Applications/tinyos-main/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/Users/ytc/Applications/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x109b42390" loc="43:/Users/ytc/Applications/tinyos-main/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x108c7c020"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/Users/ytc/Applications/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/Users/ytc/Applications/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x109a21020" loc="46:/Users/ytc/Applications/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x109a21020"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x10985b020" loc="23:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x10985b020"/></type-var>
        </typedef>
        <constant name="divider" ref="0x10985b330" loc="23:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/Users/ytc/Applications/tinyos-main/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/Users/ytc/Applications/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x109ace360" loc="47:/Users/ytc/Applications/tinyos-main/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x108c7c020"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/Users/ytc/Applications/tinyos-main/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/Users/ytc/Applications/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x109ac03f0" loc="43:/Users/ytc/Applications/tinyos-main/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x108c7c020"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/Users/ytc/Applications/tinyos-main/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/Users/ytc/Applications/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x109ac74a0" loc="47:/Users/ytc/Applications/tinyos-main/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x108c7c020"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/Users/ytc/Applications/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/Users/ytc/Applications/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x109aabe10" loc="46:/Users/ytc/Applications/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x109aabe10"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/Users/ytc/Applications/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/Users/ytc/Applications/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="SplitControl" loc="87:/Users/ytc/Applications/tinyos-main/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/Users/ytc/Applications/tinyos-main/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x1091ebab0" loc="113:/Users/ytc/Applications/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/Users/ytc/Applications/tinyos-main/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10881bcb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x1091eb830" loc="113:/Users/ytc/Applications/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10881bcb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x1091e9020" loc="138:/Users/ytc/Applications/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/Users/ytc/Applications/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10881bcb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x1091ead30" loc="138:/Users/ytc/Applications/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10881bcb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x1091bdb80" loc="104:/Users/ytc/Applications/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/Users/ytc/Applications/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10881bcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x1091ea350" loc="130:/Users/ytc/Applications/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/Users/ytc/Applications/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10881bcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/Users/ytc/Applications/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/Users/ytc/Applications/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x10918ed70" loc="60:/Users/ytc/Applications/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/Users/ytc/Applications/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/Users/ytc/Applications/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x108a18350" loc="67:/Users/ytc/Applications/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/Users/ytc/Applications/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10881bcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x108a18ba0" loc="75:/Users/ytc/Applications/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/Users/ytc/Applications/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x109882e40" loc="38:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x1098816b0" loc="44:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x1098826d0" loc="32:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x109880020" loc="50:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x109884420" loc="21:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x109852ad0"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x109850020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x109884e50" loc="27:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x109852ad0"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x109850020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x109884bd0" loc="27:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x109852ad0"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x109850020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TossimPacket" loc="44:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacket.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="strength" ref="0x109638c50" loc="45:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacket.nc">
        <interfacedef-ref qname="TossimPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x1084b8cc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1096389d0" loc="45:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/Users/ytc/Applications/tinyos-main/tos/interfaces/Packet.nc">
      <documentation loc="42:/Users/ytc/Applications/tinyos-main/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x1091cd020" loc="65:/Users/ytc/Applications/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/Users/ytc/Applications/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1091d2cf0" loc="65:/Users/ytc/Applications/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x1091cc110" loc="78:/Users/ytc/Applications/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/Users/ytc/Applications/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1091cde10" loc="78:/Users/ytc/Applications/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x1091c8490" loc="126:/Users/ytc/Applications/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/Users/ytc/Applications/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1091cae50" loc="126:/Users/ytc/Applications/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1091c81c0" loc="126:/Users/ytc/Applications/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x1091ca560" loc="106:/Users/ytc/Applications/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/Users/ytc/Applications/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x1091cb5e0" loc="94:/Users/ytc/Applications/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/Users/ytc/Applications/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1091cb020" loc="94:/Users/ytc/Applications/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1091cb350" loc="94:/Users/ytc/Applications/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/Users/ytc/Applications/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/Users/ytc/Applications/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x109815c50" loc="53:/Users/ytc/Applications/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x109815c50"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x1098115a0" loc="61:/Users/ytc/Applications/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/Users/ytc/Applications/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x1084bb400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMSend.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x1091c5630" loc="80:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="60:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10881bcb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x108c7c7e0"/></typename>
            </type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x1091d0ca0" loc="80:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x108c7c7e0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x1091c5060" loc="80:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1091c5390" loc="80:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x1091be020" loc="135:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="126:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1091bf890" loc="135:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1091bfbc0" loc="135:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x1091bf020" loc="123:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="113:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x1091c29c0" loc="96:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="82:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10881bcb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1091c2740" loc="96:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x1091c0020" loc="110:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="98:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10881bcb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1091c1900" loc="110:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x1091c1c50" loc="110:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10881bcb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/Users/ytc/Applications/tinyos-main/tos/interfaces/Random.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x1091f1020" loc="52:/Users/ytc/Applications/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="48:/Users/ytc/Applications/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1084bb020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x1091f26d0" loc="46:/Users/ytc/Applications/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="42:/Users/ytc/Applications/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x1084bb400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x1098945a0" loc="45:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x109805020"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x109805440"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x109891ab0" loc="53:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x10984cd30"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x10984a180"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x109892830" loc="49:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x10984e4d0"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x10984e8f0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x1098912a0" loc="50:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x10984e4d0"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x10984e8f0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x109891020" loc="50:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x10984e4d0"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x10984e8f0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x109890520" loc="54:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x10984cd30"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x10984a180"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x1098902a0" loc="54:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x10984cd30"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x10984a180"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x109892020" loc="46:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x109805020"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x109805440"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x109894d70" loc="46:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x109805020"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x109805440"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/Users/ytc/Applications/tinyos-main/tos/interfaces/Send.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x109abc930" loc="75:/Users/ytc/Applications/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="57:/Users/ytc/Applications/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10881bcb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x109abc370" loc="75:/Users/ytc/Applications/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x109abc6a0" loc="75:/Users/ytc/Applications/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x109ab5160" loc="125:/Users/ytc/Applications/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="115:/Users/ytc/Applications/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x109ab7ae0" loc="125:/Users/ytc/Applications/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x109ab7e10" loc="125:/Users/ytc/Applications/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x109ab7270" loc="112:/Users/ytc/Applications/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="102:/Users/ytc/Applications/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x109ab9c40" loc="89:/Users/ytc/Applications/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="77:/Users/ytc/Applications/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10881bcb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x109ab99c0" loc="89:/Users/ytc/Applications/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x109ab8360" loc="100:/Users/ytc/Applications/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="91:/Users/ytc/Applications/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10881bcb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x109abad10" loc="100:/Users/ytc/Applications/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x109ab80d0" loc="100:/Users/ytc/Applications/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10881bcb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/Users/ytc/Applications/tinyos-main/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x1091d1020" loc="53:/Users/ytc/Applications/tinyos-main/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x1091d1020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x1091d1b60" loc="64:/Users/ytc/Applications/tinyos-main/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/Users/ytc/Applications/tinyos-main/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10881bcb0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x1091d1020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x1091d18e0" loc="64:/Users/ytc/Applications/tinyos-main/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x1091d1020"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/Users/ytc/Applications/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x1097f3e40" loc="50:/Users/ytc/Applications/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/Users/ytc/Applications/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x108c7c7e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x1097f1dc0" loc="60:/Users/ytc/Applications/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/Users/ytc/Applications/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x1097f1660" loc="55:/Users/ytc/Applications/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/Users/ytc/Applications/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x108c7c400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x1097f3600" loc="45:/Users/ytc/Applications/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/Users/ytc/Applications/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x108c7c400"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x108c7c7e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x1097f3020" loc="45:/Users/ytc/Applications/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x108c7c400"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x1097f3370" loc="45:/Users/ytc/Applications/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x108c7c7e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x10982b8c0" loc="56:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x10982b8c0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x10982bb00" loc="56:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10982bb00"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x109875800" loc="109:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10982bb00"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x1098777e0" loc="78:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x109876e10" loc="103:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10982bb00"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10982bb00"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x109876840" loc="103:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10982bb00"/></type-var>
          </variable>
          <variable name="dt" ref="0x109876b80" loc="103:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10982bb00"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x109876020" loc="88:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10897b190"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x109874020" loc="116:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10982bb00"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x109879680" loc="66:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10982bb00"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x109879400" loc="66:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10982bb00"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x109877020" loc="73:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/Users/ytc/Applications/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x1093f1b00" loc="62:/Users/ytc/Applications/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/Users/ytc/Applications/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10881bcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x109897d50" loc="41:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x109897d50"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x10988a7a0" loc="74:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10897b190"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x10988d860" loc="58:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x10988e6c0" loc="48:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x109897d50"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x10988b020" loc="62:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x109889020" loc="80:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10897b190"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x10988d0b0" loc="54:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x109897d50"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x10988ee00" loc="54:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x109897d50"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x10988b790" loc="65:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x10988a020" loc="68:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/Users/ytc/Applications/tinyos-main/tos/interfaces/Receive.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x1091ef060" loc="78:/Users/ytc/Applications/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/Users/ytc/Applications/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
              <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:8" alignment="I:8">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1091f06d0" loc="78:/Users/ytc/Applications/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x1091f0a20" loc="78:/Users/ytc/Applications/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1091f0d50" loc="78:/Users/ytc/Applications/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SimMote" loc="42:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/SimMote.nc">
      <documentation loc="32:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/SimMote.nc">
        <short>&#10; TOSSIM-specific interface to access a mote's state.</short>
        <long>&#10; TOSSIM-specific interface to access a mote's state. TinyOS programs&#10; should never use this interface.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="setEuid" ref="0x1095ca2a0" loc="44:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="euid" ref="0x1095ca020" loc="44:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/SimMote.nc">
            <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getVariableInfo" ref="0x1095c72c0" loc="47:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-pointer size="I:8" alignment="I:8">
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
            </type-pointer>
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
                <typename><typedef-ref name="size_t" ref="0x1081dea60"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="name" ref="0x1095c98b0" loc="47:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/SimMote.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="ptr" ref="0x1095c9c10" loc="47:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/SimMote.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1095c7020" loc="47:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/SimMote.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
                <typename><typedef-ref name="size_t" ref="0x1081dea60"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOff" ref="0x1095c60e0" loc="49:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x1095c7970" loc="48:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getEuid" ref="0x1095cd890" loc="43:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x1095c9190" loc="46:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10897b190"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartTime" ref="0x1095caa50" loc="45:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborDiscovery" loc="1:/Users/ytc/Documents/workspace/NewMetricOR/src/NeighborDiscovery/NeighborDiscovery.nc">
      <function event="" provided="0" name="PrepareAckAddtionalMsg" ref="0x1091df2a0" loc="3:/Users/ytc/Documents/workspace/NewMetricOR/src/NeighborDiscovery/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1091df020" loc="3:/Users/ytc/Documents/workspace/NewMetricOR/src/NeighborDiscovery/NeighborDiscovery.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startNeighborDiscover" ref="0x1091e8880" loc="2:/Users/ytc/Documents/workspace/NewMetricOR/src/NeighborDiscovery/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="AckAddtionalMsg" ref="0x1091dfca0" loc="4:/Users/ytc/Documents/workspace/NewMetricOR/src/NeighborDiscovery/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ackMessage" ref="0x1091dfa20" loc="4:/Users/ytc/Documents/workspace/NewMetricOR/src/NeighborDiscovery/NeighborDiscovery.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x10986f410" loc="57:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x10986f410"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x10986f650" loc="57:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10986f650"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x10986d020" loc="64:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x10986f650"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x10986c120" loc="76:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x10986d8a0" loc="71:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10897b190"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x10986c880" loc="82:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/Users/ytc/Applications/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x10941c5a0" loc="44:/Users/ytc/Applications/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x10941ccd0" loc="45:/Users/ytc/Applications/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10897b190"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x10941e760" loc="42:/Users/ytc/Applications/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x10941bb60" loc="47:/Users/ytc/Applications/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10897b190"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x10941ee60" loc="43:/Users/ytc/Applications/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10897b190"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x10941b420" loc="46:/Users/ytc/Applications/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x109421980" loc="40:/Users/ytc/Applications/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x10941e070" loc="41:/Users/ytc/Applications/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/Users/ytc/Applications/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x1091f3e30" loc="59:/Users/ytc/Applications/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/Users/ytc/Applications/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10881bcb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1091f3bb0" loc="59:/Users/ytc/Applications/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="PrepareAckAddtionalMsg" ref="0x1091e33f0" loc="88:/Users/ytc/Applications/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1091e3170" loc="88:/Users/ytc/Applications/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="AckAddtionalMsg" ref="0x1091e3da0" loc="90:/Users/ytc/Applications/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1091e3b20" loc="90:/Users/ytc/Applications/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x1091e50b0" loc="71:/Users/ytc/Applications/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/Users/ytc/Applications/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10881bcb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1091e6dc0" loc="71:/Users/ytc/Applications/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x1091e42a0" loc="85:/Users/ytc/Applications/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/Users/ytc/Applications/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10897b190"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1091e4020" loc="85:/Users/ytc/Applications/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GainRadioModel" loc="47:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getackinfo" ref="0x10968f020" loc="62:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x109690cf0" loc="62:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="putOnAirTo" ref="0x109694100" loc="48:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10897b190"/></typename>
            </type-int>
            <type-int cname="long long" size="I:8" alignment="I:8">
              <typename><typedef-ref name="sim_time_t" ref="0x10897a320"/></typename>
            </type-int>
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x109699ce0" loc="48:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </variable>
          <variable name="msg" ref="0x1096950d0" loc="49:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x109695400" loc="50:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x10897b190"/></typename>
            </type-int>
          </variable>
          <variable name="endTime" ref="0x1096957a0" loc="51:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
            <type-int cname="long long" size="I:8" alignment="I:8">
              <typename><typedef-ref name="sim_time_t" ref="0x10897a320"/></typename>
            </type-int>
          </variable>
          <variable name="gain" ref="0x109695ab0" loc="52:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </variable>
          <variable name="reverseGain" ref="0x109695e00" loc="53:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receive" ref="0x109692c00" loc="60:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x109692980" loc="60:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearChannel" ref="0x109693190" loc="56:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10897b190"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPendingTransmission" ref="0x1096938e0" loc="57:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="ackinfo" ref="0x10968f980" loc="63:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10968f700" loc="63:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setClearValue" ref="0x109694a20" loc="55:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x1096947a0" loc="55:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="acked" ref="0x1096922a0" loc="59:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x109692020" loc="59:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="shouldAck" ref="0x1096905f0" loc="61:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10897b190"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x109690370" loc="61:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TossimPacketModel" loc="45:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x109634a60" loc="57:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
        <documentation loc="47:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
          <short>&#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long>&#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10881bcb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="node" ref="0x109634110" loc="57:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </variable>
          <variable name="msg" ref="0x109634490" loc="57:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1096347c0" loc="57:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receive" ref="0x1096300b0" loc="85:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
        <documentation loc="79:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
          <short>&#10; Signal that a packet was received.</short>
          <long>&#10; Signal that a packet was received. Note that there is no buffer&#10; swap: a component using this interface must copy out the message&#10; if it needs it.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x109631e00" loc="85:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="PrepareAckAddtionalMsg" ref="0x10962e550" loc="89:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10962e2d0" loc="89:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x109632650" loc="69:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
        <documentation loc="59:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the&#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a&#10; sendFailed event, and never a sendSucceeded event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x10881bcb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1096323d0" loc="69:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x109631600" loc="76:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
        <documentation loc="71:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
          <short>&#10; Signaled in response to an accepted send request.</short>
          <long>&#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10881bcb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x109631020" loc="76:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x109631370" loc="76:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x10881bcb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="shouldAck" ref="0x109630b20" loc="87:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10897b190"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1096308a0" loc="87:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x1098a24b0" loc="55:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x1098a24b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x10989c020" loc="98:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x10989d020" loc="87:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10897b190"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x1098a2de0" loc="61:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x1098a24b0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x10989ca00" loc="104:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x10989c780" loc="104:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x10989b270" loc="110:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x1098a07b0" loc="75:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x1098a0020" loc="70:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x10989d7e0" loc="93:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10897b190"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x1098a17e0" loc="67:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x1098a24b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x1098a1560" loc="67:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x1098a24b0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x10989f020" loc="78:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x10989f770" loc="81:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x1095fc9f0" loc="177:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x108c7c400"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x1095fc770" loc="177:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x1096066d0" loc="88:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x108c7c7e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x109606450" loc="88:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x10960bad0" loc="68:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x108c7c7e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x109607600" loc="78:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x108c7c7e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x109607380" loc="78:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x109603020" loc="121:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x108c7c7e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x109602a00" loc="121:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x109602d50" loc="121:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x108c7c7e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x109605ac0" loc="103:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x108c7c7e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x1096054e0" loc="103:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x109605830" loc="103:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x108c7c7e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x1096004a0" loc="147:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x108c7c020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x109600220" loc="147:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x1095fe850" loc="162:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x108c7c020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x1095fe2a0" loc="162:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x1095fe5c0" loc="162:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x108c7c020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x1096012a0" loc="136:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10897b190"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x109601020" loc="136:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x1095fb020" loc="187:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x108c7c400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x1095fa8c0" loc="187:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
                <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x1095fac10" loc="187:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x108c7c400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x1095fbe40" loc="195:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x108c7c400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/Users/ytc/Applications/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/Users/ytc/Applications/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x1086a6390" loc="57:/Users/ytc/Applications/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/Users/ytc/Applications/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x1086ca350" loc="72:/Users/ytc/Applications/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/Users/ytc/Applications/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x1086a6ae0" loc="65:/Users/ytc/Applications/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/Users/ytc/Applications/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10897b190"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x109189020" loc="53:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x109189020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x1091b9c50" loc="136:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x1084bb400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x1091875b0" loc="83:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x1091ba360" loc="114:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x1084bb400"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x1084bb400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x1091bcd60" loc="114:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x1084bb400"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x1091ba0d0" loc="114:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x1084bb400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x1091bc5b0" loc="98:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10897b190"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x1091b8ca0" loc="151:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x1084bb400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x1091b8420" loc="144:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x1084bb400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x109187d90" loc="92:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x10897b190"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x109189b90" loc="64:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x1084bb400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x109189910" loc="64:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x1084bb400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x1091b92f0" loc="129:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x1084bb400"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x1084bb400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x1091bad00" loc="129:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x1084bb400"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x1091b9060" loc="129:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x1084bb400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x109188680" loc="73:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x1084bb400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x109188400" loc="73:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x1084bb400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x109188e80" loc="78:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
    <struct name="ip_mreq" loc="501:/usr/include/netinet/in.h" ref="0x108d914d0" defined="" size="I:8" alignment="I:4">
      <field name="imr_multiaddr" ref="0x108d91c00" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref name="in_addr" ref="0x108d950c0"/></type-tag>
      </field>
      <field name="imr_interface" ref="0x108d91cb0" bit-offset="I:32" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref name="in_addr" ref="0x108d950c0"/></type-tag>
      </field>
    </struct>
    <struct name="__float2" loc="668:/opt/local/lib/gcc47/gcc/x86_64-apple-darwin16/4.7.4/include-fixed/math.h" ref="0x10889d780" defined="" size="I:8" alignment="I:4">
      <field name="__sinval" ref="0x10889dc90" bit-offset="I:0" size="I:4">
        <type-float cname="float" size="I:4" alignment="I:4"></type-float>
      </field>
      <field name="__cosval" ref="0x10889dd40" bit-offset="I:32" size="I:4">
        <type-float cname="float" size="I:4" alignment="I:4"></type-float>
      </field>
    </struct>
    <attribute name="bnd" loc="9:/usr/local/lib/ncc/deputy_nodeputy.h" ref="0x1081e3170" defined="" size="I:16" alignment="I:8">
      <field name="lo" ref="0x1081e3600" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="hi" ref="0x1081e36b0" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
    </attribute>
    <struct loc="123:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x109852370" defined="" size="I:1" alignment="I:1">
      <field name="tcr0ub" ref="0x109852580" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="ocr0ub" ref="0x109852630" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="tcn0ub" ref="0x1098526e0" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="as0" ref="0x109852790" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0x109852840" bit-offset="I:4" bit-size="I:4">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="ip_opts" loc="393:/usr/include/netinet/in.h" ref="0x108d939a0" defined="" size="I:44" alignment="I:4">
      <field name="ip_dst" ref="0x108d910e0" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref name="in_addr" ref="0x108d950c0"/></type-tag>
      </field>
      <field name="ip_opts" ref="0x108d91190" bit-offset="I:32" size="I:40">
        <type-array elements="I:40" size="I:40" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <enum loc="76:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/tos.h" ref="0x10897b460" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="rusage_info_v2" loc="228:/usr/include/sys/resource.h" ref="0x10871b170" defined="" size="I:160" alignment="I:8">
      <field name="ri_uuid" ref="0x108718200" bit-offset="I:0" size="I:16">
        <type-array elements="I:16" size="I:16" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="ri_user_time" ref="0x1087182b0" bit-offset="I:128" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_system_time" ref="0x108718360" bit-offset="I:192" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_pkg_idle_wkups" ref="0x108718410" bit-offset="I:256" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_interrupt_wkups" ref="0x1087184c0" bit-offset="I:320" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_pageins" ref="0x108718570" bit-offset="I:384" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_wired_size" ref="0x108718620" bit-offset="I:448" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_resident_size" ref="0x1087186d0" bit-offset="I:512" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_phys_footprint" ref="0x108718780" bit-offset="I:576" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_proc_start_abstime" ref="0x108718830" bit-offset="I:640" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_proc_exit_abstime" ref="0x1087188e0" bit-offset="I:704" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_child_user_time" ref="0x108718990" bit-offset="I:768" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_child_system_time" ref="0x108718a40" bit-offset="I:832" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_child_pkg_idle_wkups" ref="0x108718bf0" bit-offset="I:896" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_child_interrupt_wkups" ref="0x108718ca0" bit-offset="I:960" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_child_pageins" ref="0x108718d50" bit-offset="I:1024" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_child_elapsed_abstime" ref="0x108718e00" bit-offset="I:1088" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_diskio_bytesread" ref="0x108718eb0" bit-offset="I:1152" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_diskio_byteswritten" ref="0x108722020" bit-offset="I:1216" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="_opaque_pthread_cond_t" loc="68:/usr/include/sys/_pthread/_pthread_types.h" ref="0x1084ac360" defined="" size="I:48" alignment="I:8">
      <field name="__sig" ref="0x1084ac9d0" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__opaque" ref="0x1084aca80" bit-offset="I:64" size="I:40">
        <type-array elements="I:40" size="I:40" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <nx_struct name="tossim_metadata" loc="18:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimRadioMsg.h" ref="0x108c9b9b0" defined="" size="I:8" alignment="I:1">
      <field name="strength" ref="0x108c9aac0" bit-offset="I:0" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1" network="nx_int8_t">
          <typename><typedef-ref name="nx_int8_t" ref="0x1086472d0"/></typename>
        </type-int>
      </field>
      <field name="ack" ref="0x108c9ab70" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x10864c020"/></typename>
        </type-int>
      </field>
      <field name="time" ref="0x108c9ac20" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x10864c740"/></typename>
        </type-int>
      </field>
      <field name="ackNode" ref="0x108c9acd0" bit-offset="I:32" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x10864c020"/></typename>
        </type-int>
      </field>
      <field name="other1" ref="0x108c9ad80" bit-offset="I:40" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x10864c020"/></typename>
        </type-int>
      </field>
      <field name="other2" ref="0x108c9ae30" bit-offset="I:48" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x10864c020"/></typename>
        </type-int>
      </field>
      <field name="other3" ref="0x108c9aee0" bit-offset="I:56" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x10864c020"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <struct name="ftrimactivefile" loc="436:/usr/include/sys/fcntl.h" ref="0x108d2a020" defined="" size="I:16" alignment="I:8">
      <field name="fta_offset" ref="0x108d2a6e0" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="off_t" ref="0x1089591e0"/></typename>
        </type-int>
      </field>
      <field name="fta_length" ref="0x108d2a790" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="off_t" ref="0x1089591e0"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="82:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x10980a800" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="gain_entry" loc="53:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_gain.h" ref="0x108b35510" defined="" size="I:24" alignment="I:8">
      <field name="mote" ref="0x108b35d20" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="gain" ref="0x108b35dd0" bit-offset="I:64" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="next" ref="0x108b35e80" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:24" alignment="I:8"><struct-ref name="gain_entry" ref="0x108b35510"/></type-tag>
        </type-pointer>
      </field>
    </struct>
    <enum loc="51:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h" ref="0x109405800" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="proc_rlimit_control_wakeupmon" loc="353:/usr/include/sys/resource.h" ref="0x108725360" defined="" size="I:8" alignment="I:4">
      <field name="wm_flags" ref="0x108725970" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x1084bb400"/></typename>
        </type-int>
      </field>
      <field name="wm_rate" ref="0x108725a20" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="int32_t" ref="0x1084b9420"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="fd_set" loc="46:/usr/include/sys/_types/_fd_def.h" ref="0x108a79530" defined="" size="I:128" alignment="I:4">
      <field name="fds_bits" ref="0x108a8fd90" bit-offset="I:0" size="I:128">
        <type-array elements="I:32" size="I:128" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="__int32_t" ref="0x10849ab60"/></typename>
          </type-int>
        </type-array>
      </field>
    </struct>
    <attribute name="deputy_scope"  loc="NONE" ref="0x1081dca20" size="V:" alignment="V:">
    </attribute>
    <struct name="timeval" loc="30:/usr/include/sys/_types/_timeval.h" ref="0x10870f0e0" defined="" size="I:16" alignment="I:8">
      <field name="tv_sec" ref="0x10870f790" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__darwin_time_t" ref="0x1084a2170"/></typename>
        </type-int>
      </field>
      <field name="tv_usec" ref="0x10870f840" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__darwin_suseconds_t" ref="0x1084a7cb0"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="sim_gain_noise" loc="3:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_gain.c" ref="0x108b449a0" defined="" size="I:16" alignment="I:8">
      <field name="mean" ref="0x108b43020" bit-offset="I:0" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="range" ref="0x108b430d0" bit-offset="I:64" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
    </struct>
    <struct name="sf_hdtr" loc="668:/usr/include/sys/socket.h" ref="0x108d72d70" defined="" size="I:32" alignment="I:8">
      <field name="headers" ref="0x108d707e0" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:16" alignment="I:8"><struct-ref name="iovec" ref="0x108d19eb0"/></type-tag>
        </type-pointer>
      </field>
      <field name="hdr_cnt" ref="0x108d70890" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="trailers" ref="0x108d70940" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:16" alignment="I:8"><struct-ref name="iovec" ref="0x108d19eb0"/></type-tag>
        </type-pointer>
      </field>
      <field name="trl_cnt" ref="0x108d709f0" bit-offset="I:192" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="stat64" loc="221:/usr/include/sys/stat.h" ref="0x108eaf420" defined="" size="I:144" alignment="I:8">
      <field name="st_dev" ref="0x108ed6a80" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="dev_t" ref="0x10879bdf0"/></typename>
        </type-int>
      </field>
      <field name="st_mode" ref="0x108ed6b30" bit-offset="I:32" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="mode_t" ref="0x10879a250"/></typename>
        </type-int>
      </field>
      <field name="st_nlink" ref="0x108ed6be0" bit-offset="I:48" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="nlink_t" ref="0x108d20160"/></typename>
        </type-int>
      </field>
      <field name="st_ino" ref="0x108ed6c90" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__darwin_ino64_t" ref="0x1084a4460"/></typename>
        </type-int>
      </field>
      <field name="st_uid" ref="0x108ed6d40" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uid_t" ref="0x1086ebb70"/></typename>
        </type-int>
      </field>
      <field name="st_gid" ref="0x108ed6df0" bit-offset="I:160" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="gid_t" ref="0x108d23890"/></typename>
        </type-int>
      </field>
      <field name="st_rdev" ref="0x108ed6ea0" bit-offset="I:192" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="dev_t" ref="0x10879bdf0"/></typename>
        </type-int>
      </field>
      <field name="st_atimespec" ref="0x108ed6f50" bit-offset="I:256" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timespec" ref="0x108a8a0e0"/></type-tag>
      </field>
      <field name="st_mtimespec" ref="0x108ed5030" bit-offset="I:384" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timespec" ref="0x108a8a0e0"/></type-tag>
      </field>
      <field name="st_ctimespec" ref="0x108ed50e0" bit-offset="I:512" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timespec" ref="0x108a8a0e0"/></type-tag>
      </field>
      <field name="st_birthtimespec" ref="0x108ed5190" bit-offset="I:640" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timespec" ref="0x108a8a0e0"/></type-tag>
      </field>
      <field name="st_size" ref="0x108ed5240" bit-offset="I:768" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="off_t" ref="0x1089591e0"/></typename>
        </type-int>
      </field>
      <field name="st_blocks" ref="0x108ed52f0" bit-offset="I:832" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="blkcnt_t" ref="0x108d23020"/></typename>
        </type-int>
      </field>
      <field name="st_blksize" ref="0x108ed54a0" bit-offset="I:896" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="blksize_t" ref="0x108d23480"/></typename>
        </type-int>
      </field>
      <field name="st_flags" ref="0x108ed5550" bit-offset="I:928" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x10849b020"/></typename>
        </type-int>
      </field>
      <field name="st_gen" ref="0x108ed5600" bit-offset="I:960" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x10849b020"/></typename>
        </type-int>
      </field>
      <field name="st_lspare" ref="0x108ed56b0" bit-offset="I:992" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__int32_t" ref="0x10849ab60"/></typename>
        </type-int>
      </field>
      <field name="st_qspare" ref="0x108ed5760" bit-offset="I:1024" size="I:16">
        <type-array elements="I:2" size="I:16" alignment="I:8">
          <type-int cname="long long" size="I:8" alignment="I:8">
            <typename><typedef-ref name="__int64_t" ref="0x10849b3e0"/></typename>
          </type-int>
        </type-array>
      </field>
    </struct>
    <struct name="accessx_descriptor" loc="132:/usr/include/sys/unistd.h" ref="0x108dd28f0" defined="" size="I:16" alignment="I:4">
      <field name="ad_name_offset" ref="0x108df91c0" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="ad_flags" ref="0x108df9270" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="ad_pad" ref="0x108df9320" bit-offset="I:64" size="I:8">
        <type-array elements="I:2" size="I:8" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </type-array>
      </field>
    </struct>
    <struct name="sigaction" loc="286:/usr/include/sys/signal.h" ref="0x108702be0" defined="" size="I:16" alignment="I:8">
      <field name="__sigaction_u" ref="0x108701490" bit-offset="I:0" size="I:8">
        <type-tag size="I:8" alignment="I:8"><union-ref name="__sigaction_u" ref="0x1086fa170"/></type-tag>
      </field>
      <field name="sa_mask" ref="0x108701540" bit-offset="I:64" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="sigset_t" ref="0x1086eb740"/></typename>
        </type-int>
      </field>
      <field name="sa_flags" ref="0x1087015f0" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <attribute name="nonnull" loc="8:/usr/local/lib/ncc/deputy_nodeputy.h" ref="0x1081e2660" defined="" size="I:4" alignment="I:4">
      <field name="dummy" ref="0x1081e2ad0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <struct name="__double2" loc="669:/opt/local/lib/gcc47/gcc/x86_64-apple-darwin16/4.7.4/include-fixed/math.h" ref="0x10889b020" defined="" size="I:16" alignment="I:8">
      <field name="__sinval" ref="0x10889b530" bit-offset="I:0" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="__cosval" ref="0x10889b5e0" bit-offset="I:64" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
    </struct>
    <struct name="_opaque_pthread_t" loc="103:/usr/include/sys/_pthread/_pthread_types.h" ref="0x1084b19a0" defined="" size="I:8192" alignment="I:8">
      <field name="__sig" ref="0x1084b23e0" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__cleanup_stack" ref="0x1084b2490" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:24" alignment="I:8"><struct-ref name="__darwin_pthread_handler_rec" ref="0x1084aa470"/></type-tag>
        </type-pointer>
      </field>
      <field name="__opaque" ref="0x1084b2540" bit-offset="I:128" size="I:8176">
        <type-array elements="I:8176" size="I:8176" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <attribute name="number"  loc="NONE" ref="0x1081db020" size="V:" alignment="V:">
    </attribute>
    <enum loc="120:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h" ref="0x1093fab20" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="150:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h" ref="0x1093f6d70" defined="" size="I:1" alignment="I:1">
      <field name="adps" ref="0x1093f5020" bit-offset="I:0" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="adie" ref="0x1093f50d0" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="adif" ref="0x1093f5180" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="adfr" ref="0x1093f5230" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="adsc" ref="0x1093f52e0" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="aden" ref="0x1093f5390" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="sigstack" loc="367:/usr/include/sys/signal.h" ref="0x1086fe1a0" defined="" size="I:16" alignment="I:8">
      <field name="ss_sp" ref="0x1086fe740" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="ss_onstack" ref="0x1086fe7f0" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="radvisory" loc="363:/usr/include/sys/fcntl.h" ref="0x108d337f0" defined="" size="I:16" alignment="I:8">
      <field name="ra_offset" ref="0x108d33da0" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="off_t" ref="0x1089591e0"/></typename>
        </type-int>
      </field>
      <field name="ra_count" ref="0x108d33e50" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="node" loc="62:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/heap.c" ref="0x108a158e0" defined="" size="I:16" alignment="I:8">
      <field name="data" ref="0x108a15ee0" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="key" ref="0x108a2c020" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <union loc="98:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x109805020" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x109805230" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x1098052e0" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x109807770"/></type-tag>
      </field>
    </union>
    <struct name="linger" loc="312:/usr/include/sys/socket.h" ref="0x108d56960" defined="" size="I:8" alignment="I:4">
      <field name="l_onoff" ref="0x108d56ec0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="l_linger" ref="0x108d55020" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="__darwin_x86_debug_state32" loc="422:/usr/include/mach/i386/_structs.h" ref="0x1086c11f0" defined="" size="I:32" alignment="I:4">
      <field name="__dr0" ref="0x1086c0240" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__dr1" ref="0x1086c02f0" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__dr2" ref="0x1086c03a0" bit-offset="I:64" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__dr3" ref="0x1086c0450" bit-offset="I:96" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__dr4" ref="0x1086c0500" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__dr5" ref="0x1086c05b0" bit-offset="I:160" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__dr6" ref="0x1086c0660" bit-offset="I:192" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__dr7" ref="0x1086c0710" bit-offset="I:224" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <nx_struct name="serial_packet" loc="131:/Users/ytc/Applications/tinyos-main/tos/lib/serial/Serial.h" ref="0x108c90020" defined="" size="I:7" alignment="I:1">
      <field name="header" ref="0x108c90730" bit-offset="I:0" size="I:7">
        <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_header" ref="0x108c93bc0"/>
          <typename><typedef-ref name="serial_header_t" ref="0x108c92ca0"/></typename>
        </type-tag>
      </field>
      <field name="data" ref="0x108c907e0" bit-offset="I:56" size="I:0">
        <type-array elements="I:0" size="I:0" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x10864c020"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <struct loc="77:/usr/include/runetype.h" ref="0x1088bbbe0" defined="" size="I:3208" alignment="I:8">
      <field name="__magic" ref="0x1088bbdf0" bit-offset="I:0" size="I:8">
        <type-array elements="I:8" size="I:8" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__encoding" ref="0x1088bbea0" bit-offset="I:64" size="I:32">
        <type-array elements="I:32" size="I:32" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__sgetrune" ref="0x1088bbf50" bit-offset="I:320" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-int cname="int" size="I:4" alignment="I:4">
              <typename><typedef-ref name="__darwin_rune_t" ref="0x10849fce0"/></typename>
            </type-int>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-qualified const="">
                  <type-int cname="char" size="I:1" alignment="I:1"></type-int>
                </type-qualified>
              </type-pointer>
              <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
                <typename><typedef-ref name="__darwin_size_t" ref="0x10849f020"/></typename>
              </type-int>
              <type-pointer size="I:8" alignment="I:8">
                <type-pointer size="I:8" alignment="I:8">
                  <type-qualified const="">
                    <type-int cname="char" size="I:1" alignment="I:1"></type-int>
                  </type-qualified>
                </type-pointer>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="__sputrune" ref="0x1088cc070" bit-offset="I:384" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <function-parameters>
              <type-int cname="int" size="I:4" alignment="I:4">
                <typename><typedef-ref name="__darwin_rune_t" ref="0x10849fce0"/></typename>
              </type-int>
              <type-pointer size="I:8" alignment="I:8">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-pointer>
              <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
                <typename><typedef-ref name="__darwin_size_t" ref="0x10849f020"/></typename>
              </type-int>
              <type-pointer size="I:8" alignment="I:8">
                <type-pointer size="I:8" alignment="I:8">
                  <type-int cname="char" size="I:1" alignment="I:1"></type-int>
                </type-pointer>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="__invalid_rune" ref="0x1088cc170" bit-offset="I:448" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__darwin_rune_t" ref="0x10849fce0"/></typename>
        </type-int>
      </field>
      <field name="__runetype" ref="0x1088cc220" bit-offset="I:480" size="I:1024">
        <type-array elements="I:256" size="I:1024" alignment="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="__uint32_t" ref="0x10849b020"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="__maplower" ref="0x1088cc2d0" bit-offset="I:8672" size="I:1024">
        <type-array elements="I:256" size="I:1024" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="__darwin_rune_t" ref="0x10849fce0"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="__mapupper" ref="0x1088cc380" bit-offset="I:16864" size="I:1024">
        <type-array elements="I:256" size="I:1024" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="__darwin_rune_t" ref="0x10849fce0"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="__runetype_ext" ref="0x1088cc430" bit-offset="I:25088" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x1088c1290"/>
          <typename><typedef-ref name="_RuneRange" ref="0x1088c16b0"/></typename>
        </type-tag>
      </field>
      <field name="__maplower_ext" ref="0x1088cc4e0" bit-offset="I:25216" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x1088c1290"/>
          <typename><typedef-ref name="_RuneRange" ref="0x1088c16b0"/></typename>
        </type-tag>
      </field>
      <field name="__mapupper_ext" ref="0x1088cc590" bit-offset="I:25344" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x1088c1290"/>
          <typename><typedef-ref name="_RuneRange" ref="0x1088c16b0"/></typename>
        </type-tag>
      </field>
      <field name="__variable" ref="0x1088cc640" bit-offset="I:25472" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__variable_len" ref="0x1088cc6f0" bit-offset="I:25536" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__ncharclasses" ref="0x1088cc8a0" bit-offset="I:25568" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__charclasses" ref="0x1088cc950" bit-offset="I:25600" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:20" alignment="I:4"><struct-ref ref="0x1088c1e80"/>
            <typename><typedef-ref name="_RuneCharClass" ref="0x1088c02f0"/></typename>
          </type-tag>
        </type-pointer>
      </field>
    </struct>
    <struct name="timeval64" loc="31:/usr/include/sys/_types/_timeval64.h" ref="0x108a8a9e0" defined="" size="I:16" alignment="I:8">
      <field name="tv_sec" ref="0x108a89020" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__int64_t" ref="0x10849b3e0"/></typename>
        </type-int>
      </field>
      <field name="tv_usec" ref="0x108a890d0" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__int64_t" ref="0x10849b3e0"/></typename>
        </type-int>
      </field>
    </struct>
    <struct loc="170:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x1098496a0" defined="" size="I:1" alignment="I:1">
      <field name="psr321" ref="0x1098498b0" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="psr0" ref="0x109849960" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="pud" ref="0x109849a10" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="acme" ref="0x109849ac0" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0x109849b70" bit-offset="I:4" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="tsm" ref="0x109849c20" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="integer"  loc="NONE" ref="0x1081d8cf0" size="V:" alignment="V:">
    </attribute>
    <attribute name="exactlyonce" loc="99:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/tos.h" ref="0x1089a93a0" defined="" size="I:0" alignment="I:1">
    </attribute>
    <union name="message_footer" loc="55:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/platform_message.h" ref="0x108c8e3f0" defined="" size="I:2" alignment="I:1">
      <field name="tossim" ref="0x108c8e8f0" bit-offset="I:0" size="I:2">
        <type-tag size="I:2" alignment="I:1"><nx_struct-ref name="tossim_footer" ref="0x108c9b020"/>
          <typename><typedef-ref name="tossim_footer_t" ref="0x108c9b640"/></typename>
        </type-tag>
      </field>
    </union>
    <struct loc="43:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.h" ref="0x108cf9160" defined="" size="I:4" alignment="I:4">
      <field name="notUsed" ref="0x108cf9370" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <union name="message_metadata" loc="59:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/platform_message.h" ref="0x108c8edd0" defined="" size="I:8" alignment="I:1">
      <field name="tossim" ref="0x108c8c340" bit-offset="I:0" size="I:8">
        <type-tag size="I:8" alignment="I:1"><nx_struct-ref name="tossim_metadata" ref="0x108c9b9b0"/>
          <typename><typedef-ref name="tossim_metadata_t" ref="0x108c98090"/></typename>
        </type-tag>
      </field>
    </union>
    <attribute name="combine"  loc="NONE" ref="0x1081dc340" size="V:" alignment="V:">
      <field name="fn" ref="0x1081dc550" bit-offset="U:" bit-size="U:">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
    </attribute>
    <union name="__sigaction_u" loc="269:/usr/include/sys/signal.h" ref="0x1086fa170" defined="" size="I:8" alignment="I:8">
      <field name="__sa_handler" ref="0x1086f97e0" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="__sa_sigaction" ref="0x1086f98b0" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-int cname="int" size="I:4" alignment="I:4"></type-int>
              <type-pointer size="I:8" alignment="I:8">
                <type-tag size="I:104" alignment="I:8"><struct-ref name="__siginfo" ref="0x1086f2020"/></type-tag>
              </type-pointer>
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
    </union>
    <struct name="__darwin_mcontext64" loc="76:/usr/include/i386/_mcontext.h" ref="0x1086e5020" defined="" size="I:712" alignment="I:8">
      <field name="__es" ref="0x1086e5b10" bit-offset="I:0" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="__darwin_x86_exception_state64" ref="0x1086e03d0"/></type-tag>
      </field>
      <field name="__ss" ref="0x1086e5bc0" bit-offset="I:128" size="I:168">
        <type-tag size="I:168" alignment="I:8"><struct-ref name="__darwin_x86_thread_state64" ref="0x1086c0a10"/></type-tag>
      </field>
      <field name="__fs" ref="0x1086e5c70" bit-offset="I:1472" size="I:524">
        <type-tag size="I:524" alignment="I:4"><struct-ref name="__darwin_x86_float_state64" ref="0x1086c57d0"/></type-tag>
      </field>
    </struct>
    <struct name="__darwin_fp_status" loc="147:/usr/include/mach/i386/_structs.h" ref="0x1086a3930" defined="" size="I:2" alignment="I:2">
      <field name="__invalid" ref="0x1086a1820" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__denorm" ref="0x1086a18d0" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__zdiv" ref="0x1086a1980" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__ovrfl" ref="0x1086a1a30" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__undfl" ref="0x1086a1ae0" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__precis" ref="0x1086a1b90" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__stkflt" ref="0x1086a1c40" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__errsumm" ref="0x1086a1cf0" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__c0" ref="0x1086a1da0" bit-offset="I:8" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__c1" ref="0x1086a1e50" bit-offset="I:9" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__c2" ref="0x1086a1f00" bit-offset="I:10" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__tos" ref="0x1086a9020" bit-offset="I:11" bit-size="I:3">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__c3" ref="0x1086a90d0" bit-offset="I:14" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__busy" ref="0x1086a9280" bit-offset="I:15" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
    </struct>
    <struct name="group_source_req" loc="536:/usr/include/netinet/in.h" ref="0x108d8d4d0" defined="" size="I:264" alignment="I:8">
      <field name="gsr_interface" ref="0x108d8dea0" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x1084bb400"/></typename>
        </type-int>
      </field>
      <field name="gsr_group" ref="0x108d8df50" bit-offset="I:64" size="I:128">
        <type-tag size="I:128" alignment="I:8"><struct-ref name="sockaddr_storage" ref="0x108d51170"/></type-tag>
      </field>
      <field name="gsr_source" ref="0x108d8b030" bit-offset="I:1088" size="I:128">
        <type-tag size="I:128" alignment="I:8"><struct-ref name="sockaddr_storage" ref="0x108d51170"/></type-tag>
      </field>
    </struct>
    <struct name="__darwin_sigaltstack" loc="36:/usr/include/sys/_types/_sigaltstack.h" ref="0x1086ef910" defined="" size="I:24" alignment="I:8">
      <field name="ss_sp" ref="0x1086ee100" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="ss_size" ref="0x1086ee1b0" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__darwin_size_t" ref="0x10849f020"/></typename>
        </type-int>
      </field>
      <field name="ss_flags" ref="0x1086ee260" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="51:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_noise.h" ref="0x108abfc40" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <nx_struct name="serial_header" loc="123:/Users/ytc/Applications/tinyos-main/tos/lib/serial/Serial.h" ref="0x108c93bc0" defined="" size="I:7" alignment="I:1">
      <field name="dest" ref="0x108c92880" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x108c7ebb0"/></typename>
        </type-int>
      </field>
      <field name="src" ref="0x108c92930" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x108c7ebb0"/></typename>
        </type-int>
      </field>
      <field name="length" ref="0x108c929e0" bit-offset="I:32" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x10864c020"/></typename>
        </type-int>
      </field>
      <field name="group" ref="0x108c92a90" bit-offset="I:40" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_group_t" ref="0x108c7e7a0"/></typename>
        </type-int>
      </field>
      <field name="type" ref="0x108c92b40" bit-offset="I:48" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_id_t" ref="0x108c7e270"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <struct loc="44:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.h" ref="0x108cf9910" defined="" size="I:4" alignment="I:4">
      <field name="notUsed" ref="0x108cf9b20" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="87:/Users/ytc/Applications/tinyos-main/tos/lib/serial/Serial.h" ref="0x108c987c0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="sockproto" loc="417:/usr/include/sys/socket.h" ref="0x108d54760" defined="" size="I:4" alignment="I:2">
      <field name="sp_family" ref="0x108d54dc0" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10849a7e0"/></typename>
        </type-int>
      </field>
      <field name="sp_protocol" ref="0x108d54e70" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10849a7e0"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="5:/Users/ytc/Documents/workspace/NewMetricOR/src/NeighborDiscovery/NeighborDiscovery.h" ref="0x109b39cc0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union name="message_header" loc="50:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/platform_message.h" ref="0x108c8f730" defined="" size="I:7" alignment="I:1">
      <field name="tossim" ref="0x108c8fe50" bit-offset="I:0" size="I:7">
        <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="tossim_header" ref="0x108c7bab0"/>
          <typename><typedef-ref name="tossim_header_t" ref="0x108c7aba0"/></typename>
        </type-tag>
      </field>
      <field name="serial" ref="0x108c8ff00" bit-offset="I:0" size="I:7">
        <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_header" ref="0x108c93bc0"/>
          <typename><typedef-ref name="serial_header_t" ref="0x108c92ca0"/></typename>
        </type-tag>
      </field>
    </union>
    <struct name="timespec" loc="30:/usr/include/sys/_types/_timespec.h" ref="0x108a8a0e0" defined="" size="I:16" alignment="I:8">
      <field name="tv_sec" ref="0x108a8a6c0" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__darwin_time_t" ref="0x1084a2170"/></typename>
        </type-int>
      </field>
      <field name="tv_nsec" ref="0x108a8a770" bit-offset="I:64" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <attribute name="count" loc="11:/usr/local/lib/ncc/deputy_nodeputy.h" ref="0x1081e58d0" defined="" size="I:4" alignment="I:4">
      <field name="n" ref="0x1081e5c10" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <struct loc="87:/usr/include/stdlib.h" ref="0x108742c00" defined="" size="I:16" alignment="I:8">
      <field name="quot" ref="0x108742e10" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="rem" ref="0x108742ec0" bit-offset="I:64" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <struct name="NeighborSetNode" loc="43:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricOR.h" ref="0x108d11650" defined="" size="I:20" alignment="I:4">
      <field name="nodeid" ref="0x108d100a0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="sleepperiod" ref="0x108d10150" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="edc" ref="0x108d10200" bit-offset="I:64" size="I:4">
        <type-float cname="float" size="I:4" alignment="I:4"></type-float>
      </field>
      <field name="p" ref="0x108d102b0" bit-offset="I:96" size="I:4">
        <type-float cname="float" size="I:4" alignment="I:4"></type-float>
      </field>
      <field name="use" ref="0x108d10360" bit-offset="I:128" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x10897b190"/></typename>
        </type-int>
      </field>
    </struct>
    <union loc="150:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x10984cd30" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x10984cf40" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x10984a020" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x10984c3b0"/></type-tag>
      </field>
    </union>
    <enum loc="43:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h" ref="0x1094066e0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="bnd_nok" loc="10:/usr/local/lib/ncc/deputy_nodeputy.h" ref="0x1081e3d00" defined="" size="I:16" alignment="I:8">
      <field name="lo" ref="0x1081e51e0" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="hi" ref="0x1081e5290" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
    </attribute>
    <struct loc="60:/usr/include/runetype.h" ref="0x1088c35b0" defined="" size="I:24" alignment="I:8">
      <field name="__min" ref="0x1088c37c0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__darwin_rune_t" ref="0x10849fce0"/></typename>
        </type-int>
      </field>
      <field name="__max" ref="0x1088c3870" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__darwin_rune_t" ref="0x10849fce0"/></typename>
        </type-int>
      </field>
      <field name="__map" ref="0x1088c3920" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__darwin_rune_t" ref="0x10849fce0"/></typename>
        </type-int>
      </field>
      <field name="__types" ref="0x1088c39d0" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="__uint32_t" ref="0x10849b020"/></typename>
          </type-int>
        </type-pointer>
      </field>
    </struct>
    <enum loc="126:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128hardware.h" ref="0x109408d00" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="199:/usr/include/sys/wait.h" ref="0x108737990" defined="" size="I:4" alignment="I:4">
      <field name="w_Termsig" ref="0x108737ba0" bit-offset="I:0" bit-size="I:7">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="w_Coredump" ref="0x108737c50" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="w_Retcode" ref="0x108737d00" bit-offset="I:8" bit-size="I:8">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="w_Filler" ref="0x108737db0" bit-offset="I:16" bit-size="I:16">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="fstore" loc="419:/usr/include/sys/fcntl.h" ref="0x108d2e970" defined="" size="I:32" alignment="I:8">
      <field name="fst_flags" ref="0x108d2d5c0" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="fst_posmode" ref="0x108d2d670" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="fst_offset" ref="0x108d2d720" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="off_t" ref="0x1089591e0"/></typename>
        </type-int>
      </field>
      <field name="fst_length" ref="0x108d2d7d0" bit-offset="I:128" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="off_t" ref="0x1089591e0"/></typename>
        </type-int>
      </field>
      <field name="fst_bytesalloc" ref="0x108d2d880" bit-offset="I:192" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="off_t" ref="0x1089591e0"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="26:/Users/ytc/Applications/tinyos-main/tos/types/AM.h" ref="0x108c7b080" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="timezone" loc="129:/usr/include/sys/time.h" ref="0x108a87680" defined="" size="I:8" alignment="I:4">
      <field name="tz_minuteswest" ref="0x108a87c30" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tz_dsttime" ref="0x108a87ce0" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <union name="wait" loc="194:/usr/include/sys/wait.h" ref="0x108738ce0" defined="" size="I:4" alignment="I:4">
      <field name="w_status" ref="0x108736d20" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="w_T" ref="0x108736dd0" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x108737990"/></type-tag>
      </field>
      <field name="w_S" ref="0x108736e80" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x108736720"/></type-tag>
      </field>
    </union>
    <struct name="rusage_info_v0" loc="194:/usr/include/sys/resource.h" ref="0x1087160c0" defined="" size="I:96" alignment="I:8">
      <field name="ri_uuid" ref="0x108715d20" bit-offset="I:0" size="I:16">
        <type-array elements="I:16" size="I:16" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="ri_user_time" ref="0x108715dd0" bit-offset="I:128" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_system_time" ref="0x108715e80" bit-offset="I:192" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_pkg_idle_wkups" ref="0x108715f30" bit-offset="I:256" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_interrupt_wkups" ref="0x108714020" bit-offset="I:320" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_pageins" ref="0x1087140d0" bit-offset="I:384" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_wired_size" ref="0x108714180" bit-offset="I:448" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_resident_size" ref="0x108714230" bit-offset="I:512" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_phys_footprint" ref="0x1087142e0" bit-offset="I:576" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_proc_start_abstime" ref="0x108714390" bit-offset="I:640" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_proc_exit_abstime" ref="0x108714440" bit-offset="I:704" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="__darwin_ucontext" loc="34:/usr/include/sys/_types/_ucontext.h" ref="0x1086ee9a0" defined="" size="I:56" alignment="I:8">
      <field name="uc_onstack" ref="0x1086ecb30" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="uc_sigmask" ref="0x1086ecbe0" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__darwin_sigset_t" ref="0x1084a7860"/></typename>
        </type-int>
      </field>
      <field name="uc_stack" ref="0x1086ecc90" bit-offset="I:64" size="I:24">
        <type-tag size="I:24" alignment="I:8"><struct-ref name="__darwin_sigaltstack" ref="0x1086ef910"/></type-tag>
      </field>
      <field name="uc_link" ref="0x1086ecd40" bit-offset="I:256" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:56" alignment="I:8"><struct-ref name="__darwin_ucontext" ref="0x1086ee9a0"/></type-tag>
        </type-pointer>
      </field>
      <field name="uc_mcsize" ref="0x1086ecdf0" bit-offset="I:320" size="I:8">
        <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__darwin_size_t" ref="0x10849f020"/></typename>
        </type-int>
      </field>
      <field name="uc_mcontext" ref="0x1086ecea0" bit-offset="I:384" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:712" alignment="I:8"><struct-ref name="__darwin_mcontext64" ref="0x1086e5020"/></type-tag>
        </type-pointer>
      </field>
    </struct>
    <enum loc="47:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_log.c" ref="0x1089b36c0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="_opaque_pthread_once_t" loc="88:/usr/include/sys/_pthread/_pthread_types.h" ref="0x1084afb80" defined="" size="I:16" alignment="I:8">
      <field name="__sig" ref="0x1084b0240" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__opaque" ref="0x1084b02f0" bit-offset="I:64" size="I:8">
        <type-array elements="I:8" size="I:8" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <enum loc="14:/Users/ytc/Applications/tinyos-main/tos/types/AM.h" ref="0x108c7ca30" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="26:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricOR.h" ref="0x108d15840" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="sim_event" loc="53:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_event_queue.h" ref="0x108983020" defined="" size="I:48" alignment="I:8">
      <field name="time" ref="0x1089800a0" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="sim_time_t" ref="0x10897a320"/></typename>
        </type-int>
      </field>
      <field name="mote" ref="0x108980150" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="force" ref="0x108980200" bit-offset="I:128" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x10897b190"/></typename>
        </type-int>
      </field>
      <field name="cancelled" ref="0x1089802b0" bit-offset="I:136" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x10897b190"/></typename>
        </type-int>
      </field>
      <field name="data" ref="0x108980360" bit-offset="I:192" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="handle" ref="0x108980410" bit-offset="I:256" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x108983020"/>
                  <typename><typedef-ref name="sim_event_t" ref="0x108983410"/></typename>
                </type-tag>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="cleanup" ref="0x1089804e0" bit-offset="I:320" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x108983020"/>
                  <typename><typedef-ref name="sim_event_t" ref="0x108983410"/></typename>
                </type-tag>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
    </struct>
    <struct name="iovec" loc="30:/usr/include/sys/_types/_iovec_t.h" ref="0x108d19eb0" defined="" size="I:16" alignment="I:8">
      <field name="iov_base" ref="0x108d184d0" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="iov_len" ref="0x108d18580" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="size_t" ref="0x1081dea60"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="673:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h" ref="0x109386b40" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="__siginfo" loc="177:/usr/include/sys/signal.h" ref="0x1086f2020" defined="" size="I:104" alignment="I:8">
      <field name="si_signo" ref="0x1086f1540" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="si_errno" ref="0x1086f15f0" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="si_code" ref="0x1086f16a0" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="si_pid" ref="0x1086f1750" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="pid_t" ref="0x108697880"/></typename>
        </type-int>
      </field>
      <field name="si_uid" ref="0x1086f1800" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uid_t" ref="0x1086ebb70"/></typename>
        </type-int>
      </field>
      <field name="si_status" ref="0x1086f18b0" bit-offset="I:160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="si_addr" ref="0x1086f1960" bit-offset="I:192" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="si_value" ref="0x1086f1a10" bit-offset="I:256" size="I:8">
        <type-tag size="I:8" alignment="I:8"><union-ref name="sigval" ref="0x1086ebe40"/></type-tag>
      </field>
      <field name="si_band" ref="0x1086f1ac0" bit-offset="I:320" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__pad" ref="0x1086f1b70" bit-offset="I:384" size="I:56">
        <type-array elements="I:7" size="I:56" alignment="I:8">
          <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8"></type-int>
        </type-array>
      </field>
    </struct>
    <struct name="stat" loc="182:/usr/include/sys/stat.h" ref="0x108eb4e80" defined="" size="I:144" alignment="I:8">
      <field name="st_dev" ref="0x108eb0540" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="dev_t" ref="0x10879bdf0"/></typename>
        </type-int>
      </field>
      <field name="st_mode" ref="0x108eb05f0" bit-offset="I:32" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="mode_t" ref="0x10879a250"/></typename>
        </type-int>
      </field>
      <field name="st_nlink" ref="0x108eb06a0" bit-offset="I:48" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="nlink_t" ref="0x108d20160"/></typename>
        </type-int>
      </field>
      <field name="st_ino" ref="0x108eb0750" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__darwin_ino64_t" ref="0x1084a4460"/></typename>
        </type-int>
      </field>
      <field name="st_uid" ref="0x108eb0800" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uid_t" ref="0x1086ebb70"/></typename>
        </type-int>
      </field>
      <field name="st_gid" ref="0x108eb08b0" bit-offset="I:160" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="gid_t" ref="0x108d23890"/></typename>
        </type-int>
      </field>
      <field name="st_rdev" ref="0x108eb0960" bit-offset="I:192" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="dev_t" ref="0x10879bdf0"/></typename>
        </type-int>
      </field>
      <field name="st_atimespec" ref="0x108eb0a10" bit-offset="I:256" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timespec" ref="0x108a8a0e0"/></type-tag>
      </field>
      <field name="st_mtimespec" ref="0x108eb0ac0" bit-offset="I:384" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timespec" ref="0x108a8a0e0"/></type-tag>
      </field>
      <field name="st_ctimespec" ref="0x108eb0b70" bit-offset="I:512" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timespec" ref="0x108a8a0e0"/></type-tag>
      </field>
      <field name="st_birthtimespec" ref="0x108eb0c20" bit-offset="I:640" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timespec" ref="0x108a8a0e0"/></type-tag>
      </field>
      <field name="st_size" ref="0x108eb0cd0" bit-offset="I:768" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="off_t" ref="0x1089591e0"/></typename>
        </type-int>
      </field>
      <field name="st_blocks" ref="0x108eb0d80" bit-offset="I:832" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="blkcnt_t" ref="0x108d23020"/></typename>
        </type-int>
      </field>
      <field name="st_blksize" ref="0x108eb0f30" bit-offset="I:896" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="blksize_t" ref="0x108d23480"/></typename>
        </type-int>
      </field>
      <field name="st_flags" ref="0x108eaf020" bit-offset="I:928" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x10849b020"/></typename>
        </type-int>
      </field>
      <field name="st_gen" ref="0x108eaf0d0" bit-offset="I:960" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x10849b020"/></typename>
        </type-int>
      </field>
      <field name="st_lspare" ref="0x108eaf180" bit-offset="I:992" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__int32_t" ref="0x10849ab60"/></typename>
        </type-int>
      </field>
      <field name="st_qspare" ref="0x108eaf230" bit-offset="I:1024" size="I:16">
        <type-array elements="I:2" size="I:16" alignment="I:8">
          <type-int cname="long long" size="I:8" alignment="I:8">
            <typename><typedef-ref name="__int64_t" ref="0x10849b3e0"/></typename>
          </type-int>
        </type-array>
      </field>
    </struct>
    <nx_struct name="tossim_footer" loc="14:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimRadioMsg.h" ref="0x108c9b020" defined="" size="I:2" alignment="I:1">
      <field name="crc" ref="0x108c9b4e0" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
          <typename><typedef-ref name="nxle_uint16_t" ref="0x10864f1f0"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <enum loc="138:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h" ref="0x1093f8880" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="sim_packet" loc="59:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_packet.h" ref="0x108c6b660" defined="" size="I:0" alignment="I:1">
    </struct>
    <enum loc="75:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x10980bae0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="ip6_mtuinfo" loc="544:/usr/include/netinet6/in6.h" ref="0x108d9a450" defined="" size="I:32" alignment="I:4">
      <field name="ip6m_addr" ref="0x108d9ab00" bit-offset="I:0" size="I:28">
        <type-tag size="I:28" alignment="I:4"><struct-ref name="sockaddr_in6" ref="0x108da3990"/></type-tag>
      </field>
      <field name="ip6m_mtu" ref="0x108d9abb0" bit-offset="I:224" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x1084bb400"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="102:/Users/ytc/Applications/tinyos-main/tos/lib/serial/Serial.h" ref="0x108c96340" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="42:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.h" ref="0x108cfa940" defined="" size="I:4" alignment="I:4">
      <field name="notUsed" ref="0x108cfab50" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct loc="153:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x10984c3b0" defined="" size="I:1" alignment="I:1">
      <field name="tov0" ref="0x10984c5c0" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="ocf0" ref="0x10984c670" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="tov1" ref="0x10984c720" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="ocf1b" ref="0x10984c7d0" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="ocf1a" ref="0x10984c880" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="icf1" ref="0x10984c930" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="tov2" ref="0x10984c9e0" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="ocf2" ref="0x10984ca90" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="list_entry_s" loc="168:/Users/ytc/Documents/workspace/NewMetricOR/src/simclist.h" ref="0x108f03700" defined="" size="I:24" alignment="I:8">
      <field name="data" ref="0x108f020a0" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="next" ref="0x108f02150" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:24" alignment="I:8"><struct-ref name="list_entry_s" ref="0x108f03700"/></type-tag>
        </type-pointer>
      </field>
      <field name="prev" ref="0x108f02200" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:24" alignment="I:8"><struct-ref name="list_entry_s" ref="0x108f03700"/></type-tag>
        </type-pointer>
      </field>
    </struct>
    <struct name="__darwin_mcontext_avx64" loc="84:/usr/include/i386/_mcontext.h" ref="0x1086f0020" defined="" size="I:1032" alignment="I:8">
      <field name="__es" ref="0x1086f0b00" bit-offset="I:0" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="__darwin_x86_exception_state64" ref="0x1086e03d0"/></type-tag>
      </field>
      <field name="__ss" ref="0x1086f0bb0" bit-offset="I:128" size="I:168">
        <type-tag size="I:168" alignment="I:8"><struct-ref name="__darwin_x86_thread_state64" ref="0x1086c0a10"/></type-tag>
      </field>
      <field name="__fs" ref="0x1086f0c60" bit-offset="I:1472" size="I:844">
        <type-tag size="I:844" alignment="I:4"><struct-ref name="__darwin_x86_avx_state64" ref="0x1086cd5b0"/></type-tag>
      </field>
    </struct>
    <struct name="group_req" loc="531:/usr/include/netinet/in.h" ref="0x108d8ea50" defined="" size="I:136" alignment="I:8">
      <field name="gr_interface" ref="0x108d8d1c0" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x1084bb400"/></typename>
        </type-int>
      </field>
      <field name="gr_group" ref="0x108d8d270" bit-offset="I:64" size="I:128">
        <type-tag size="I:128" alignment="I:8"><struct-ref name="sockaddr_storage" ref="0x108d51170"/></type-tag>
      </field>
    </struct>
    <nx_struct name="serial_metadata" loc="136:/Users/ytc/Applications/tinyos-main/tos/lib/serial/Serial.h" ref="0x108c90d90" defined="" size="I:1" alignment="I:1">
      <field name="ack" ref="0x108c8f270" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x10864c020"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <union loc="153:/usr/include/netinet6/in6.h" ref="0x108da3140" defined="" size="I:16" alignment="I:4">
      <field name="__u6_addr8" ref="0x108da3350" bit-offset="I:0" size="I:16">
        <type-array elements="I:16" size="I:16" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="__uint8_t" ref="0x10849a090"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="__u6_addr16" ref="0x108da3400" bit-offset="I:0" size="I:16">
        <type-array elements="I:8" size="I:16" alignment="I:2">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="__uint16_t" ref="0x10849a7e0"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="__u6_addr32" ref="0x108da34b0" bit-offset="I:0" size="I:16">
        <type-array elements="I:4" size="I:16" alignment="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="__uint32_t" ref="0x10849b020"/></typename>
          </type-int>
        </type-array>
      </field>
    </union>
    <struct name="__darwin_mcontext32" loc="38:/usr/include/i386/_mcontext.h" ref="0x1086e81a0" defined="" size="I:600" alignment="I:4">
      <field name="__es" ref="0x1086e8c80" bit-offset="I:0" size="I:12">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="__darwin_i386_exception_state" ref="0x1086c2210"/></type-tag>
      </field>
      <field name="__ss" ref="0x1086e8d30" bit-offset="I:96" size="I:64">
        <type-tag size="I:64" alignment="I:4"><struct-ref name="__darwin_i386_thread_state" ref="0x1086966f0"/></type-tag>
      </field>
      <field name="__fs" ref="0x1086e8de0" bit-offset="I:608" size="I:524">
        <type-tag size="I:524" alignment="I:4"><struct-ref name="__darwin_i386_float_state" ref="0x1086a8d70"/></type-tag>
      </field>
    </struct>
    <enum loc="63:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x10980d6b0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="atmostonce" loc="97:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/tos.h" ref="0x1089aabb0" defined="" size="I:0" alignment="I:1">
    </attribute>
    <struct name="overheardcountlistnode" loc="51:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricOR.h" ref="0x108d10870" defined="" size="I:12" alignment="I:4">
      <field name="nodeid" ref="0x108d0f0e0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="overheardcount" ref="0x108d0f190" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="forwardcount" ref="0x108d0f240" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="fpunchhole" loc="428:/usr/include/sys/fcntl.h" ref="0x108d2dd40" defined="" size="I:24" alignment="I:8">
      <field name="fp_flags" ref="0x108d2c7e0" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="reserved" ref="0x108d2c890" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="fp_offset" ref="0x108d2c940" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="off_t" ref="0x1089591e0"/></typename>
        </type-int>
      </field>
      <field name="fp_length" ref="0x108d2c9f0" bit-offset="I:128" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="off_t" ref="0x1089591e0"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="sigvec" loc="348:/usr/include/sys/signal.h" ref="0x1086ff1a0" defined="" size="I:16" alignment="I:8">
      <field name="sv_handler" ref="0x1086ffdc0" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="sv_mask" ref="0x1086ffe90" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="sv_flags" ref="0x1086fff40" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="51:/Users/ytc/Applications/tinyos-main/tos/types/TinyError.h" ref="0x108a78490" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="300:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x109831290" defined="" size="I:1" alignment="I:1">
      <field name="ocie1c" ref="0x1098314a0" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="ocie3c" ref="0x109831550" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="toie3" ref="0x109831600" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="ocie3b" ref="0x1098316b0" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="ocie3a" ref="0x109831760" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="ticie3" ref="0x109831810" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0x1098318c0" bit-offset="I:6" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
    </struct>
    <enum name="uio_rw" loc="90:/usr/include/sys/uio.h" ref="0x108d18790" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="list_attributes_s" loc="177:/Users/ytc/Documents/workspace/NewMetricOR/src/simclist.h" ref="0x108f02480" defined="" size="I:56" alignment="I:8">
      <field name="comparator" ref="0x108f01740" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-qualified const="">
                  <type-void size="I:1" alignment="I:1"></type-void>
                </type-qualified>
              </type-pointer>
              <type-pointer size="I:8" alignment="I:8">
                <type-qualified const="">
                  <type-void size="I:1" alignment="I:1"></type-void>
                </type-qualified>
              </type-pointer>
            </function-parameters>
          </type-function>
          <typename><typedef-ref name="element_comparator" ref="0x108f0a730"/></typename>
        </type-pointer>
      </field>
      <field name="seeker" ref="0x108f017f0" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-qualified const="">
                  <type-void size="I:1" alignment="I:1"></type-void>
                </type-qualified>
              </type-pointer>
              <type-pointer size="I:8" alignment="I:8">
                <type-qualified const="">
                  <type-void size="I:1" alignment="I:1"></type-void>
                </type-qualified>
              </type-pointer>
            </function-parameters>
          </type-function>
          <typename><typedef-ref name="element_seeker" ref="0x108f09650"/></typename>
        </type-pointer>
      </field>
      <field name="meter" ref="0x108f018a0" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
              <typename><typedef-ref name="size_t" ref="0x1081dea60"/></typename>
            </type-int>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-qualified const="">
                  <type-void size="I:1" alignment="I:1"></type-void>
                </type-qualified>
              </type-pointer>
            </function-parameters>
          </type-function>
          <typename><typedef-ref name="element_meter" ref="0x108f072a0"/></typename>
        </type-pointer>
      </field>
      <field name="copy_data" ref="0x108f01950" bit-offset="I:192" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="hasher" ref="0x108f01a00" bit-offset="I:256" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-int cname="int" size="I:4" alignment="I:4">
              <typename><typedef-ref name="list_hash_t" ref="0x108f0d090"/></typename>
            </type-int>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-qualified const="">
                  <type-void size="I:1" alignment="I:1"></type-void>
                </type-qualified>
              </type-pointer>
            </function-parameters>
          </type-function>
          <typename><typedef-ref name="element_hash_computer" ref="0x108f07e40"/></typename>
        </type-pointer>
      </field>
      <field name="serializer" ref="0x108f01ab0" bit-offset="I:320" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-pointer size="I:8" alignment="I:8">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-qualified const="">
                  <type-void size="I:1" alignment="I:1"></type-void>
                </type-qualified>
              </type-pointer>
              <type-pointer size="I:8" alignment="I:8">
                <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
                  <typename><typedef-ref name="uint32_t" ref="0x1084bb400"/></typename>
                </type-int>
              </type-pointer>
            </function-parameters>
          </type-function>
          <typename><typedef-ref name="element_serializer" ref="0x108f06dd0"/></typename>
        </type-pointer>
      </field>
      <field name="unserializer" ref="0x108f01b60" bit-offset="I:384" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-pointer size="I:8" alignment="I:8">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-qualified const="">
                  <type-void size="I:1" alignment="I:1"></type-void>
                </type-qualified>
              </type-pointer>
              <type-pointer size="I:8" alignment="I:8">
                <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
                  <typename><typedef-ref name="uint32_t" ref="0x1084bb400"/></typename>
                </type-int>
              </type-pointer>
            </function-parameters>
          </type-function>
          <typename><typedef-ref name="element_unserializer" ref="0x108f03050"/></typename>
        </type-pointer>
      </field>
    </struct>
    <struct loc="41:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.h" ref="0x1081df4d0" defined="" size="I:4" alignment="I:4">
      <field name="notUsed" ref="0x1081df6e0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="132:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h" ref="0x1093f9e80" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="cmsghdr" loc="577:/usr/include/sys/socket.h" ref="0x108d72190" defined="" size="I:12" alignment="I:4">
      <field name="cmsg_len" ref="0x108d72930" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="socklen_t" ref="0x108d5a480"/></typename>
        </type-int>
      </field>
      <field name="cmsg_level" ref="0x108d729e0" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="cmsg_type" ref="0x108d72a90" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="rusage_info_v3" loc="250:/usr/include/sys/resource.h" ref="0x108722260" defined="" size="I:232" alignment="I:8">
      <field name="ri_uuid" ref="0x108729b30" bit-offset="I:0" size="I:16">
        <type-array elements="I:16" size="I:16" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="ri_user_time" ref="0x108729be0" bit-offset="I:128" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_system_time" ref="0x108729c90" bit-offset="I:192" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_pkg_idle_wkups" ref="0x108729d40" bit-offset="I:256" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_interrupt_wkups" ref="0x108729df0" bit-offset="I:320" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_pageins" ref="0x108729ea0" bit-offset="I:384" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_wired_size" ref="0x108729f50" bit-offset="I:448" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_resident_size" ref="0x108728030" bit-offset="I:512" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_phys_footprint" ref="0x1087280e0" bit-offset="I:576" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_proc_start_abstime" ref="0x108728190" bit-offset="I:640" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_proc_exit_abstime" ref="0x108728240" bit-offset="I:704" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_child_user_time" ref="0x1087282f0" bit-offset="I:768" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_child_system_time" ref="0x1087283a0" bit-offset="I:832" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_child_pkg_idle_wkups" ref="0x108728550" bit-offset="I:896" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_child_interrupt_wkups" ref="0x108728600" bit-offset="I:960" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_child_pageins" ref="0x1087286b0" bit-offset="I:1024" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_child_elapsed_abstime" ref="0x108728760" bit-offset="I:1088" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_diskio_bytesread" ref="0x108728810" bit-offset="I:1152" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_diskio_byteswritten" ref="0x1087288c0" bit-offset="I:1216" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_cpu_time_qos_default" ref="0x108728970" bit-offset="I:1280" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_cpu_time_qos_maintenance" ref="0x108728a20" bit-offset="I:1344" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_cpu_time_qos_background" ref="0x108728ad0" bit-offset="I:1408" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_cpu_time_qos_utility" ref="0x108728b80" bit-offset="I:1472" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_cpu_time_qos_legacy" ref="0x108728c30" bit-offset="I:1536" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_cpu_time_qos_user_initiated" ref="0x108728ce0" bit-offset="I:1600" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_cpu_time_qos_user_interactive" ref="0x108726020" bit-offset="I:1664" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_billed_system_time" ref="0x1087260d0" bit-offset="I:1728" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_serviced_system_time" ref="0x108726180" bit-offset="I:1792" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="_opaque_pthread_rwlockattr_t" loc="98:/usr/include/sys/_pthread/_pthread_types.h" ref="0x1084b1020" defined="" size="I:24" alignment="I:8">
      <field name="__sig" ref="0x1084b1690" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__opaque" ref="0x1084b1740" bit-offset="I:64" size="I:16">
        <type-array elements="I:16" size="I:16" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <enum loc="79:/usr/include/sys/wait.h" ref="0x108699a00" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="hwevent"  loc="NONE" ref="0x1081dba90" size="V:" alignment="V:">
    </attribute>
    <struct name="sa_endpoints" loc="300:/usr/include/sys/socket.h" ref="0x108d571e0" defined="" size="I:40" alignment="I:8">
      <field name="sae_srcif" ref="0x108d56250" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="sae_srcaddr" ref="0x108d56300" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-qualified const="">
            <type-tag size="I:16" alignment="I:1"><struct-ref name="sockaddr" ref="0x108d57650"/></type-tag>
          </type-qualified>
        </type-pointer>
      </field>
      <field name="sae_srcaddrlen" ref="0x108d563b0" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="socklen_t" ref="0x108d5a480"/></typename>
        </type-int>
      </field>
      <field name="sae_dstaddr" ref="0x108d56460" bit-offset="I:192" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-qualified const="">
            <type-tag size="I:16" alignment="I:1"><struct-ref name="sockaddr" ref="0x108d57650"/></type-tag>
          </type-qualified>
        </type-pointer>
      </field>
      <field name="sae_dstaddrlen" ref="0x108d56510" bit-offset="I:256" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="socklen_t" ref="0x108d5a480"/></typename>
        </type-int>
      </field>
    </struct>
    <struct loc="73:/Users/ytc/Documents/workspace/NewMetricOR/src/simclist.h" ref="0x108f0c1f0" defined="" size="I:40" alignment="I:8">
      <field name="version" ref="0x108f0c400" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x1084bb020"/></typename>
        </type-int>
      </field>
      <field name="timestamp" ref="0x108f0c4b0" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="int64_t" ref="0x1084b97f0"/></typename>
        </type-int>
      </field>
      <field name="list_size" ref="0x108f0c560" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x1084bb400"/></typename>
        </type-int>
      </field>
      <field name="list_numels" ref="0x108f0c610" bit-offset="I:160" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x1084bb400"/></typename>
        </type-int>
      </field>
      <field name="list_hash" ref="0x108f0c6c0" bit-offset="I:192" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="list_hash_t" ref="0x108f0d090"/></typename>
        </type-int>
      </field>
      <field name="dumpsize" ref="0x108f0c770" bit-offset="I:224" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x1084bb400"/></typename>
        </type-int>
      </field>
      <field name="consistent" ref="0x108f0c820" bit-offset="I:256" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct loc="315:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x10982d810" defined="" size="I:1" alignment="I:1">
      <field name="ocf1c" ref="0x10982da20" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="ocf3c" ref="0x10982dad0" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="tov3" ref="0x10982db80" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="ocf3b" ref="0x10982dc30" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="ocf3a" ref="0x10982dce0" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="icf3" ref="0x10982dd90" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0x10982de40" bit-offset="I:6" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="hashtable" ref="0x1089a7210" size="V:" alignment="V:">
    </struct>
    <struct name="heap" loc="61:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/heap.h" ref="0x108a1e690" defined="" size="I:24" alignment="I:8">
      <field name="size" ref="0x108a1ede0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="data" ref="0x108a1ee90" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="private_size" ref="0x108a1ef40" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="211:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x109844c50" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="safe"  loc="NONE" ref="0x1081dcce0" size="V:" alignment="V:">
    </attribute>
    <union loc="133:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x10984e4d0" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x10984e6e0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x10984e790" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x10984fae0"/></type-tag>
      </field>
    </union>
    <struct name="sockaddr_in6" loc="170:/usr/include/netinet6/in6.h" ref="0x108da3990" defined="" size="I:28" alignment="I:4">
      <field name="sin6_len" ref="0x108da28e0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="__uint8_t" ref="0x10849a090"/></typename>
        </type-int>
      </field>
      <field name="sin6_family" ref="0x108da2990" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="sa_family_t" ref="0x108d5a020"/></typename>
        </type-int>
      </field>
      <field name="sin6_port" ref="0x108da2a40" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="in_port_t" ref="0x108d210d0"/></typename>
        </type-int>
      </field>
      <field name="sin6_flowinfo" ref="0x108da2af0" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x10849b020"/></typename>
        </type-int>
      </field>
      <field name="sin6_addr" ref="0x108da2ba0" bit-offset="I:64" size="I:16">
        <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x108da5510"/></type-tag>
      </field>
      <field name="sin6_scope_id" ref="0x108da2c50" bit-offset="I:192" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x10849b020"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="log2phys" loc="473:/usr/include/sys/fcntl.h" ref="0x108d29b80" defined="" size="I:24" alignment="I:8">
      <field name="l2p_flags" ref="0x108d4c490" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="l2p_contigbytes" ref="0x108d4c540" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="off_t" ref="0x1089591e0"/></typename>
        </type-int>
      </field>
      <field name="l2p_devoffset" ref="0x108d4c5f0" bit-offset="I:128" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="off_t" ref="0x1089591e0"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="ipv6_mreq" loc="528:/usr/include/netinet6/in6.h" ref="0x108d9b080" defined="" size="I:20" alignment="I:4">
      <field name="ipv6mr_multiaddr" ref="0x108d9b790" bit-offset="I:0" size="I:16">
        <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x108da5510"/></type-tag>
      </field>
      <field name="ipv6mr_interface" ref="0x108d9b840" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="__darwin_i386_avx_state" loc="269:/usr/include/mach/i386/_structs.h" ref="0x1086b3e80" defined="" size="I:716" alignment="I:4">
      <field name="__fpu_reserved" ref="0x1086b4e10" bit-offset="I:0" size="I:8">
        <type-array elements="I:2" size="I:8" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </type-array>
      </field>
      <field name="__fpu_fcw" ref="0x1086b4ec0" bit-offset="I:64" size="I:2">
        <type-tag size="I:2" alignment="I:2"><struct-ref name="__darwin_fp_control" ref="0x10869b390"/></type-tag>
      </field>
      <field name="__fpu_fsw" ref="0x1086bd020" bit-offset="I:80" size="I:2">
        <type-tag size="I:2" alignment="I:2"><struct-ref name="__darwin_fp_status" ref="0x1086a3930"/></type-tag>
      </field>
      <field name="__fpu_ftw" ref="0x1086bd0d0" bit-offset="I:96" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="__uint8_t" ref="0x10849a090"/></typename>
        </type-int>
      </field>
      <field name="__fpu_rsrv1" ref="0x1086bd180" bit-offset="I:104" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="__uint8_t" ref="0x10849a090"/></typename>
        </type-int>
      </field>
      <field name="__fpu_fop" ref="0x1086bd230" bit-offset="I:112" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10849a7e0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_ip" ref="0x1086bd2e0" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x10849b020"/></typename>
        </type-int>
      </field>
      <field name="__fpu_cs" ref="0x1086bd390" bit-offset="I:160" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10849a7e0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_rsrv2" ref="0x1086bd440" bit-offset="I:176" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10849a7e0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_dp" ref="0x1086bd4f0" bit-offset="I:192" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x10849b020"/></typename>
        </type-int>
      </field>
      <field name="__fpu_ds" ref="0x1086bd5a0" bit-offset="I:224" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10849a7e0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_rsrv3" ref="0x1086bd650" bit-offset="I:240" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10849a7e0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_mxcsr" ref="0x1086bd700" bit-offset="I:256" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x10849b020"/></typename>
        </type-int>
      </field>
      <field name="__fpu_mxcsrmask" ref="0x1086bd8b0" bit-offset="I:288" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x10849b020"/></typename>
        </type-int>
      </field>
      <field name="__fpu_stmm0" ref="0x1086bd960" bit-offset="I:320" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x1086a9a30"/></type-tag>
      </field>
      <field name="__fpu_stmm1" ref="0x1086bda10" bit-offset="I:448" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x1086a9a30"/></type-tag>
      </field>
      <field name="__fpu_stmm2" ref="0x1086bdac0" bit-offset="I:576" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x1086a9a30"/></type-tag>
      </field>
      <field name="__fpu_stmm3" ref="0x1086bdb70" bit-offset="I:704" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x1086a9a30"/></type-tag>
      </field>
      <field name="__fpu_stmm4" ref="0x1086bdc20" bit-offset="I:832" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x1086a9a30"/></type-tag>
      </field>
      <field name="__fpu_stmm5" ref="0x1086bdcd0" bit-offset="I:960" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x1086a9a30"/></type-tag>
      </field>
      <field name="__fpu_stmm6" ref="0x1086bdd80" bit-offset="I:1088" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x1086a9a30"/></type-tag>
      </field>
      <field name="__fpu_stmm7" ref="0x1086bde30" bit-offset="I:1216" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x1086a9a30"/></type-tag>
      </field>
      <field name="__fpu_xmm0" ref="0x1086bdee0" bit-offset="I:1344" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_xmm1" ref="0x1086bb020" bit-offset="I:1472" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_xmm2" ref="0x1086bb0d0" bit-offset="I:1600" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_xmm3" ref="0x1086bb380" bit-offset="I:1728" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_xmm4" ref="0x1086bb430" bit-offset="I:1856" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_xmm5" ref="0x1086bb4e0" bit-offset="I:1984" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_xmm6" ref="0x1086bb590" bit-offset="I:2112" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_xmm7" ref="0x1086bb640" bit-offset="I:2240" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_rsrv4" ref="0x1086bb6f0" bit-offset="I:2368" size="I:224">
        <type-array elements="I:224" size="I:224" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__fpu_reserved1" ref="0x1086bb7a0" bit-offset="I:4160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__avx_reserved1" ref="0x1086bb850" bit-offset="I:4192" size="I:64">
        <type-array elements="I:64" size="I:64" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__fpu_ymmh0" ref="0x1086bb900" bit-offset="I:4704" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_ymmh1" ref="0x1086bb9b0" bit-offset="I:4832" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_ymmh2" ref="0x1086bba60" bit-offset="I:4960" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_ymmh3" ref="0x1086bbb10" bit-offset="I:5088" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_ymmh4" ref="0x1086bbbc0" bit-offset="I:5216" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_ymmh5" ref="0x1086bbc70" bit-offset="I:5344" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_ymmh6" ref="0x1086bbd20" bit-offset="I:5472" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_ymmh7" ref="0x1086bbdd0" bit-offset="I:5600" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
    </struct>
    <struct name="__darwin_i386_thread_state" loc="43:/usr/include/mach/i386/_structs.h" ref="0x1086966f0" defined="" size="I:64" alignment="I:4">
      <field name="__eax" ref="0x10869d560" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__ebx" ref="0x10869d610" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__ecx" ref="0x10869d6c0" bit-offset="I:64" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__edx" ref="0x10869d770" bit-offset="I:96" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__edi" ref="0x10869d820" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__esi" ref="0x10869d8d0" bit-offset="I:160" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__ebp" ref="0x10869d980" bit-offset="I:192" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__esp" ref="0x10869da30" bit-offset="I:224" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__ss" ref="0x10869dae0" bit-offset="I:256" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__eflags" ref="0x10869db90" bit-offset="I:288" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__eip" ref="0x10869dc40" bit-offset="I:320" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__cs" ref="0x10869dcf0" bit-offset="I:352" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__ds" ref="0x10869dda0" bit-offset="I:384" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__es" ref="0x10869df50" bit-offset="I:416" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__fs" ref="0x10869b030" bit-offset="I:448" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__gs" ref="0x10869b0e0" bit-offset="I:480" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="63:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_log.c" ref="0x1089b0a10" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="__darwin_x86_float_state64" loc="509:/usr/include/mach/i386/_structs.h" ref="0x1086c57d0" defined="" size="I:524" alignment="I:4">
      <field name="__fpu_reserved" ref="0x1086d24b0" bit-offset="I:0" size="I:8">
        <type-array elements="I:2" size="I:8" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </type-array>
      </field>
      <field name="__fpu_fcw" ref="0x1086d2560" bit-offset="I:64" size="I:2">
        <type-tag size="I:2" alignment="I:2"><struct-ref name="__darwin_fp_control" ref="0x10869b390"/></type-tag>
      </field>
      <field name="__fpu_fsw" ref="0x1086d2610" bit-offset="I:80" size="I:2">
        <type-tag size="I:2" alignment="I:2"><struct-ref name="__darwin_fp_status" ref="0x1086a3930"/></type-tag>
      </field>
      <field name="__fpu_ftw" ref="0x1086d26c0" bit-offset="I:96" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="__uint8_t" ref="0x10849a090"/></typename>
        </type-int>
      </field>
      <field name="__fpu_rsrv1" ref="0x1086d2770" bit-offset="I:104" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="__uint8_t" ref="0x10849a090"/></typename>
        </type-int>
      </field>
      <field name="__fpu_fop" ref="0x1086d2820" bit-offset="I:112" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10849a7e0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_ip" ref="0x1086d28d0" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x10849b020"/></typename>
        </type-int>
      </field>
      <field name="__fpu_cs" ref="0x1086d2980" bit-offset="I:160" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10849a7e0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_rsrv2" ref="0x1086d2a30" bit-offset="I:176" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10849a7e0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_dp" ref="0x1086d2ae0" bit-offset="I:192" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x10849b020"/></typename>
        </type-int>
      </field>
      <field name="__fpu_ds" ref="0x1086d2b90" bit-offset="I:224" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10849a7e0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_rsrv3" ref="0x1086d2c40" bit-offset="I:240" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10849a7e0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_mxcsr" ref="0x1086d2cf0" bit-offset="I:256" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x10849b020"/></typename>
        </type-int>
      </field>
      <field name="__fpu_mxcsrmask" ref="0x1086d2ea0" bit-offset="I:288" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x10849b020"/></typename>
        </type-int>
      </field>
      <field name="__fpu_stmm0" ref="0x1086d2f50" bit-offset="I:320" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x1086a9a30"/></type-tag>
      </field>
      <field name="__fpu_stmm1" ref="0x1086d0030" bit-offset="I:448" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x1086a9a30"/></type-tag>
      </field>
      <field name="__fpu_stmm2" ref="0x1086d00e0" bit-offset="I:576" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x1086a9a30"/></type-tag>
      </field>
      <field name="__fpu_stmm3" ref="0x1086d0190" bit-offset="I:704" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x1086a9a30"/></type-tag>
      </field>
      <field name="__fpu_stmm4" ref="0x1086d0240" bit-offset="I:832" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x1086a9a30"/></type-tag>
      </field>
      <field name="__fpu_stmm5" ref="0x1086d02f0" bit-offset="I:960" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x1086a9a30"/></type-tag>
      </field>
      <field name="__fpu_stmm6" ref="0x1086d03a0" bit-offset="I:1088" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x1086a9a30"/></type-tag>
      </field>
      <field name="__fpu_stmm7" ref="0x1086d0450" bit-offset="I:1216" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x1086a9a30"/></type-tag>
      </field>
      <field name="__fpu_xmm0" ref="0x1086d0500" bit-offset="I:1344" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_xmm1" ref="0x1086d05b0" bit-offset="I:1472" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_xmm2" ref="0x1086d0660" bit-offset="I:1600" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_xmm3" ref="0x1086d0910" bit-offset="I:1728" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_xmm4" ref="0x1086d09c0" bit-offset="I:1856" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_xmm5" ref="0x1086d0a70" bit-offset="I:1984" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_xmm6" ref="0x1086d0b20" bit-offset="I:2112" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_xmm7" ref="0x1086d0bd0" bit-offset="I:2240" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_xmm8" ref="0x1086d0c80" bit-offset="I:2368" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_xmm9" ref="0x1086d0d30" bit-offset="I:2496" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_xmm10" ref="0x1086d0de0" bit-offset="I:2624" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_xmm11" ref="0x1086d0e90" bit-offset="I:2752" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_xmm12" ref="0x1086d0f40" bit-offset="I:2880" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_xmm13" ref="0x1086cd020" bit-offset="I:3008" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_xmm14" ref="0x1086cd0d0" bit-offset="I:3136" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_xmm15" ref="0x1086cd180" bit-offset="I:3264" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_rsrv4" ref="0x1086cd230" bit-offset="I:3392" size="I:96">
        <type-array elements="I:96" size="I:96" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__fpu_reserved1" ref="0x1086cd2e0" bit-offset="I:4160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="52:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x109812380" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="234:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x10983fa40" defined="" size="I:1" alignment="I:1">
      <field name="cs" ref="0x10983fc50" bit-offset="I:0" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="wgm32" ref="0x10983fd00" bit-offset="I:3" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0x10983fdb0" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="ices1" ref="0x10983fe60" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="icnc1" ref="0x10983ff10" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="__darwin_x86_exception_state64" loc="751:/usr/include/mach/i386/_structs.h" ref="0x1086e03d0" defined="" size="I:16" alignment="I:8">
      <field name="__trapno" ref="0x1086e0e20" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10849a7e0"/></typename>
        </type-int>
      </field>
      <field name="__cpu" ref="0x1086e0ed0" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10849a7e0"/></typename>
        </type-int>
      </field>
      <field name="__err" ref="0x1086ea020" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x10849b020"/></typename>
        </type-int>
      </field>
      <field name="__faultvaddr" ref="0x1086ea0d0" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x10849b7f0"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="54:/Users/ytc/Applications/tinyos-main/tos/platforms/micaz/sim/platform_hardware.h" ref="0x1093f3020" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="in6_pktinfo" loc="536:/usr/include/netinet6/in6.h" ref="0x108d9ba80" defined="" size="I:20" alignment="I:4">
      <field name="ipi6_addr" ref="0x108d9a160" bit-offset="I:0" size="I:16">
        <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x108da5510"/></type-tag>
      </field>
      <field name="ipi6_ifindex" ref="0x108d9a210" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="tm" loc="74:/usr/include/time.h" ref="0x108a9e3c0" defined="" size="I:56" alignment="I:8">
      <field name="tm_sec" ref="0x108a9d7a0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_min" ref="0x108a9d850" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_hour" ref="0x108a9d900" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_mday" ref="0x108a9d9b0" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_mon" ref="0x108a9da60" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_year" ref="0x108a9db10" bit-offset="I:160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_wday" ref="0x108a9dbc0" bit-offset="I:192" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_yday" ref="0x108a9dc70" bit-offset="I:224" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_isdst" ref="0x108a9dd20" bit-offset="I:256" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_gmtoff" ref="0x108a9ddd0" bit-offset="I:320" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="tm_zone" ref="0x108a9de80" bit-offset="I:384" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
    </struct>
    <enum loc="152:/usr/include/time.h" ref="0x108ab8ce0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="_opaque_pthread_attr_t" loc="63:/usr/include/sys/_pthread/_pthread_types.h" ref="0x1084ab6f0" defined="" size="I:64" alignment="I:8">
      <field name="__sig" ref="0x1084ac020" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__opaque" ref="0x1084ac0d0" bit-offset="I:64" size="I:56">
        <type-array elements="I:56" size="I:56" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <struct name="sim_log_output" loc="51:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_log.c" ref="0x1089b3d90" defined="" size="I:16" alignment="I:8">
      <field name="num" ref="0x1089b2440" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="files" ref="0x1089b24f0" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="I:152" alignment="I:8"><struct-ref name="__sFILE" ref="0x108901980"/>
              <typename><typedef-ref name="FILE" ref="0x10890d930"/></typename>
            </type-tag>
          </type-pointer>
        </type-pointer>
      </field>
    </struct>
    <struct name="sockaddr_in" loc="374:/usr/include/netinet/in.h" ref="0x108d95730" defined="" size="I:16" alignment="I:4">
      <field name="sin_len" ref="0x108d934c0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="__uint8_t" ref="0x10849a090"/></typename>
        </type-int>
      </field>
      <field name="sin_family" ref="0x108d93570" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="sa_family_t" ref="0x108d5a020"/></typename>
        </type-int>
      </field>
      <field name="sin_port" ref="0x108d93620" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="in_port_t" ref="0x108d210d0"/></typename>
        </type-int>
      </field>
      <field name="sin_addr" ref="0x108d936d0" bit-offset="I:32" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref name="in_addr" ref="0x108d950c0"/></type-tag>
      </field>
      <field name="sin_zero" ref="0x108d93780" bit-offset="I:64" size="I:8">
        <type-array elements="I:8" size="I:8" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <struct name="ip_mreqn" loc="511:/usr/include/netinet/in.h" ref="0x108d8f020" defined="" size="I:12" alignment="I:4">
      <field name="imr_multiaddr" ref="0x108d8f8e0" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref name="in_addr" ref="0x108d950c0"/></type-tag>
      </field>
      <field name="imr_address" ref="0x108d8f990" bit-offset="I:32" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref name="in_addr" ref="0x108d950c0"/></type-tag>
      </field>
      <field name="imr_ifindex" ref="0x108d8fa40" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="58:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h" ref="0x1094042b0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="radio_stats" loc="109:/Users/ytc/Applications/tinyos-main/tos/lib/serial/Serial.h" ref="0x108c955c0" defined="" size="I:18" alignment="I:2">
      <field name="version" ref="0x108c93020" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="flags" ref="0x108c930d0" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="reserved" ref="0x108c93180" bit-offset="I:16" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="platform" ref="0x108c93230" bit-offset="I:24" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="MTU" ref="0x108c932e0" bit-offset="I:32" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x1084bb020"/></typename>
        </type-int>
      </field>
      <field name="radio_crc_fail" ref="0x108c93390" bit-offset="I:48" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x1084bb020"/></typename>
        </type-int>
      </field>
      <field name="radio_queue_drops" ref="0x108c93440" bit-offset="I:64" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x1084bb020"/></typename>
        </type-int>
      </field>
      <field name="serial_crc_fail" ref="0x108c934f0" bit-offset="I:80" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x1084bb020"/></typename>
        </type-int>
      </field>
      <field name="serial_tx_fail" ref="0x108c935a0" bit-offset="I:96" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x1084bb020"/></typename>
        </type-int>
      </field>
      <field name="serial_short_packets" ref="0x108c93650" bit-offset="I:112" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x1084bb020"/></typename>
        </type-int>
      </field>
      <field name="serial_proto_drops" ref="0x108c93700" bit-offset="I:128" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x1084bb020"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="dmemset" loc="15:/usr/local/lib/ncc/deputy_nodeputy.h" ref="0x1081e8080" defined="" size="I:12" alignment="I:4">
      <field name="a1" ref="0x1081e8550" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a2" ref="0x1081e8600" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a3" ref="0x1081e86b0" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <attribute name="one_nok" loc="14:/usr/local/lib/ncc/deputy_nodeputy.h" ref="0x1081e7670" defined="" size="I:4" alignment="I:4">
      <field name="dummy" ref="0x1081e79e0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <struct name="__darwin_mcontext_avx32" loc="46:/usr/include/i386/_mcontext.h" ref="0x1086e70e0" defined="" size="I:792" alignment="I:4">
      <field name="__es" ref="0x1086e7bb0" bit-offset="I:0" size="I:12">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="__darwin_i386_exception_state" ref="0x1086c2210"/></type-tag>
      </field>
      <field name="__ss" ref="0x1086e7c60" bit-offset="I:96" size="I:64">
        <type-tag size="I:64" alignment="I:4"><struct-ref name="__darwin_i386_thread_state" ref="0x1086966f0"/></type-tag>
      </field>
      <field name="__fs" ref="0x1086e7d10" bit-offset="I:608" size="I:716">
        <type-tag size="I:716" alignment="I:4"><struct-ref name="__darwin_i386_avx_state" ref="0x1086b3e80"/></type-tag>
      </field>
    </struct>
    <struct loc="67:/usr/include/runetype.h" ref="0x1088c1290" defined="" size="I:16" alignment="I:8">
      <field name="__nranges" ref="0x1088c14a0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__ranges" ref="0x1088c1550" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:24" alignment="I:8"><struct-ref ref="0x1088c35b0"/>
            <typename><typedef-ref name="_RuneEntry" ref="0x1088c3b30"/></typename>
          </type-tag>
        </type-pointer>
      </field>
    </struct>
    <struct name="flocktimeout" loc="350:/usr/include/sys/fcntl.h" ref="0x108d35e60" defined="" size="I:40" alignment="I:8">
      <field name="fl" ref="0x108d33510" bit-offset="I:0" size="I:24">
        <type-tag size="I:24" alignment="I:8"><struct-ref name="flock" ref="0x108d38e60"/></type-tag>
      </field>
      <field name="timeout" ref="0x108d335c0" bit-offset="I:192" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timespec" ref="0x108a8a0e0"/></type-tag>
      </field>
    </struct>
    <struct name="_filesec" ref="0x108d4c820" size="V:" alignment="V:">
    </struct>
    <struct name="__sbuf" loc="88:/usr/include/stdio.h" ref="0x108902df0" defined="" size="I:16" alignment="I:8">
      <field name="_base" ref="0x1089013c0" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_size" ref="0x108901470" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <attribute name="atleastonce" loc="98:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/tos.h" ref="0x1089a9020" defined="" size="I:0" alignment="I:1">
    </attribute>
    <union loc="312:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x10982c110" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x10982c320" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x10982c3d0" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x10982d810"/></type-tag>
      </field>
    </union>
    <struct name="fssearchblock" ref="0x108ebf0c0" size="V:" alignment="V:">
    </struct>
    <struct loc="194:/Users/ytc/Documents/workspace/NewMetricOR/src/simclist.h" ref="0x108efe680" defined="" size="I:120" alignment="I:8">
      <field name="head_sentinel" ref="0x108efe890" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:24" alignment="I:8"><struct-ref name="list_entry_s" ref="0x108f03700"/></type-tag>
        </type-pointer>
      </field>
      <field name="tail_sentinel" ref="0x108efe940" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:24" alignment="I:8"><struct-ref name="list_entry_s" ref="0x108f03700"/></type-tag>
        </type-pointer>
      </field>
      <field name="mid" ref="0x108efe9f0" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:24" alignment="I:8"><struct-ref name="list_entry_s" ref="0x108f03700"/></type-tag>
        </type-pointer>
      </field>
      <field name="numels" ref="0x108efeaa0" bit-offset="I:192" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="spareels" ref="0x108efeb50" bit-offset="I:256" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="I:24" alignment="I:8"><struct-ref name="list_entry_s" ref="0x108f03700"/></type-tag>
          </type-pointer>
        </type-pointer>
      </field>
      <field name="spareelsnum" ref="0x108efec00" bit-offset="I:320" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="iter_active" ref="0x108efecb0" bit-offset="I:352" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="iter_pos" ref="0x108efed60" bit-offset="I:384" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="iter_curentry" ref="0x108efee10" bit-offset="I:448" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:24" alignment="I:8"><struct-ref name="list_entry_s" ref="0x108f03700"/></type-tag>
        </type-pointer>
      </field>
      <field name="attrs" ref="0x108efeec0" bit-offset="I:512" size="I:56">
        <type-tag size="I:56" alignment="I:8"><struct-ref name="list_attributes_s" ref="0x108f02480"/></type-tag>
      </field>
    </struct>
    <struct name="fsignatures" loc="387:/usr/include/sys/fcntl.h" ref="0x108d31a30" defined="" size="I:24" alignment="I:8">
      <field name="fs_file_start" ref="0x108d30350" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="off_t" ref="0x1089591e0"/></typename>
        </type-int>
      </field>
      <field name="fs_blob_start" ref="0x108d30400" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="fs_blob_size" ref="0x108d304b0" bit-offset="I:128" size="I:8">
        <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="size_t" ref="0x1081dea60"/></typename>
        </type-int>
      </field>
    </struct>
    <struct loc="101:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x109807770" defined="" size="I:1" alignment="I:1">
      <field name="cs" ref="0x109807980" bit-offset="I:0" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="wgm1" ref="0x109807a30" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="com" ref="0x109807ae0" bit-offset="I:4" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="wgm0" ref="0x109807b90" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="foc" ref="0x109807c40" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
    </struct>
    <union loc="76:/usr/include/i386/_types.h" ref="0x10849cc10" defined="" size="I:128" alignment="I:8">
      <field name="__mbstate8" ref="0x10849ce20" bit-offset="I:0" size="I:128">
        <type-array elements="I:128" size="I:128" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="_mbstateL" ref="0x10849ced0" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
    </union>
    <struct loc="218:/usr/include/sys/wait.h" ref="0x108736720" defined="" size="I:4" alignment="I:4">
      <field name="w_Stopval" ref="0x108736930" bit-offset="I:0" bit-size="I:8">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="w_Stopsig" ref="0x1087369e0" bit-offset="I:8" bit-size="I:8">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="w_Filler" ref="0x108736a90" bit-offset="I:16" bit-size="I:16">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <union loc="250:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x10983b790" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x10983b9a0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x10983ba50" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x10983b080"/></type-tag>
      </field>
    </union>
    <struct name="itimerval" loc="91:/usr/include/sys/time.h" ref="0x108a89ba0" defined="" size="I:32" alignment="I:8">
      <field name="it_interval" ref="0x108a872c0" bit-offset="I:0" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timeval" ref="0x10870f0e0"/></type-tag>
      </field>
      <field name="it_value" ref="0x108a87370" bit-offset="I:128" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timeval" ref="0x10870f0e0"/></type-tag>
      </field>
    </struct>
    <struct name="__sFILEX" ref="0x1089016a0" size="V:" alignment="V:">
    </struct>
    <struct name="in6_addr" loc="152:/usr/include/netinet6/in6.h" ref="0x108da5510" defined="" size="I:16" alignment="I:4">
      <field name="__u6_addr" ref="0x108da3740" bit-offset="I:0" size="I:16">
        <type-tag size="I:16" alignment="I:4"><union-ref ref="0x108da3140"/></type-tag>
      </field>
    </struct>
    <struct loc="93:/usr/include/stdlib.h" ref="0x10874d6e0" defined="" size="I:16" alignment="I:8">
      <field name="quot" ref="0x10874d8f0" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="rem" ref="0x10874d9a0" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <enum loc="126:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h" ref="0x1093f9480" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="94:/Users/ytc/Applications/tinyos-main/tos/lib/serial/Serial.h" ref="0x108c971a0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="__sigaction" loc="276:/usr/include/sys/signal.h" ref="0x1086f9b30" defined="" size="I:24" alignment="I:8">
      <field name="__sigaction_u" ref="0x108702740" bit-offset="I:0" size="I:8">
        <type-tag size="I:8" alignment="I:8"><union-ref name="__sigaction_u" ref="0x1086fa170"/></type-tag>
      </field>
      <field name="sa_tramp" ref="0x1087027f0" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
              <type-int cname="int" size="I:4" alignment="I:4"></type-int>
              <type-int cname="int" size="I:4" alignment="I:4"></type-int>
              <type-pointer size="I:8" alignment="I:8">
                <type-tag size="I:104" alignment="I:8"><struct-ref name="__siginfo" ref="0x1086f2020"/>
                  <typename><typedef-ref name="siginfo_t" ref="0x1086f1cd0"/></typename>
                </type-tag>
              </type-pointer>
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="sa_mask" ref="0x108702900" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="sigset_t" ref="0x1086eb740"/></typename>
        </type-int>
      </field>
      <field name="sa_flags" ref="0x1087029b0" bit-offset="I:160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <attribute name="count_nok" loc="12:/usr/local/lib/ncc/deputy_nodeputy.h" ref="0x1081e62d0" defined="" size="I:4" alignment="I:4">
      <field name="n" ref="0x1081e6610" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <struct name="__darwin_mmst_reg" loc="191:/usr/include/mach/i386/_structs.h" ref="0x1086a9a30" defined="" size="I:16" alignment="I:1">
      <field name="__mmst_reg" ref="0x1086a8240" bit-offset="I:0" size="I:10">
        <type-array elements="I:10" size="I:10" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__mmst_rsrv" ref="0x1086a82f0" bit-offset="I:80" size="I:6">
        <type-array elements="I:6" size="I:6" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <struct name="sigevent" loc="168:/usr/include/sys/signal.h" ref="0x1086f6700" defined="" size="I:32" alignment="I:8">
      <field name="sigev_notify" ref="0x1086f39e0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="sigev_signo" ref="0x1086f3a90" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="sigev_value" ref="0x1086f3b40" bit-offset="I:64" size="I:8">
        <type-tag size="I:8" alignment="I:8"><union-ref name="sigval" ref="0x1086ebe40"/></type-tag>
      </field>
      <field name="sigev_notify_function" ref="0x1086f3bf0" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-tag size="I:8" alignment="I:8"><union-ref name="sigval" ref="0x1086ebe40"/></type-tag>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="sigev_notify_attributes" ref="0x1086f3cc0" bit-offset="I:192" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:64" alignment="I:8"><struct-ref name="_opaque_pthread_attr_t" ref="0x1084ab6f0"/>
            <typename><typedef-ref name="pthread_attr_t" ref="0x1086ef550"/></typename>
          </type-tag>
        </type-pointer>
      </field>
    </struct>
    <struct name="rusage_info_v1" loc="208:/usr/include/sys/resource.h" ref="0x108714680" defined="" size="I:144" alignment="I:8">
      <field name="ri_uuid" ref="0x10871d300" bit-offset="I:0" size="I:16">
        <type-array elements="I:16" size="I:16" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="ri_user_time" ref="0x10871d3b0" bit-offset="I:128" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_system_time" ref="0x10871d460" bit-offset="I:192" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_pkg_idle_wkups" ref="0x10871d510" bit-offset="I:256" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_interrupt_wkups" ref="0x10871d5c0" bit-offset="I:320" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_pageins" ref="0x10871d670" bit-offset="I:384" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_wired_size" ref="0x10871d720" bit-offset="I:448" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_resident_size" ref="0x10871d7d0" bit-offset="I:512" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_phys_footprint" ref="0x10871d880" bit-offset="I:576" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_proc_start_abstime" ref="0x10871d930" bit-offset="I:640" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_proc_exit_abstime" ref="0x10871d9e0" bit-offset="I:704" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_child_user_time" ref="0x10871da90" bit-offset="I:768" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_child_system_time" ref="0x10871db40" bit-offset="I:832" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_child_pkg_idle_wkups" ref="0x10871dcf0" bit-offset="I:896" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_child_interrupt_wkups" ref="0x10871dda0" bit-offset="I:960" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_child_pageins" ref="0x10871de50" bit-offset="I:1024" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
      <field name="ri_child_elapsed_abstime" ref="0x10871df00" bit-offset="I:1088" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
        </type-int>
      </field>
    </struct>
    <struct loc="72:/usr/include/runetype.h" ref="0x1088c1e80" defined="" size="I:20" alignment="I:4">
      <field name="__name" ref="0x1088c00e0" bit-offset="I:0" size="I:14">
        <type-array elements="I:14" size="I:14" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__mask" ref="0x1088c0190" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x10849b020"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="25:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h" ref="0x109365950" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="clockinfo" loc="172:/usr/include/sys/time.h" ref="0x108a85020" defined="" size="I:20" alignment="I:4">
      <field name="hz" ref="0x108a859b0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tick" ref="0x108a85a60" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tickadj" ref="0x108a85b10" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="stathz" ref="0x108a85bc0" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="profhz" ref="0x108a85c70" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="fbootstraptransfer" loc="443:/usr/include/sys/fcntl.h" ref="0x108d2aca0" defined="" size="I:24" alignment="I:8">
      <field name="fbt_offset" ref="0x108d295b0" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="off_t" ref="0x1089591e0"/></typename>
        </type-int>
      </field>
      <field name="fbt_length" ref="0x108d29660" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="size_t" ref="0x1081dea60"/></typename>
        </type-int>
      </field>
      <field name="fbt_buffer" ref="0x108d29710" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
    </struct>
    <attribute name="one" loc="13:/usr/local/lib/ncc/deputy_nodeputy.h" ref="0x1081e6c30" defined="" size="I:4" alignment="I:4">
      <field name="dummy" ref="0x1081e7020" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <attribute name="spontaneous"  loc="NONE" ref="0x1081dc080" size="V:" alignment="V:">
    </attribute>
    <nx_struct name="DataPayload" loc="36:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricOR.h" ref="0x108d124a0" defined="" size="I:8" alignment="I:1">
      <field name="sourceid" ref="0x108d12ee0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x10864c020"/></typename>
        </type-int>
      </field>
      <field name="hops" ref="0x108d11020" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x10864c020"/></typename>
        </type-int>
      </field>
      <field name="edc" ref="0x108d110d0" bit-offset="I:16" size="I:4">
        <type-float cname="float" size="I:4" alignment="I:1" network="nx_float">
          <typename><typedef-ref name="nx_float" ref="0x108cf8ac0"/></typename>
        </type-float>
      </field>
      <field name="index" ref="0x108d11180" bit-offset="I:48" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x10864c740"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <struct name="in_addr" loc="301:/usr/include/netinet/in.h" ref="0x108d950c0" defined="" size="I:4" alignment="I:4">
      <field name="s_addr" ref="0x108d954d0" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="in_addr_t" ref="0x108d23ca0"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="__darwin_x86_debug_state64" loc="771:/usr/include/mach/i386/_structs.h" ref="0x1086ea3b0" defined="" size="I:64" alignment="I:8">
      <field name="__dr0" ref="0x1086e99c0" bit-offset="I:0" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x10849b7f0"/></typename>
        </type-int>
      </field>
      <field name="__dr1" ref="0x1086e9a70" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x10849b7f0"/></typename>
        </type-int>
      </field>
      <field name="__dr2" ref="0x1086e9b20" bit-offset="I:128" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x10849b7f0"/></typename>
        </type-int>
      </field>
      <field name="__dr3" ref="0x1086e9bd0" bit-offset="I:192" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x10849b7f0"/></typename>
        </type-int>
      </field>
      <field name="__dr4" ref="0x1086e9c80" bit-offset="I:256" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x10849b7f0"/></typename>
        </type-int>
      </field>
      <field name="__dr5" ref="0x1086e9d30" bit-offset="I:320" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x10849b7f0"/></typename>
        </type-int>
      </field>
      <field name="__dr6" ref="0x1086e9de0" bit-offset="I:384" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x10849b7f0"/></typename>
        </type-int>
      </field>
      <field name="__dr7" ref="0x1086e9e90" bit-offset="I:448" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x10849b7f0"/></typename>
        </type-int>
      </field>
    </struct>
    <struct loc="196:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x109845410" defined="" size="I:1" alignment="I:1">
      <field name="wgm10" ref="0x109845620" bit-offset="I:0" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="comC" ref="0x1098456d0" bit-offset="I:2" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="comB" ref="0x109845780" bit-offset="I:4" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="comA" ref="0x109845830" bit-offset="I:6" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="496:/usr/include/sys/fcntl.h" ref="0x108d4ced0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="__darwin_fp_control" loc="89:/usr/include/mach/i386/_structs.h" ref="0x10869b390" defined="" size="I:2" alignment="I:2">
      <field name="__invalid" ref="0x1086a4a50" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__denorm" ref="0x1086a4b00" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__zdiv" ref="0x1086a4bb0" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__ovrfl" ref="0x1086a4c60" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__undfl" ref="0x1086a4d10" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__precis" ref="0x1086a4dc0" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__pc" ref="0x1086a4f10" bit-offset="I:8" bit-size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__rc" ref="0x1086a3020" bit-offset="I:10" bit-size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
    </struct>
    <attribute name="unsafe"  loc="NONE" ref="0x1081de020" size="V:" alignment="V:">
    </attribute>
    <struct name="flock" loc="335:/usr/include/sys/fcntl.h" ref="0x108d38e60" defined="" size="I:24" alignment="I:8">
      <field name="l_start" ref="0x108d35930" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="off_t" ref="0x1089591e0"/></typename>
        </type-int>
      </field>
      <field name="l_len" ref="0x108d359e0" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="off_t" ref="0x1089591e0"/></typename>
        </type-int>
      </field>
      <field name="l_pid" ref="0x108d35a90" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="pid_t" ref="0x108697880"/></typename>
        </type-int>
      </field>
      <field name="l_type" ref="0x108d35b40" bit-offset="I:160" size="I:2">
        <type-int cname="short" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="l_whence" ref="0x108d35bf0" bit-offset="I:176" size="I:2">
        <type-int cname="short" size="I:2" alignment="I:2"></type-int>
      </field>
    </struct>
    <struct name="__darwin_x86_avx_state64" loc="560:/usr/include/mach/i386/_structs.h" ref="0x1086cd5b0" defined="" size="I:844" alignment="I:4">
      <field name="__fpu_reserved" ref="0x1086db200" bit-offset="I:0" size="I:8">
        <type-array elements="I:2" size="I:8" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </type-array>
      </field>
      <field name="__fpu_fcw" ref="0x1086db2b0" bit-offset="I:64" size="I:2">
        <type-tag size="I:2" alignment="I:2"><struct-ref name="__darwin_fp_control" ref="0x10869b390"/></type-tag>
      </field>
      <field name="__fpu_fsw" ref="0x1086db360" bit-offset="I:80" size="I:2">
        <type-tag size="I:2" alignment="I:2"><struct-ref name="__darwin_fp_status" ref="0x1086a3930"/></type-tag>
      </field>
      <field name="__fpu_ftw" ref="0x1086db410" bit-offset="I:96" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="__uint8_t" ref="0x10849a090"/></typename>
        </type-int>
      </field>
      <field name="__fpu_rsrv1" ref="0x1086db4c0" bit-offset="I:104" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="__uint8_t" ref="0x10849a090"/></typename>
        </type-int>
      </field>
      <field name="__fpu_fop" ref="0x1086db570" bit-offset="I:112" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10849a7e0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_ip" ref="0x1086db620" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x10849b020"/></typename>
        </type-int>
      </field>
      <field name="__fpu_cs" ref="0x1086db6d0" bit-offset="I:160" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10849a7e0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_rsrv2" ref="0x1086db780" bit-offset="I:176" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10849a7e0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_dp" ref="0x1086db830" bit-offset="I:192" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x10849b020"/></typename>
        </type-int>
      </field>
      <field name="__fpu_ds" ref="0x1086db8e0" bit-offset="I:224" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10849a7e0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_rsrv3" ref="0x1086db990" bit-offset="I:240" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10849a7e0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_mxcsr" ref="0x1086dba40" bit-offset="I:256" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x10849b020"/></typename>
        </type-int>
      </field>
      <field name="__fpu_mxcsrmask" ref="0x1086dbbf0" bit-offset="I:288" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x10849b020"/></typename>
        </type-int>
      </field>
      <field name="__fpu_stmm0" ref="0x1086dbca0" bit-offset="I:320" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x1086a9a30"/></type-tag>
      </field>
      <field name="__fpu_stmm1" ref="0x1086dbd50" bit-offset="I:448" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x1086a9a30"/></type-tag>
      </field>
      <field name="__fpu_stmm2" ref="0x1086dbe00" bit-offset="I:576" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x1086a9a30"/></type-tag>
      </field>
      <field name="__fpu_stmm3" ref="0x1086dbeb0" bit-offset="I:704" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x1086a9a30"/></type-tag>
      </field>
      <field name="__fpu_stmm4" ref="0x1086d9020" bit-offset="I:832" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x1086a9a30"/></type-tag>
      </field>
      <field name="__fpu_stmm5" ref="0x1086d90d0" bit-offset="I:960" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x1086a9a30"/></type-tag>
      </field>
      <field name="__fpu_stmm6" ref="0x1086d9180" bit-offset="I:1088" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x1086a9a30"/></type-tag>
      </field>
      <field name="__fpu_stmm7" ref="0x1086d9230" bit-offset="I:1216" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x1086a9a30"/></type-tag>
      </field>
      <field name="__fpu_xmm0" ref="0x1086d92e0" bit-offset="I:1344" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_xmm1" ref="0x1086d9390" bit-offset="I:1472" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_xmm2" ref="0x1086d9440" bit-offset="I:1600" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_xmm3" ref="0x1086d96f0" bit-offset="I:1728" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_xmm4" ref="0x1086d97a0" bit-offset="I:1856" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_xmm5" ref="0x1086d9850" bit-offset="I:1984" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_xmm6" ref="0x1086d9900" bit-offset="I:2112" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_xmm7" ref="0x1086d99b0" bit-offset="I:2240" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_xmm8" ref="0x1086d9a60" bit-offset="I:2368" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_xmm9" ref="0x1086d9b10" bit-offset="I:2496" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_xmm10" ref="0x1086d9bc0" bit-offset="I:2624" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_xmm11" ref="0x1086d9c70" bit-offset="I:2752" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_xmm12" ref="0x1086d9d20" bit-offset="I:2880" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_xmm13" ref="0x1086d9dd0" bit-offset="I:3008" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_xmm14" ref="0x1086d9e80" bit-offset="I:3136" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_xmm15" ref="0x1086d9f30" bit-offset="I:3264" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_rsrv4" ref="0x1086e2020" bit-offset="I:3392" size="I:96">
        <type-array elements="I:96" size="I:96" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__fpu_reserved1" ref="0x1086e20d0" bit-offset="I:4160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__avx_reserved1" ref="0x1086e2180" bit-offset="I:4192" size="I:64">
        <type-array elements="I:64" size="I:64" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__fpu_ymmh0" ref="0x1086e2230" bit-offset="I:4704" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_ymmh1" ref="0x1086e22e0" bit-offset="I:4832" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_ymmh2" ref="0x1086e2390" bit-offset="I:4960" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_ymmh3" ref="0x1086e2440" bit-offset="I:5088" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_ymmh4" ref="0x1086e24f0" bit-offset="I:5216" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_ymmh5" ref="0x1086e25a0" bit-offset="I:5344" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_ymmh6" ref="0x1086e2650" bit-offset="I:5472" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_ymmh7" ref="0x1086e2700" bit-offset="I:5600" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_ymmh8" ref="0x1086e2bb0" bit-offset="I:5728" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_ymmh9" ref="0x1086e2c60" bit-offset="I:5856" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_ymmh10" ref="0x1086e2d10" bit-offset="I:5984" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_ymmh11" ref="0x1086e2dc0" bit-offset="I:6112" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_ymmh12" ref="0x1086e2e70" bit-offset="I:6240" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_ymmh13" ref="0x1086e2f20" bit-offset="I:6368" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_ymmh14" ref="0x1086e0020" bit-offset="I:6496" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_ymmh15" ref="0x1086e00d0" bit-offset="I:6624" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
    </struct>
    <struct name="__darwin_x86_thread_state64" loc="454:/usr/include/mach/i386/_structs.h" ref="0x1086c0a10" defined="" size="I:168" alignment="I:8">
      <field name="__rax" ref="0x1086c7580" bit-offset="I:0" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x10849b7f0"/></typename>
        </type-int>
      </field>
      <field name="__rbx" ref="0x1086c7630" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x10849b7f0"/></typename>
        </type-int>
      </field>
      <field name="__rcx" ref="0x1086c76e0" bit-offset="I:128" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x10849b7f0"/></typename>
        </type-int>
      </field>
      <field name="__rdx" ref="0x1086c7790" bit-offset="I:192" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x10849b7f0"/></typename>
        </type-int>
      </field>
      <field name="__rdi" ref="0x1086c7840" bit-offset="I:256" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x10849b7f0"/></typename>
        </type-int>
      </field>
      <field name="__rsi" ref="0x1086c78f0" bit-offset="I:320" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x10849b7f0"/></typename>
        </type-int>
      </field>
      <field name="__rbp" ref="0x1086c79a0" bit-offset="I:384" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x10849b7f0"/></typename>
        </type-int>
      </field>
      <field name="__rsp" ref="0x1086c7a50" bit-offset="I:448" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x10849b7f0"/></typename>
        </type-int>
      </field>
      <field name="__r8" ref="0x1086c7b00" bit-offset="I:512" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x10849b7f0"/></typename>
        </type-int>
      </field>
      <field name="__r9" ref="0x1086c7bb0" bit-offset="I:576" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x10849b7f0"/></typename>
        </type-int>
      </field>
      <field name="__r10" ref="0x1086c7c60" bit-offset="I:640" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x10849b7f0"/></typename>
        </type-int>
      </field>
      <field name="__r11" ref="0x1086c7d10" bit-offset="I:704" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x10849b7f0"/></typename>
        </type-int>
      </field>
      <field name="__r12" ref="0x1086c7dc0" bit-offset="I:768" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x10849b7f0"/></typename>
        </type-int>
      </field>
      <field name="__r13" ref="0x1086c5020" bit-offset="I:832" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x10849b7f0"/></typename>
        </type-int>
      </field>
      <field name="__r14" ref="0x1086c50d0" bit-offset="I:896" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x10849b7f0"/></typename>
        </type-int>
      </field>
      <field name="__r15" ref="0x1086c5180" bit-offset="I:960" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x10849b7f0"/></typename>
        </type-int>
      </field>
      <field name="__rip" ref="0x1086c5230" bit-offset="I:1024" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x10849b7f0"/></typename>
        </type-int>
      </field>
      <field name="__rflags" ref="0x1086c52e0" bit-offset="I:1088" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x10849b7f0"/></typename>
        </type-int>
      </field>
      <field name="__cs" ref="0x1086c5390" bit-offset="I:1152" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x10849b7f0"/></typename>
        </type-int>
      </field>
      <field name="__fs" ref="0x1086c5440" bit-offset="I:1216" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x10849b7f0"/></typename>
        </type-int>
      </field>
      <field name="__gs" ref="0x1086c54f0" bit-offset="I:1280" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x10849b7f0"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="in_pktinfo" loc="612:/usr/include/netinet/in.h" ref="0x108da7710" defined="" size="I:12" alignment="I:4">
      <field name="ipi_ifindex" ref="0x108da5020" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="ipi_spec_dst" ref="0x108da50d0" bit-offset="I:32" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref name="in_addr" ref="0x108d950c0"/></type-tag>
      </field>
      <field name="ipi_addr" ref="0x108da5180" bit-offset="I:64" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref name="in_addr" ref="0x108d950c0"/></type-tag>
      </field>
    </struct>
    <struct name="rusage" loc="152:/usr/include/sys/resource.h" ref="0x10870e020" defined="" size="I:144" alignment="I:8">
      <field name="ru_utime" ref="0x10870de30" bit-offset="I:0" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timeval" ref="0x10870f0e0"/></type-tag>
      </field>
      <field name="ru_stime" ref="0x10870dee0" bit-offset="I:128" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timeval" ref="0x10870f0e0"/></type-tag>
      </field>
      <field name="ru_maxrss" ref="0x10870c020" bit-offset="I:256" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_ixrss" ref="0x10870c0d0" bit-offset="I:320" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_idrss" ref="0x10870c180" bit-offset="I:384" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_isrss" ref="0x10870c230" bit-offset="I:448" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_minflt" ref="0x10870c2e0" bit-offset="I:512" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_majflt" ref="0x10870c390" bit-offset="I:576" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_nswap" ref="0x10870c440" bit-offset="I:640" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_inblock" ref="0x10870c4f0" bit-offset="I:704" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_oublock" ref="0x10870c5a0" bit-offset="I:768" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_msgsnd" ref="0x10870c650" bit-offset="I:832" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_msgrcv" ref="0x10870c700" bit-offset="I:896" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_nsignals" ref="0x10870c8b0" bit-offset="I:960" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_nvcsw" ref="0x10870c960" bit-offset="I:1024" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_nivcsw" ref="0x10870ca10" bit-offset="I:1088" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <struct name="list_dump_header_s" loc="1119:/Users/ytc/Documents/workspace/NewMetricOR/src/simclist.h" ref="0x108f5b1a0" defined="" size="I:40" alignment="I:8">
      <field name="ver" ref="0x108f5a160" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x1084bb020"/></typename>
        </type-int>
      </field>
      <field name="timestamp" ref="0x108f5a210" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="int64_t" ref="0x1084b97f0"/></typename>
        </type-int>
      </field>
      <field name="rndterm" ref="0x108f5a2c0" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="int32_t" ref="0x1084b9420"/></typename>
        </type-int>
      </field>
      <field name="totlistlen" ref="0x108f5a370" bit-offset="I:160" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x1084bb400"/></typename>
        </type-int>
      </field>
      <field name="numels" ref="0x108f5a420" bit-offset="I:192" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x1084bb400"/></typename>
        </type-int>
      </field>
      <field name="elemlen" ref="0x108f5a4d0" bit-offset="I:224" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x1084bb400"/></typename>
        </type-int>
      </field>
      <field name="listhash" ref="0x108f5a580" bit-offset="I:256" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="int32_t" ref="0x1084b9420"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="rlimit" loc="325:/usr/include/sys/resource.h" ref="0x1087268c0" defined="" size="I:16" alignment="I:8">
      <field name="rlim_cur" ref="0x108726eb0" bit-offset="I:0" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="rlim_t" ref="0x10870fb90"/></typename>
        </type-int>
      </field>
      <field name="rlim_max" ref="0x108725020" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="rlim_t" ref="0x10870fb90"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="__darwin_i386_exception_state" loc="402:/usr/include/mach/i386/_structs.h" ref="0x1086c2210" defined="" size="I:12" alignment="I:4">
      <field name="__trapno" ref="0x1086c2c60" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10849a7e0"/></typename>
        </type-int>
      </field>
      <field name="__cpu" ref="0x1086c2d10" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10849a7e0"/></typename>
        </type-int>
      </field>
      <field name="__err" ref="0x1086c2dc0" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x10849b020"/></typename>
        </type-int>
      </field>
      <field name="__faultvaddr" ref="0x1086c2e70" bit-offset="I:64" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x10849b020"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="sockaddr_storage" loc="437:/usr/include/sys/socket.h" ref="0x108d51170" defined="" size="I:128" alignment="I:8">
      <field name="ss_len" ref="0x108d4f560" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="__uint8_t" ref="0x10849a090"/></typename>
        </type-int>
      </field>
      <field name="ss_family" ref="0x108d4f610" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="sa_family_t" ref="0x108d5a020"/></typename>
        </type-int>
      </field>
      <field name="__ss_pad1" ref="0x108d4f6c0" bit-offset="I:16" size="I:6">
        <type-array elements="I:6" size="I:6" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__ss_align" ref="0x108d4f770" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__int64_t" ref="0x10849b3e0"/></typename>
        </type-int>
      </field>
      <field name="__ss_pad2" ref="0x108d4f820" bit-offset="I:128" size="I:112">
        <type-array elements="I:112" size="I:112" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <struct loc="136:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x10984fae0" defined="" size="I:1" alignment="I:1">
      <field name="toie0" ref="0x10984fcf0" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="ocie0" ref="0x10984fda0" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="toie1" ref="0x10984fe50" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="ocie1b" ref="0x10984ff00" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="ocie1a" ref="0x10984e020" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="ticie1" ref="0x10984e0d0" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="toie2" ref="0x10984e180" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="ocie2" ref="0x10984e230" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
    </struct>
    <union loc="231:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x10983e280" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x10983e490" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x10983e540" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x10983fa40"/></type-tag>
      </field>
    </union>
    <enum loc="104:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h" ref="0x1093fc870" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="nts" loc="17:/usr/local/lib/ncc/deputy_nodeputy.h" ref="0x1081e9980" defined="" size="I:4" alignment="I:4">
      <field name="dummy" ref="0x1081e9cf0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <struct name="exception" loc="779:/opt/local/lib/gcc47/gcc/x86_64-apple-darwin16/4.7.4/include-fixed/math.h" ref="0x1088b4ca0" defined="" size="I:40" alignment="I:8">
      <field name="type" ref="0x1088b36a0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="name" ref="0x1088b3750" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="arg1" ref="0x1088b3800" bit-offset="I:128" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="arg2" ref="0x1088b38b0" bit-offset="I:192" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="retval" ref="0x1088b3960" bit-offset="I:256" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
    </struct>
    <struct name="sim_log_channel" loc="56:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_log.c" ref="0x1089b29c0" defined="" size="I:24" alignment="I:8">
      <field name="name" ref="0x1089b0450" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-qualified const="">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
      <field name="numOutputs" ref="0x1089b0500" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="size" ref="0x1089b05b0" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="outputs" ref="0x1089b0660" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="I:152" alignment="I:8"><struct-ref name="__sFILE" ref="0x108901980"/>
              <typename><typedef-ref name="FILE" ref="0x10890d930"/></typename>
            </type-tag>
          </type-pointer>
        </type-pointer>
      </field>
    </struct>
    <struct name="__darwin_xmm_reg" loc="210:/usr/include/mach/i386/_structs.h" ref="0x1086a8590" defined="" size="I:16" alignment="I:1">
      <field name="__xmm_reg" ref="0x1086a8a80" bit-offset="I:0" size="I:16">
        <type-array elements="I:16" size="I:16" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <union loc="167:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x109849ec0" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x109848100" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x1098481b0" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x1098496a0"/></type-tag>
      </field>
    </union>
    <struct name="__darwin_pthread_handler_rec" loc="57:/usr/include/sys/_pthread/_pthread_types.h" ref="0x1084aa470" defined="" size="I:24" alignment="I:8">
      <field name="__routine" ref="0x1084ab2e0" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="__arg" ref="0x1084ab3b0" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__next" ref="0x1084ab460" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:24" alignment="I:8"><struct-ref name="__darwin_pthread_handler_rec" ref="0x1084aa470"/></type-tag>
        </type-pointer>
      </field>
    </struct>
    <attribute name="C"  loc="NONE" ref="0x1081db7d0" size="V:" alignment="V:">
    </attribute>
    <struct name="sim_noise_hash_t" loc="64:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_noise.h" ref="0x108aba0c0" defined="" size="I:488" alignment="I:8">
      <field name="key" ref="0x108ab9020" bit-offset="I:0" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="numElements" ref="0x108ab90d0" bit-offset="I:160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="size" ref="0x108ab9180" bit-offset="I:192" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="elements" ref="0x108ab9230" bit-offset="I:256" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="flag" ref="0x108ab92e0" bit-offset="I:320" size="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="dist" ref="0x108ab9390" bit-offset="I:352" size="I:444">
        <type-array elements="I:111" size="I:444" alignment="I:4">
          <type-float cname="float" size="I:4" alignment="I:4"></type-float>
        </type-array>
      </field>
    </struct>
    <struct name="searchstate" ref="0x108ebf360" size="V:" alignment="V:">
    </struct>
    <union loc="120:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x109852ad0" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x109852ce0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x109852d90" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x109852370"/></type-tag>
      </field>
    </union>
    <attribute name="macro"  loc="NONE" ref="0x1081dc6b0" size="V:" alignment="V:">
      <field name="macro_name" ref="0x1081dc8c0" bit-offset="U:" bit-size="U:">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
    </attribute>
    <enum loc="144:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h" ref="0x1093f72f0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="193:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x109845b40" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x109845d50" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x109845e00" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x109845410"/></type-tag>
      </field>
    </union>
    <struct name="_opaque_pthread_rwlock_t" loc="93:/usr/include/sys/_pthread/_pthread_types.h" ref="0x1084b05a0" defined="" size="I:200" alignment="I:8">
      <field name="__sig" ref="0x1084b0c10" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__opaque" ref="0x1084b0cc0" bit-offset="I:64" size="I:192">
        <type-array elements="I:192" size="I:192" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <union name="sigval" loc="158:/usr/include/sys/signal.h" ref="0x1086ebe40" defined="" size="I:8" alignment="I:8">
      <field name="sival_int" ref="0x1086f6440" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="sival_ptr" ref="0x1086f64f0" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
    </union>
    <enum loc="90:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x1098097d0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <nx_struct name="message_t" loc="14:/Users/ytc/Applications/tinyos-main/tos/types/message.h" ref="0x108c8c7d0" defined="" size="I:45" alignment="I:1">
      <field name="header" ref="0x108c8ba70" bit-offset="I:0" size="I:7">
        <type-array elements="I:7" size="I:7" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x10864c020"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="data" ref="0x108c8bb20" bit-offset="I:56" size="I:28">
        <type-array elements="I:28" size="I:28" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x10864c020"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="footer" ref="0x108c8bbd0" bit-offset="I:280" size="I:2">
        <type-array elements="I:2" size="I:2" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x10864c020"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="metadata" ref="0x108c8bc80" bit-offset="I:296" size="I:8">
        <type-array elements="I:8" size="I:8" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x10864c020"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <nx_struct name="tossim_header" loc="6:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimRadioMsg.h" ref="0x108c7bab0" defined="" size="I:7" alignment="I:1">
      <field name="dest" ref="0x108c7a780" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x108c7ebb0"/></typename>
        </type-int>
      </field>
      <field name="src" ref="0x108c7a830" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x108c7ebb0"/></typename>
        </type-int>
      </field>
      <field name="length" ref="0x108c7a8e0" bit-offset="I:32" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x10864c020"/></typename>
        </type-int>
      </field>
      <field name="group" ref="0x108c7a990" bit-offset="I:40" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_group_t" ref="0x108c7e7a0"/></typename>
        </type-int>
      </field>
      <field name="type" ref="0x108c7aa40" bit-offset="I:48" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_id_t" ref="0x108c7e270"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <struct name="_opaque_pthread_condattr_t" loc="73:/usr/include/sys/_pthread/_pthread_types.h" ref="0x1084acd40" defined="" size="I:16" alignment="I:8">
      <field name="__sig" ref="0x1084ad3e0" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__opaque" ref="0x1084ad490" bit-offset="I:64" size="I:8">
        <type-array elements="I:8" size="I:8" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <struct name="_opaque_pthread_mutex_t" loc="78:/usr/include/sys/_pthread/_pthread_types.h" ref="0x1084ad730" defined="" size="I:64" alignment="I:8">
      <field name="__sig" ref="0x1084adda0" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__opaque" ref="0x1084ade50" bit-offset="I:64" size="I:56">
        <type-array elements="I:56" size="I:56" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <struct name="fcodeblobs" loc="370:/usr/include/sys/fcntl.h" ref="0x108d32130" defined="" size="I:48" alignment="I:8">
      <field name="f_cd_hash" ref="0x108d31100" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="f_hash_size" ref="0x108d311b0" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="size_t" ref="0x1081dea60"/></typename>
        </type-int>
      </field>
      <field name="f_cd_buffer" ref="0x108d31260" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="f_cd_size" ref="0x108d31310" bit-offset="I:192" size="I:8">
        <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="size_t" ref="0x1081dea60"/></typename>
        </type-int>
      </field>
      <field name="f_out_size" ref="0x108d313c0" bit-offset="I:256" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
        </type-pointer>
      </field>
      <field name="f_arch" ref="0x108d31470" bit-offset="I:320" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__padding" ref="0x108d31520" bit-offset="I:352" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="msghdr" loc="536:/usr/include/sys/socket.h" ref="0x108d4fad0" defined="" size="I:48" alignment="I:8">
      <field name="msg_name" ref="0x108d4eb00" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="msg_namelen" ref="0x108d4ebb0" bit-offset="I:64" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="socklen_t" ref="0x108d5a480"/></typename>
        </type-int>
      </field>
      <field name="msg_iov" ref="0x108d4ec60" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:16" alignment="I:8"><struct-ref name="iovec" ref="0x108d19eb0"/></type-tag>
        </type-pointer>
      </field>
      <field name="msg_iovlen" ref="0x108d4ed10" bit-offset="I:192" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="msg_control" ref="0x108d4edc0" bit-offset="I:256" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="msg_controllen" ref="0x108d4ee70" bit-offset="I:320" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="socklen_t" ref="0x108d5a480"/></typename>
        </type-int>
      </field>
      <field name="msg_flags" ref="0x108d4ef20" bit-offset="I:352" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct loc="239:/usr/include/inttypes.h" ref="0x1084c7490" defined="" size="I:16" alignment="I:8">
      <field name="quot" ref="0x1084c76a0" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="intmax_t" ref="0x1084c3630"/></typename>
        </type-int>
      </field>
      <field name="rem" ref="0x1084c7750" bit-offset="I:64" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="intmax_t" ref="0x1084c3630"/></typename>
        </type-int>
      </field>
    </struct>
    <union loc="297:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x109831b70" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x109831d80" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x109831e30" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x109831290"/></type-tag>
      </field>
    </union>
    <struct ref="0x1081d6530" size="V:" alignment="V:">
    </struct>
    <struct loc="82:/usr/include/stdlib.h" ref="0x108742220" defined="" size="I:8" alignment="I:4">
      <field name="quot" ref="0x108742430" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="rem" ref="0x1087424e0" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="sim_noise_node_t" loc="73:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_noise.h" ref="0x108ab9940" defined="" size="I:80" alignment="I:8">
      <field name="key" ref="0x108ad0100" bit-offset="I:0" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="freqKey" ref="0x108ad01b0" bit-offset="I:160" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="lastNoiseVal" ref="0x108ad0260" bit-offset="I:320" size="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="noiseGenTime" ref="0x108ad0310" bit-offset="I:352" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x1084bb400"/></typename>
        </type-int>
      </field>
      <field name="noiseTable" ref="0x108ad03c0" bit-offset="I:384" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="V:" alignment="V:"><struct-ref name="hashtable" ref="0x1089a7210"/></type-tag>
        </type-pointer>
      </field>
      <field name="noiseTrace" ref="0x108ad0470" bit-offset="I:448" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="noiseTraceLen" ref="0x108ad0520" bit-offset="I:512" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x1084bb400"/></typename>
        </type-int>
      </field>
      <field name="noiseTraceIndex" ref="0x108ad05d0" bit-offset="I:544" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x1084bb400"/></typename>
        </type-int>
      </field>
      <field name="generated" ref="0x108ad0680" bit-offset="I:576" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x10897b190"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="__darwin_i386_float_state" loc="232:/usr/include/mach/i386/_structs.h" ref="0x1086a8d70" defined="" size="I:524" alignment="I:4">
      <field name="__fpu_reserved" ref="0x1086ab340" bit-offset="I:0" size="I:8">
        <type-array elements="I:2" size="I:8" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </type-array>
      </field>
      <field name="__fpu_fcw" ref="0x1086ab3f0" bit-offset="I:64" size="I:2">
        <type-tag size="I:2" alignment="I:2"><struct-ref name="__darwin_fp_control" ref="0x10869b390"/></type-tag>
      </field>
      <field name="__fpu_fsw" ref="0x1086ab4a0" bit-offset="I:80" size="I:2">
        <type-tag size="I:2" alignment="I:2"><struct-ref name="__darwin_fp_status" ref="0x1086a3930"/></type-tag>
      </field>
      <field name="__fpu_ftw" ref="0x1086ab550" bit-offset="I:96" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="__uint8_t" ref="0x10849a090"/></typename>
        </type-int>
      </field>
      <field name="__fpu_rsrv1" ref="0x1086ab600" bit-offset="I:104" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="__uint8_t" ref="0x10849a090"/></typename>
        </type-int>
      </field>
      <field name="__fpu_fop" ref="0x1086ab6b0" bit-offset="I:112" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10849a7e0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_ip" ref="0x1086ab760" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x10849b020"/></typename>
        </type-int>
      </field>
      <field name="__fpu_cs" ref="0x1086ab810" bit-offset="I:160" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10849a7e0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_rsrv2" ref="0x1086ab8c0" bit-offset="I:176" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10849a7e0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_dp" ref="0x1086ab970" bit-offset="I:192" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x10849b020"/></typename>
        </type-int>
      </field>
      <field name="__fpu_ds" ref="0x1086aba20" bit-offset="I:224" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10849a7e0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_rsrv3" ref="0x1086abad0" bit-offset="I:240" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10849a7e0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_mxcsr" ref="0x1086abb80" bit-offset="I:256" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x10849b020"/></typename>
        </type-int>
      </field>
      <field name="__fpu_mxcsrmask" ref="0x1086abd30" bit-offset="I:288" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x10849b020"/></typename>
        </type-int>
      </field>
      <field name="__fpu_stmm0" ref="0x1086abde0" bit-offset="I:320" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x1086a9a30"/></type-tag>
      </field>
      <field name="__fpu_stmm1" ref="0x1086abe90" bit-offset="I:448" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x1086a9a30"/></type-tag>
      </field>
      <field name="__fpu_stmm2" ref="0x1086abf40" bit-offset="I:576" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x1086a9a30"/></type-tag>
      </field>
      <field name="__fpu_stmm3" ref="0x1086b3020" bit-offset="I:704" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x1086a9a30"/></type-tag>
      </field>
      <field name="__fpu_stmm4" ref="0x1086b30d0" bit-offset="I:832" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x1086a9a30"/></type-tag>
      </field>
      <field name="__fpu_stmm5" ref="0x1086b3180" bit-offset="I:960" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x1086a9a30"/></type-tag>
      </field>
      <field name="__fpu_stmm6" ref="0x1086b3230" bit-offset="I:1088" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x1086a9a30"/></type-tag>
      </field>
      <field name="__fpu_stmm7" ref="0x1086b32e0" bit-offset="I:1216" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x1086a9a30"/></type-tag>
      </field>
      <field name="__fpu_xmm0" ref="0x1086b3390" bit-offset="I:1344" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_xmm1" ref="0x1086b3440" bit-offset="I:1472" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_xmm2" ref="0x1086b34f0" bit-offset="I:1600" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_xmm3" ref="0x1086b37a0" bit-offset="I:1728" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_xmm4" ref="0x1086b3850" bit-offset="I:1856" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_xmm5" ref="0x1086b3900" bit-offset="I:1984" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_xmm6" ref="0x1086b39b0" bit-offset="I:2112" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_xmm7" ref="0x1086b3a60" bit-offset="I:2240" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x1086a8590"/></type-tag>
      </field>
      <field name="__fpu_rsrv4" ref="0x1086b3b10" bit-offset="I:2368" size="I:224">
        <type-array elements="I:224" size="I:224" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__fpu_reserved1" ref="0x1086b3bc0" bit-offset="I:4160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="fchecklv" loc="403:/usr/include/sys/fcntl.h" ref="0x108d30960" defined="" size="I:24" alignment="I:8">
      <field name="lv_file_start" ref="0x108d2e360" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="off_t" ref="0x1089591e0"/></typename>
        </type-int>
      </field>
      <field name="lv_error_message_size" ref="0x108d2e410" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="size_t" ref="0x1081dea60"/></typename>
        </type-int>
      </field>
      <field name="lv_error_message" ref="0x108d2e4c0" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
    </struct>
    <enum loc="185:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x1098485a0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="_opaque_pthread_mutexattr_t" loc="83:/usr/include/sys/_pthread/_pthread_types.h" ref="0x1084af1d0" defined="" size="I:16" alignment="I:8">
      <field name="__sig" ref="0x1084af840" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__opaque" ref="0x1084af8f0" bit-offset="I:64" size="I:8">
        <type-array elements="I:8" size="I:8" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <struct loc="253:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x10983b080" defined="" size="I:1" alignment="I:1">
      <field name="rsvd" ref="0x10983b290" bit-offset="I:0" bit-size="I:5">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="focC" ref="0x10983b340" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="focB" ref="0x10983b3f0" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="focA" ref="0x10983b4a0" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="__msfilterreq" loc="549:/usr/include/netinet/in.h" ref="0x108d8b290" defined="" size="I:152" alignment="I:8">
      <field name="msfr_ifindex" ref="0x108d8a300" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x1084bb400"/></typename>
        </type-int>
      </field>
      <field name="msfr_fmode" ref="0x108d8a3b0" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x1084bb400"/></typename>
        </type-int>
      </field>
      <field name="msfr_nsrcs" ref="0x108d8a460" bit-offset="I:64" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x1084bb400"/></typename>
        </type-int>
      </field>
      <field name="__msfr_align" ref="0x108d8a510" bit-offset="I:96" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x1084bb400"/></typename>
        </type-int>
      </field>
      <field name="msfr_group" ref="0x108d8a5c0" bit-offset="I:128" size="I:128">
        <type-tag size="I:128" alignment="I:8"><struct-ref name="sockaddr_storage" ref="0x108d51170"/></type-tag>
      </field>
      <field name="msfr_srcs" ref="0x108d8a670" bit-offset="I:1152" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:128" alignment="I:8"><struct-ref name="sockaddr_storage" ref="0x108d51170"/></type-tag>
        </type-pointer>
      </field>
    </struct>
    <struct loc="94:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h" ref="0x1093fc110" defined="" size="I:1" alignment="I:1">
      <field name="mux" ref="0x1093fc320" bit-offset="I:0" bit-size="I:5">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="adlar" ref="0x1093fc3d0" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
      <field name="refs" ref="0x1093fc480" bit-offset="I:6" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="so_np_extensions" loc="330:/usr/include/sys/socket.h" ref="0x108d552a0" defined="" size="I:8" alignment="I:4">
      <field name="npx_flags" ref="0x108d558d0" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="u_int32_t" ref="0x10878e130"/></typename>
        </type-int>
      </field>
      <field name="npx_mask" ref="0x108d55980" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="u_int32_t" ref="0x10878e130"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="__sFILE" loc="122:/usr/include/stdio.h" ref="0x108901980" defined="" size="I:152" alignment="I:8">
      <field name="_p" ref="0x10890f820" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_r" ref="0x10890f8d0" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_w" ref="0x10890f980" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_flags" ref="0x10890fa30" bit-offset="I:128" size="I:2">
        <type-int cname="short" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="_file" ref="0x10890fae0" bit-offset="I:144" size="I:2">
        <type-int cname="short" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="_bf" ref="0x10890fb90" bit-offset="I:192" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="__sbuf" ref="0x108902df0"/></type-tag>
      </field>
      <field name="_lbfsize" ref="0x10890fc40" bit-offset="I:320" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_cookie" ref="0x10890fcf0" bit-offset="I:384" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="_close" ref="0x10890fda0" bit-offset="I:448" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="_read" ref="0x10890fe70" bit-offset="I:512" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
              <type-pointer size="I:8" alignment="I:8">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-pointer>
              <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="_seek" ref="0x10890d020" bit-offset="I:576" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-int cname="long long" size="I:8" alignment="I:8">
              <typename><typedef-ref name="fpos_t" ref="0x108902ae0"/></typename>
            </type-int>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
              <type-int cname="long long" size="I:8" alignment="I:8">
                <typename><typedef-ref name="fpos_t" ref="0x108902ae0"/></typename>
              </type-int>
              <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="_write" ref="0x10890d110" bit-offset="I:640" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
              <type-pointer size="I:8" alignment="I:8">
                <type-qualified const="">
                  <type-int cname="char" size="I:1" alignment="I:1"></type-int>
                </type-qualified>
              </type-pointer>
              <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="_ub" ref="0x10890d200" bit-offset="I:704" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="__sbuf" ref="0x108902df0"/></type-tag>
      </field>
      <field name="_extra" ref="0x10890d3b0" bit-offset="I:832" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="V:" alignment="V:"><struct-ref name="__sFILEX" ref="0x1089016a0"/></type-tag>
        </type-pointer>
      </field>
      <field name="_ur" ref="0x10890d460" bit-offset="I:896" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_ubuf" ref="0x10890d510" bit-offset="I:928" size="I:3">
        <type-array elements="I:3" size="I:3" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="_nbuf" ref="0x10890d5c0" bit-offset="I:952" size="I:1">
        <type-array elements="I:1" size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="_lb" ref="0x10890d670" bit-offset="I:960" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="__sbuf" ref="0x108902df0"/></type-tag>
      </field>
      <field name="_blksize" ref="0x10890d720" bit-offset="I:1088" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_offset" ref="0x10890d7d0" bit-offset="I:1152" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="fpos_t" ref="0x108902ae0"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="sockaddr" loc="404:/usr/include/sys/socket.h" ref="0x108d57650" defined="" size="I:16" alignment="I:1">
      <field name="sa_len" ref="0x108d543d0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="__uint8_t" ref="0x10849a090"/></typename>
        </type-int>
      </field>
      <field name="sa_family" ref="0x108d54480" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="sa_family_t" ref="0x108d5a020"/></typename>
        </type-int>
      </field>
      <field name="sa_data" ref="0x108d54530" bit-offset="I:16" size="I:14">
        <type-array elements="I:14" size="I:14" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <struct name="ostat" loc="110:/usr/include/sys/stat.h" ref="0x108eb7020" defined="" size="I:96" alignment="I:8">
      <field name="st_dev" ref="0x108eb41c0" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10849a7e0"/></typename>
        </type-int>
      </field>
      <field name="st_ino" ref="0x108eb4270" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="ino_t" ref="0x108d214e0"/></typename>
        </type-int>
      </field>
      <field name="st_mode" ref="0x108eb4320" bit-offset="I:128" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="mode_t" ref="0x10879a250"/></typename>
        </type-int>
      </field>
      <field name="st_nlink" ref="0x108eb43d0" bit-offset="I:144" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="nlink_t" ref="0x108d20160"/></typename>
        </type-int>
      </field>
      <field name="st_uid" ref="0x108eb4480" bit-offset="I:160" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10849a7e0"/></typename>
        </type-int>
      </field>
      <field name="st_gid" ref="0x108eb4530" bit-offset="I:176" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10849a7e0"/></typename>
        </type-int>
      </field>
      <field name="st_rdev" ref="0x108eb45e0" bit-offset="I:192" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10849a7e0"/></typename>
        </type-int>
      </field>
      <field name="st_size" ref="0x108eb4690" bit-offset="I:224" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__int32_t" ref="0x10849ab60"/></typename>
        </type-int>
      </field>
      <field name="st_atimespec" ref="0x108eb4740" bit-offset="I:256" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timespec" ref="0x108a8a0e0"/></type-tag>
      </field>
      <field name="st_mtimespec" ref="0x108eb47f0" bit-offset="I:384" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timespec" ref="0x108a8a0e0"/></type-tag>
      </field>
      <field name="st_ctimespec" ref="0x108eb48a0" bit-offset="I:512" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timespec" ref="0x108a8a0e0"/></type-tag>
      </field>
      <field name="st_blksize" ref="0x108eb4950" bit-offset="I:640" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__int32_t" ref="0x10849ab60"/></typename>
        </type-int>
      </field>
      <field name="st_blocks" ref="0x108eb4a00" bit-offset="I:672" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__int32_t" ref="0x10849ab60"/></typename>
        </type-int>
      </field>
      <field name="st_flags" ref="0x108eb4bb0" bit-offset="I:704" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x10849b020"/></typename>
        </type-int>
      </field>
      <field name="st_gen" ref="0x108eb4c60" bit-offset="I:736" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x10849b020"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="atomic_hwevent"  loc="NONE" ref="0x1081dbd50" size="V:" alignment="V:">
    </attribute>
    <attribute name="dmemcpy" loc="16:/usr/local/lib/ncc/deputy_nodeputy.h" ref="0x1081e8d00" defined="" size="I:12" alignment="I:4">
      <field name="a1" ref="0x1081e9200" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a2" ref="0x1081e92b0" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a3" ref="0x1081e9360" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <struct name="ip_mreq_source" loc="521:/usr/include/netinet/in.h" ref="0x108d8fca0" defined="" size="I:12" alignment="I:4">
      <field name="imr_multiaddr" ref="0x108d8e6c0" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref name="in_addr" ref="0x108d950c0"/></type-tag>
      </field>
      <field name="imr_sourceaddr" ref="0x108d8e770" bit-offset="I:32" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref name="in_addr" ref="0x108d950c0"/></type-tag>
      </field>
      <field name="imr_interface" ref="0x108d8e820" bit-offset="I:64" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref name="in_addr" ref="0x108d950c0"/></type-tag>
      </field>
    </struct>
    <enum loc="570:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc" ref="0x108e3e890" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="NewMetricORC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="419:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc" ref="0x109367a00" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="NewMetricORC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="431:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc" ref="0x1092419a0" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="NewMetricORC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="588:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc" ref="0x108d3d830" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="NewMetricORC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="598:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc" ref="0x108d0c6b0" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="NewMetricORC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="519:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc" ref="0x108eb58d0" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="NewMetricORC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="448:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc" ref="0x109026960" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="NewMetricORC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="470:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc" ref="0x108f11930" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="NewMetricORC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="53:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/SimSchedulerBasicP.nc" ref="0x108cbe240" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="102:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc" ref="0x1096f9020" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="97:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc" ref="0x1096f8280" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="156:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc" ref="0x10969de20" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="receive_message" loc="68:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/CpmModelC.nc" ref="0x10973d160" defined="" scoped="" size="I:64" alignment="I:8">
      <component-ref qname="CpmModelC"/>
      <field name="source" ref="0x10973cc30" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="start" ref="0x10973cce0" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="sim_time_t" ref="0x10897a320"/></typename>
        </type-int>
      </field>
      <field name="end" ref="0x10973cd90" bit-offset="I:128" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="sim_time_t" ref="0x10897a320"/></typename>
        </type-int>
      </field>
      <field name="power" ref="0x10973ce40" bit-offset="I:192" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="reversePower" ref="0x10973cef0" bit-offset="I:256" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="strength" ref="0x10973a020" bit-offset="I:320" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1">
          <typename><typedef-ref name="int8_t" ref="0x1084b8cc0"/></typename>
        </type-int>
      </field>
      <field name="lost" ref="0x10973a0d0" bit-offset="I:328" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x10897b190"/></typename>
        </type-int>
      </field>
      <field name="ack" ref="0x10973a180" bit-offset="I:336" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x10897b190"/></typename>
        </type-int>
      </field>
      <field name="msg" ref="0x10973a230" bit-offset="I:384" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
            <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
          </type-tag>
        </type-pointer>
      </field>
      <field name="next" ref="0x10973a2e0" bit-offset="I:448" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:64" alignment="I:8"><struct-ref name="receive_message" scoped="" ref="0x10973d160"/>
            <typename><typedef-ref name="receive_message_t" scoped="" ref="0x10973d5d0"/></typename>
          </type-tag>
        </type-pointer>
      </field>
    </struct>
    <enum loc="74:/Users/ytc/Applications/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" ref="0x109a22210" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="AlarmToTimerC"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="71:/Users/ytc/Applications/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" ref="0x109a466b0" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="44:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" ref="0x109885270" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="59:/Users/ytc/Applications/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" ref="0x109a38ca0" defined="" scoped="" size="I:12" alignment="I:4">
      <component-ref qname="VirtualizeTimerC"/>
      <field name="t0" ref="0x109a38eb0" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x1084bb400"/></typename>
        </type-int>
      </field>
      <field name="dt" ref="0x109a37020" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x1084bb400"/></typename>
        </type-int>
      </field>
      <field name="isoneshot" ref="0x109a370d0" bit-offset="I:64" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x10897b190"/></typename>
        </type-int>
      </field>
      <field name="isrunning" ref="0x109a37180" bit-offset="I:65" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x10897b190"/></typename>
        </type-int>
      </field>
      <field name="_reserved" ref="0x109a37230" bit-offset="I:66" bit-size="I:6">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x10897b190"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="53:/Users/ytc/Applications/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" ref="0x109a39680" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="126:/Users/ytc/Applications/tinyos-main/tos/system/AMQueueImplP.nc" ref="0x109b62b50" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="47:/Users/ytc/Applications/tinyos-main/tos/system/AMQueueP.nc" ref="0x109afb200" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="AMQueueP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="169:/Users/ytc/Applications/tinyos-main/tos/system/AMQueueImplP.nc" ref="0x109af7a30" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <struct loc="55:/Users/ytc/Applications/tinyos-main/tos/system/AMQueueImplP.nc" ref="0x109af0110" defined="" scoped="" size="I:8" alignment="I:8">
      <component-ref qname="AMQueueImplP"/>
      <field name="msg" ref="0x109af0320" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
            <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
          </type-tag>
        </type-pointer>
      </field>
    </struct>
    <enum loc="31:/Users/ytc/Documents/workspace/NewMetricOR/src/NeighborDiscovery/NeighborDiscoveryP.nc" ref="0x109b7c870" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="NeighborDiscoveryP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
  </tags>
  <variables>
    <variable name="randCM" ref="0x108b932a0" loc="39:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/randomlib.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="dummy" ref="0x108c33090" loc="283:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_noise.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="current_node" ref="0x108aca7f0" loc="52:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_tossim.c">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="test" ref="0x108b93b90" loc="41:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/randomlib.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="optarg" ref="0x108e41bd0" loc="510:/usr/include/unistd.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-pointer>
    </variable>
    <variable name="channelTable" ref="0x1089aea50" loc="68:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_log.c">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="V:" alignment="V:"><struct-ref name="hashtable" ref="0x1089a7210"/></type-tag>
      </type-pointer>
    </variable>
    <variable name="noiseData" ref="0x108bc3e60" loc="58:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_noise.c">
      <type-array elements="I:1000" size="I:80000" alignment="I:8">
        <type-tag size="I:80" alignment="I:8"><struct-ref name="sim_noise_node_t" ref="0x108ab9940"/>
          <typename><typedef-ref name="sim_noise_node_t" ref="0x108ad07e0"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="in6addr_linklocal_allnodes" ref="0x108d9e020" loc="216:/usr/include/netinet6/in6.h">
      <type-qualified const="">
        <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x108da5510"/></type-tag>
      </type-qualified>
    </variable>
    <variable name="outputs" ref="0x1089ae5f0" loc="67:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_log.c">
      <type-array elements="I:225" size="I:3600" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="sim_log_output" ref="0x1089b3d90"/>
          <typename><typedef-ref name="sim_log_output_t" ref="0x1089b2650"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="randU" ref="0x108b96ae0" loc="39:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/randomlib.c">
      <type-array elements="I:97" size="I:776" alignment="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </type-array>
    </variable>
    <variable name="optind" ref="0x108e3f020" loc="511:/usr/include/unistd.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="timezone" ref="0x108a9be10" loc="102:/usr/include/time.h">
      <type-int cname="long" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="eventHeap" ref="0x108a658b0" loc="44:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_event_queue.c">
      <documentation loc="33:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_event_queue.h">
        <short>&#10; The event queue is the core of the mote side of TOSSIM.</short>
        <long>&#10; The event queue is the core of the mote side of TOSSIM. It is a&#10; wrapper around the underlying heap. Unlike the 1.x version, it is&#10; not re-entrant: merging the Python console and TOSSIM means that&#10; functionality like packet injection/reception from external tools&#10; is on the Python side.&#10;&#10; @author Phil Levis&#10; @date   November 22 2005&#10;</long>
      </documentation>
      <type-tag size="I:24" alignment="I:8"><struct-ref name="heap" ref="0x108a1e690"/>
        <typename><typedef-ref name="heap_t" ref="0x108a1d0d0"/></typename>
      </type-tag>
    </variable>
    <variable name="in6addr_linklocal_allrouters" ref="0x108d9e560" loc="217:/usr/include/netinet6/in6.h">
      <type-qualified const="">
        <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x108da5510"/></type-tag>
      </type-qualified>
    </variable>
    <variable name="csmaRxTxDelay" ref="0x108b264d0" loc="54:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="numCase1" ref="0x108bc4880" loc="51:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_noise.c">
      <documentation loc="32:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_noise.h">
        <short>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.&#10;&#10; @author Hyungjune Lee&#10; @date   Oct 13 2006&#10;</long>
      </documentation>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="__stderrp" ref="0x10890b560" loc="158:/usr/include/stdio.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:152" alignment="I:8"><struct-ref name="__sFILE" ref="0x108901980"/>
          <typename><typedef-ref name="FILE" ref="0x10890d930"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="in6addr_linklocal_allv2routers" ref="0x108d9eab0" loc="218:/usr/include/netinet6/in6.h">
      <type-qualified const="">
        <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x108da5510"/></type-tag>
      </type-qualified>
    </variable>
    <variable name="randC" ref="0x108b96d60" loc="39:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/randomlib.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="FreqKeyNum" ref="0x108bc3810" loc="56:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_noise.c">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x1084bb400"/></typename>
      </type-int>
    </variable>
    <variable name="optreset" ref="0x108eb88b0" loc="770:/usr/include/unistd.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaLow" ref="0x108b0c120" loc="47:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaPreambleLength" ref="0x108b0b020" loc="50:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="numTotal" ref="0x108bc3300" loc="53:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_noise.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="daylight" ref="0x108a9a1d0" loc="104:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaExponentBase" ref="0x108b0b4f0" loc="51:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="randCD" ref="0x108b93020" loc="39:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/randomlib.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="getdate_err" ref="0x108a9b560" loc="100:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="in6addr_any" ref="0x108da0090" loc="212:/usr/include/netinet6/in6.h">
      <type-qualified const="">
        <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x108da5510"/></type-tag>
      </type-qualified>
    </variable>
    <variable name="j97" ref="0x108b93840" loc="40:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/randomlib.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="TOS_NODE_ID" ref="0x10897bde0" loc="78:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/tos.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x1084bb020"/></typename>
      </type-int>
    </variable>
    <variable name="sys_errlist" ref="0x108974150" loc="459:/usr/include/stdio.h">
      <type-qualified const="">
        <type-array elements="V:" size="V:" alignment="V:">
          <type-qualified const="">
            <type-pointer size="I:8" alignment="I:8">
              <type-qualified const="">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </type-qualified>
        </type-array>
      </type-qualified>
    </variable>
    <variable name="_CurrentRuneLocale" ref="0x1088ca4b0" loc="112:/usr/include/runetype.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:3208" alignment="I:8"><struct-ref ref="0x1088bbbe0"/>
          <typename><typedef-ref name="_RuneLocale" ref="0x1088ccab0"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="tzname" ref="0x108a9b1d0" loc="97:/usr/include/time.h">
      <type-array elements="V:" size="V:" alignment="V:">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </type-array>
    </variable>
    <variable name="STARTING_SIZE" ref="0x108a154a0" loc="58:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/heap.c">
      <type-qualified const="">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-qualified>
    </variable>
    <variable name="opterr" ref="0x108e3f2a0" loc="511:/usr/include/unistd.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="=va_arg" ref="0x1081d6860"  loc="NONE">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaHigh" ref="0x108b0dc90" loc="46:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaMaxIterations" ref="0x108b0b9c0" loc="52:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="atm128RegFile" ref="0x1093ddce0" loc="51:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128hardware.h">
      <documentation loc="32:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_tossim.h">
        <short>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-array elements="I:1000" size="I:160000" alignment="I:1">
        <type-array elements="I:160" size="I:160" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
          </type-int>
        </type-array>
      </type-array>
    </variable>
    <variable name="__stdinp" ref="0x10890dd40" loc="156:/usr/include/stdio.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:152" alignment="I:8"><struct-ref name="__sFILE" ref="0x108901980"/>
          <typename><typedef-ref name="FILE" ref="0x10890d930"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="localNoise" ref="0x108b5f020" loc="10:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_gain.c">
      <type-array elements="I:1001" size="I:16016" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="sim_gain_noise" ref="0x108b449a0"/>
          <typename><typedef-ref name="sim_gain_noise_t" ref="0x108b43230"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="csmaInitLow" ref="0x108b0d810" loc="45:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="numCase2" ref="0x108bc4dd0" loc="52:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_noise.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="suboptarg" ref="0x1087c1d20" loc="735:/usr/include/unistd.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-pointer>
    </variable>
    <variable name="sim_ticks" ref="0x108aca410" loc="51:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_tossim.c">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0x10897a320"/></typename>
      </type-int>
    </variable>
    <variable name="in6addr_nodelocal_allnodes" ref="0x108da0a90" loc="215:/usr/include/netinet6/in6.h">
      <type-qualified const="">
        <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x108da5510"/></type-tag>
      </type-qualified>
    </variable>
    <variable name="connectivity" ref="0x108b43920" loc="9:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_gain.c">
      <type-array elements="I:1001" size="I:8008" alignment="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:24" alignment="I:8"><struct-ref name="gain_entry" ref="0x108b35510"/>
            <typename><typedef-ref name="gain_entry_t" ref="0x108b50020"/></typename>
          </type-tag>
        </type-pointer>
      </type-array>
    </variable>
    <variable name="sys_nerr" ref="0x108960c50" loc="458:/usr/include/stdio.h">
      <type-qualified const="">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-qualified>
    </variable>
    <variable name="simTimeBuf" ref="0x108b096e0" loc="183:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_tossim.c">
      <type-array elements="I:128" size="I:128" alignment="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-array>
    </variable>
    <variable name="__stdoutp" ref="0x10890b170" loc="157:/usr/include/stdio.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:152" alignment="I:8"><struct-ref name="__sFILE" ref="0x108901980"/>
          <typename><typedef-ref name="FILE" ref="0x10890d930"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="sim_seed" ref="0x108acab70" loc="53:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_tossim.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="sensitivity" ref="0x108b5f370" loc="11:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_gain.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="signgam" ref="0x1088b9a10" loc="709:/opt/local/lib/gcc47/gcc/x86_64-apple-darwin16/4.7.4/include-fixed/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaInitHigh" ref="0x108b0d380" loc="44:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="optopt" ref="0x108e3f520" loc="511:/usr/include/unistd.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="_DefaultRuneLocale" ref="0x1088ca020" loc="111:/usr/include/runetype.h">
      <type-tag size="I:3208" alignment="I:8"><struct-ref ref="0x1088bbbe0"/>
        <typename><typedef-ref name="_RuneLocale" ref="0x1088ccab0"/></typename>
      </type-tag>
    </variable>
    <variable name="csmaAckTime" ref="0x108b26960" loc="55:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaSymbolsPerSec" ref="0x108b0c5f0" loc="48:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaMinFreeSamples" ref="0x108b26020" loc="53:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="__mb_cur_max" ref="0x10874b020" loc="117:/usr/include/stdlib.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="in6addr_loopback" ref="0x108da0560" loc="213:/usr/include/netinet6/in6.h">
      <type-qualified const="">
        <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x108da5510"/></type-tag>
      </type-qualified>
    </variable>
    <variable name="csmaBitsPerSymbol" ref="0x108b0cac0" loc="49:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="i97" ref="0x108b935e0" loc="40:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/randomlib.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="vacantAckOffset" ref="0x1091dabd0" loc="82:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="neighborSet" ref="0x1091e1c80" loc="66:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-tag size="I:120" alignment="I:8"><struct-ref ref="0x108efe680"/>
        <typename><typedef-ref name="list_t" ref="0x108efc090"/></typename>
      </type-tag>
    </variable>
    <variable name="WAKE_PERIOD_MILLI" ref="0x1091e0a20" loc="69:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="msgreplicacount" ref="0x1091e0550" loc="68:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="pkt" ref="0x1091dd020" loc="70:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
        <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
      </type-tag>
    </variable>
    <variable name="index" ref="0x1091dda70" loc="73:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x1084bb020"/></typename>
      </type-int>
    </variable>
    <variable name="lastforwarderid" ref="0x1091db3a0" loc="78:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
      </type-int>
    </variable>
    <variable name="flags" ref="0x1091dd380" loc="71:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
    </variable>
    <variable name="nodeedc" ref="0x1091dd6f0" loc="72:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-qualified volatile="">
        <type-float cname="float" size="I:4" alignment="I:4"></type-float>
      </type-qualified>
    </variable>
    <variable name="ocl" ref="0x1091d8510" loc="85:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-tag size="I:120" alignment="I:8"><struct-ref ref="0x108efe680"/>
        <typename><typedef-ref name="list_t" ref="0x108efc090"/></typename>
      </type-tag>
    </variable>
    <variable name="judge" ref="0x1091dc4b0" loc="75:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x10897b190"/></typename>
      </type-int>
    </variable>
    <variable name="onehopdelay" ref="0x1091d8090" loc="83:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-float cname="float" size="I:4" alignment="I:4"></type-float>
    </variable>
    <variable name="forwardBuffer" ref="0x1091da020" loc="80:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:8" alignment="I:1"><nx_struct-ref name="DataPayload" ref="0x108d124a0"/>
          <typename><typedef-ref name="DataPayload" ref="0x108d112e0"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="sinkacked" ref="0x1091dc960" loc="76:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x10897b190"/></typename>
      </type-int>
    </variable>
    <variable name="isForwardRequest" ref="0x1091dce60" loc="77:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x10897b190"/></typename>
      </type-int>
    </variable>
    <variable name="sendingdsn" ref="0x1091dc020" loc="74:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x1084bb020"/></typename>
      </type-int>
    </variable>
    <variable name="currentForwardingDsn" ref="0x1091da710" loc="81:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x1084bb020"/></typename>
      </type-int>
    </variable>
    <variable name="shouldAck" ref="0x1091db990" loc="79:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-qualified volatile="">
          <typename><typedef-ref name="bool" ref="0x10897b190"/></typename>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
      </type-qualified>
    </variable>
    <variable name="forwardreplicacount" ref="0x1091e0090" loc="67:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="sim_scheduler_event_pending" ref="0x108ce0e60" loc="66:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x10897b190"/></typename>
      </type-int>
    </variable>
    <variable name="m_tail" ref="0x108ce0570" loc="60:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
      </type-int>
    </variable>
    <variable name="m_head" ref="0x108ce0200" loc="59:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
      </type-int>
    </variable>
    <variable name="m_next" ref="0x108ce0a20" loc="61:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-array elements="I:16" size="I:16" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="sim_scheduler_event" ref="0x108cdf3e0" loc="67:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x108983020"/>
        <typename><typedef-ref name="sim_event_t" ref="0x108983410"/></typename>
      </type-tag>
    </variable>
    <variable name="bootEvent" ref="0x1095cb290" loc="53:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x108983020"/>
          <typename><typedef-ref name="sim_event_t" ref="0x108983410"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="startTime" ref="0x1095ccb30" loc="51:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="euid" ref="0x1095cc770" loc="50:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="isOn" ref="0x1095cce70" loc="52:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x10897b190"/></typename>
      </type-int>
    </variable>
    <variable name="buffer" ref="0x109635250" loc="63:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimActiveMessageC.nc">
      <component-ref qname="TossimActiveMessageC"/>
      <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
        <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
      </type-tag>
    </variable>
    <variable name="bufferPointer" ref="0x109635660" loc="64:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimActiveMessageC.nc">
      <component-ref qname="TossimActiveMessageC"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
          <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="sendEvent" ref="0x10968c850" loc="78:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x108983020"/>
        <typename><typedef-ref name="sim_event_t" ref="0x108983410"/></typename>
      </type-tag>
    </variable>
    <variable name="initialized" ref="0x10968e290" loc="70:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x10897b190"/></typename>
      </type-int>
    </variable>
    <variable name="error" ref="0x10970b5e0" loc="305:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
      </type-int>
    </variable>
    <variable name="backoffCount" ref="0x10968ec20" loc="72:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
      </type-int>
    </variable>
    <variable name="neededFreeSamples" ref="0x10968d020" loc="73:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
      </type-int>
    </variable>
    <variable name="sending" ref="0x10968d3f0" loc="74:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
          <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="running" ref="0x10968e730" loc="71:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x10897b190"/></typename>
      </type-int>
    </variable>
    <variable name="receiveBuffer" ref="0x10968cc20" loc="81:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
        <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
      </type-tag>
    </variable>
    <variable name="sendingLength" ref="0x10968c020" loc="76:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
      </type-int>
    </variable>
    <variable name="transmitting" ref="0x10968da60" loc="75:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x10897b190"/></typename>
      </type-int>
    </variable>
    <variable name="destNode" ref="0x10968c4a0" loc="77:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="collision" ref="0x10974f650" loc="226:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x10897b190"/></typename>
      </type-int>
    </variable>
    <variable name="requestAck" ref="0x10973e020" loc="61:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x10897b190"/></typename>
      </type-int>
    </variable>
    <variable name="receiveEvent" ref="0x109751d10" loc="223:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x108983020"/>
        <typename><typedef-ref name="sim_event_t" ref="0x108983410"/></typename>
      </type-tag>
    </variable>
    <variable name="transmissionEndTime" ref="0x10973edb0" loc="64:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0x10897a320"/></typename>
      </type-int>
    </variable>
    <variable name="incomingSource" ref="0x10974e400" loc="228:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="outstandingReceptionHead" ref="0x10973a6d0" loc="81:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:64" alignment="I:8"><struct-ref name="receive_message" scoped="" ref="0x10973d160"/>
          <typename><typedef-ref name="receive_message_t" scoped="" ref="0x10973d5d0"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="incoming" ref="0x10974fd70" loc="227:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
          <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="clearThreshold" ref="0x10974f0d0" loc="225:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="transmitting" ref="0x10973e860" loc="63:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x10897b190"/></typename>
      </type-int>
    </variable>
    <variable name="outgoing" ref="0x10973fc70" loc="60:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
          <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="receiving" ref="0x10973e390" loc="62:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x10897b190"/></typename>
      </type-int>
    </variable>
    <variable name="group" ref="0x1097f48d0" loc="67:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="am_group_t" ref="0x108c7c400"/></typename>
      </type-int>
    </variable>
    <variable name="addr" ref="0x1097f4540" loc="66:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="am_addr_t" ref="0x108c7c7e0"/></typename>
      </type-int>
    </variable>
    <variable name="set" ref="0x1097f4090" loc="65:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x10897b190"/></typename>
      </type-int>
    </variable>
    <variable name="base" ref="0x109885020" loc="40:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x1084bb400"/></typename>
      </type-int>
    </variable>
    <variable name="t0" ref="0x109886940" loc="39:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x1084bb400"/></typename>
      </type-int>
    </variable>
    <variable name="set" ref="0x1098865e0" loc="38:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
      </type-int>
    </variable>
    <variable name="dt" ref="0x109886ba0" loc="39:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x1084bb400"/></typename>
      </type-int>
    </variable>
    <variable name="oldScale" ref="0x10990cab0" loc="80:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <documentation loc="76:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
        <short> This variable is needed to keep track of when the underlying&#10;  timer starts, in order to reset lastZero.</short>
        <long> This variable is needed to keep track of when the underlying&#10;  timer starts, in order to reset lastZero. When oldScale is&#10;  AVR_CLOCK_OFF and the scale is set to something else, the&#10;  clock starts ticking. *</long>
      </documentation>
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
      </type-int>
    </variable>
    <variable name="lastZero" ref="0x10990c5c0" loc="74:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0x10897a320"/></typename>
      </type-int>
    </variable>
    <variable name="overflow" ref="0x1099b4110" loc="480:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x108983020"/>
          <typename><typedef-ref name="sim_event_t" ref="0x108983410"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="compare" ref="0x109940020" loc="185:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x108983020"/>
          <typename><typedef-ref name="sim_event_t" ref="0x108983410"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="savedCounter" ref="0x109912c70" loc="58:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
      </type-int>
    </variable>
    <variable name="inOverflow" ref="0x109912780" loc="57:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x10897b190"/></typename>
      </type-int>
    </variable>
    <variable name="m_dt" ref="0x109a177c0" loc="55:/Users/ytc/Applications/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x1084bb400"/></typename>
      </type-int>
    </variable>
    <variable name="m_oneshot" ref="0x109a17b30" loc="56:/Users/ytc/Applications/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x10897b190"/></typename>
      </type-int>
    </variable>
    <variable name="m_timers_changed" ref="0x109a37c30" loc="69:/Users/ytc/Applications/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x10897b190"/></typename>
      </type-int>
    </variable>
    <variable name="m_timers" ref="0x109a37870" loc="68:/Users/ytc/Applications/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref scoped="" ref="0x109a38ca0"/>
          <typename><typedef-ref name="Timer_t" scoped="" ref="0x109a37390"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="current" ref="0x109af0800" loc="59:/Users/ytc/Applications/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
      </type-int>
    </variable>
    <variable name="queue" ref="0x109aee020" loc="60:/Users/ytc/Applications/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-array elements="U:" size="U:" alignment="I:8">
        <type-tag size="I:8" alignment="I:8"><struct-ref scoped="" ref="0x109af0110"/>
          <typename><typedef-ref name="queue_entry_t" scoped="" ref="0x109af0480"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="cancelMask" ref="0x109aee8b0" loc="61:/Users/ytc/Applications/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-array elements="U:" size="U:" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="seed" ref="0x109b8c020" loc="52:/Users/ytc/Applications/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x1084bb400"/></typename>
      </type-int>
    </variable>
    <variable name="initialized" ref="0x109b70450" loc="20:/Users/ytc/Documents/workspace/NewMetricOR/src/NeighborDiscovery/NeighborDiscoveryP.nc">
      <component-ref qname="NeighborDiscoveryP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x10897b190"/></typename>
      </type-int>
    </variable>
    <variable name="probepkt" ref="0x109b700d0" loc="19:/Users/ytc/Documents/workspace/NewMetricOR/src/NeighborDiscovery/NeighborDiscoveryP.nc">
      <component-ref qname="NeighborDiscoveryP"/>
      <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
        <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
      </type-tag>
    </variable>
    <variable name="currentAckedNodeid" ref="0x109b6f020" loc="21:/Users/ytc/Documents/workspace/NewMetricOR/src/NeighborDiscovery/NeighborDiscoveryP.nc">
      <component-ref qname="NeighborDiscoveryP"/>
      <type-array elements="I:32" size="I:32" alignment="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-array>
    </variable>
  </variables>
  <constants>
    <constant cst="I:3" name="ACIE" ref="0x1093c2c40" loc="1075:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="OCDR7" ref="0x109398020" loc="943:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TXB81" ref="0x1093c4340" loc="1058:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PB6" ref="0x1093b9c80" loc="1132:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:40" name="ATM128_OCR1BL" ref="0x109359dd0" loc="140:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:26" name="ATM128_ADC_DIFF_ADC22_1x" ref="0x1093ffd20" loc="85:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:17" name="ATM128_DDRD" ref="0x10935d390" loc="81:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TOIE0" ref="0x109372460" loc="786:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PING0" ref="0x1093dd660" loc="1299:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_FREE_RUNNING_OFF" ref="0x1093f8260" loc="133:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ATM128_WAVE16_PWM_CAPTURE_HIGH" ref="0x1098411e0" loc="222:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:21" name="ATM128_ADC_DIFF_ADC51_1x" ref="0x109400b70" loc="80:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="SRL0" ref="0x10937fa90" loc="705:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ICES3" ref="0x10939cca0" loc="919:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS30" ref="0x10939bc70" loc="924:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINA2" ref="0x1093b9020" loc="1126:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINB4" ref="0x1093b5660" loc="1154:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINC6" ref="0x1093b1ca0" loc="1182:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ADLAR" ref="0x1093bf9a0" loc="1093:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PA2" ref="0x1093bdc20" loc="1106:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WGMA1" ref="0x1093a2340" loc="876:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WGMB3" ref="0x10939e340" loc="902:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="TOS_SERIAL_UNKNOWN_ID" ref="0x108c960b0" loc="98:/Users/ytc/Applications/tinyos-main/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="TWA3" ref="0x109382da0" loc="687:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:101" name="FILESEC_ACL_ALLOCSIZE" ref="0x108d4ab20" loc="506:/usr/include/sys/fcntl.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM1B1" ref="0x1093a1020" loc="882:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ADHSM" ref="0x109396c80" loc="961:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="P_ALL" ref="0x108699be0" loc="80:/usr/include/sys/wait.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="INT3" ref="0x109376760" loc="763:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ISC31" ref="0x10937b140" loc="730:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINF3" ref="0x1093e1ca0" loc="1275:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="ATM128_WAVE16_PWM_FAST_COMPARE" ref="0x109840390" loc="227:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM21" ref="0x1093a5660" loc="858:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WGM33" ref="0x10939b020" loc="920:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="ATM128_WAVE16_RESERVED" ref="0x109841bb0" loc="225:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_ADC_SNGL_ADC5" ref="0x109403640" loc="64:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="XMM0" ref="0x10937d140" loc="714:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:129" name="ATM128_ICR3H" ref="0x10938ec10" loc="269:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS2" ref="0x1093a8630" loc="839:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:51" name="ATM128_TCCR0" ref="0x109356c30" loc="169:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="FOC1C" ref="0x1093999a0" loc="939:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:134" name="ATM128_OCR3AL" ref="0x10938c8d0" loc="283:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WDP1" ref="0x109396330" loc="956:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PB0" ref="0x1093b7020" loc="1138:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PC2" ref="0x1093b3620" loc="1166:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PD4" ref="0x1093afc40" loc="1194:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PE6" ref="0x1093e9320" loc="1222:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="_CLOCK_UPTIME_RAW" ref="0x108ab5020" loc="162:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_RIGHT_ADJUST" ref="0x109405b70" loc="52:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_CLK8_DIVIDE_128" ref="0x10980e9b0" loc="58:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM00" ref="0x1093a7980" loc="847:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ADPS2" ref="0x1093c0960" loc="1086:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TWA6" ref="0x109382470" loc="684:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:140" name="ATM128_TCCR3C" ref="0x10938a1e0" loc="298:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="INT6" ref="0x109377dc0" loc="760:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SRW10" ref="0x1093acda0" loc="817:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="USBS0" ref="0x1093cd660" loc="1004:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_WAVE16_PWM_FAST_8BIT" ref="0x109842060" loc="217:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_PORTE" ref="0x109361710" loc="36:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC0" ref="0x1093a7020" loc="844:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PIND0" ref="0x1093eaca0" loc="1218:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINE2" ref="0x1093e5340" loc="1246:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WDCE" ref="0x109397990" loc="953:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADC_PRESCALE_16" ref="0x1093fb980" loc="109:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="ATM128_WAVE16_CTC_CAPTURE" ref="0x109841890" loc="224:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ICES" ref="0x10939e020" loc="901:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:50" name="ATM128_TCNT0" ref="0x1093568b0" loc="166:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_POWER_ADC_NR" ref="0x109407410" loc="128:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="AVR_CLOCK_DIVIDE_8" ref="0x10980a570" loc="78:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_COMPARE_SET" ref="0x109808480" loc="94:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDA6" ref="0x1093bc960" loc="1112:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_CLK8_NORMAL" ref="0x109812a40" loc="54:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ISC71" ref="0x10937aac0" loc="740:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="REFS0" ref="0x1093bf680" loc="1092:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDF7" ref="0x1093e3650" loc="1261:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="SERIAL_PROTO_PACKET_UNKNOWN" ref="0x108c95280" loc="106:/Users/ytc/Applications/tinyos-main/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADCSR" ref="0x109360810" loc="47:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:55" name="ATM128_TIMSK" ref="0x109355e00" loc="182:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:46" name="ATM128_TCCR1B" ref="0x109357a90" loc="154:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:23" name="NOISE_BIN_SIZE" ref="0x108abd650" loc="56:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="OCDR2" ref="0x109397020" loc="948:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="UPM00" ref="0x1093cd340" loc="1003:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="OCIE2" ref="0x109374de0" loc="779:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCF3C" ref="0x1093ac140" loc="811:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="SM2" ref="0x1093aba40" loc="821:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOV1" ref="0x109371770" loc="794:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PF0" ref="0x1093e3320" loc="1258:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="UCSZ10" ref="0x109390660" loc="997:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PG2" ref="0x1093df020" loc="1283:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:30" name="ATM128_ADC_SNGL_1_23" ref="0x1093fea40" loc="89:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_WAVE8_CTC" ref="0x109809160" loc="85:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:59" name="ATM128_RAMPZ" ref="0x109354c40" loc="194:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="INTF3" ref="0x109374140" loc="773:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TWWC" ref="0x109383aa0" loc="679:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="RAMPZ0" ref="0x10937cde0" loc="727:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="ATM128_ADC_DIFF_ADC10_10x" ref="0x109402360" loc="68:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="ATM128_ADC_DIFF_ADC22_10x" ref="0x109402d40" loc="71:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:125" name="HDLC_CTLESC_BYTE" ref="0x108c98e60" loc="89:/Users/ytc/Applications/tinyos-main/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="XDIV3" ref="0x10937c140" loc="721:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UPE1" ref="0x1093cac60" loc="1025:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_WAVE16_PWM_FAST_9BIT" ref="0x1098423b0" loc="218:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="FILESEC_GROUP" ref="0x108d4b580" loc="498:/usr/include/sys/fcntl.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_INT_ENABLE_OFF" ref="0x1093f7670" loc="145:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="EOFF" ref="0x10871f450" loc="56:/Users/ytc/Applications/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_INT_ENABLE_ON" ref="0x1093f79b0" loc="146:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:130" name="ATM128_OCR3C" ref="0x10938d020" loc="272:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDF1" ref="0x1093e2950" loc="1267:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDG3" ref="0x1093dfc60" loc="1289:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MPCM1" ref="0x1093c9340" loc="1027:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:300" name="WAKE_PERIOD_MILLI_BASE" ref="0x108d139c0" loc="31:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricOR.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDB0" ref="0x1093b6950" loc="1148:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDC2" ref="0x1093b1020" loc="1176:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDD4" ref="0x1093ec640" loc="1204:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDE6" ref="0x1093e8c60" loc="1232:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCF1B" ref="0x109371460" loc="793:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="FOC3B" ref="0x10939aca0" loc="933:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PE1" ref="0x1093e8320" loc="1227:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCIE1A" ref="0x109373780" loc="782:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SPR0" ref="0x109393c60" loc="980:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PF3" ref="0x1093e4920" loc="1255:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_CLK8_DIVIDE_8" ref="0x109812df0" loc="55:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXC0" ref="0x1093c9670" loc="1030:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_ACSR" ref="0x10935f390" loc="54:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADCW" ref="0x109361a80" loc="39:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:125" name="ATM128_ETIMSK" ref="0x10938e1e0" loc="264:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="XDIV6" ref="0x10937d7a0" loc="718:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_CLK8_DIVIDE_32" ref="0x10980e230" loc="56:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:100" name="ATM128_DDRG" ref="0x1093521e0" loc="216:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOIE3" ref="0x1093aeaa0" loc="802:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINF1" ref="0x1093e0340" loc="1277:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PING3" ref="0x1093deca0" loc="1296:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TWS5" ref="0x109380450" loc="696:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS21" ref="0x1093a5c80" loc="860:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINA5" ref="0x1093ba660" loc="1123:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:112" name="ATM128_TWBR" ref="0x109351e20" loc="238:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:67" name="SERIAL_PROTO_ACK" ref="0x108c96670" loc="103:/Users/ytc/Applications/tinyos-main/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:40" name="ATM128_OCR1B" ref="0x109359a60" loc="139:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINB7" ref="0x1093b6c90" loc="1151:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PA5" ref="0x1093bd320" loc="1103:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:38" name="ATM128_ICR1" ref="0x109359020" loc="134:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDA1" ref="0x1093bb950" loc="1117:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDB3" ref="0x1093b6020" loc="1145:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDC5" ref="0x1093b2640" loc="1173:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDD7" ref="0x1093edc50" loc="1201:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_FREE_RUNNING_ON" ref="0x1093f85b0" loc="134:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_INT_FLAG_OFF" ref="0x1093f8bf0" loc="139:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="NOISE_MIN_TRACE" ref="0x108abc5a0" loc="60:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:132" name="ATM128_OCR3BL" ref="0x10938ddf0" loc="278:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ISC10" ref="0x10937a140" loc="735:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINF6" ref="0x1093e1340" loc="1272:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDF2" ref="0x1093e2640" loc="1266:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDG4" ref="0x1093df950" loc="1288:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_CLK8_DIVIDE_1024" ref="0x10980d240" loc="60:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="ATM128_WAVE16_PWM_FAST_CAPTURE" ref="0x109840020" loc="226:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS02" ref="0x1093a6020" loc="849:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WGM00" ref="0x1093a7340" loc="845:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM12" ref="0x10939dcc0" loc="912:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_POWER_IDLE" ref="0x109407070" loc="127:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COMB0" ref="0x1093a3980" loc="873:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ERESERVE" ref="0x10879c140" loc="60:/Users/ytc/Applications/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:412" name="PROBE_PERIOD_MILLI" ref="0x109b7f3c0" loc="7:/Users/ytc/Documents/workspace/NewMetricOR/src/NeighborDiscovery/NeighborDiscovery.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRE1" ref="0x1093ca340" loc="1022:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="ATM128_ADC_DIFF_ADC01_1x" ref="0x109401a90" loc="75:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:144" name="ATM128_UBRR0H" ref="0x10938a570" loc="301:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:154" name="ATM128_UCSR1B" ref="0x109389400" loc="313:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXCIE" ref="0x1093c7020" loc="1040:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ADIE" ref="0x1093c0640" loc="1085:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="JTD" ref="0x1093aa3d0" loc="826:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:120" name="PACKET_DUPLICATE_MILLI" ref="0x108d13600" loc="30:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricOR.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_ENABLE_OFF" ref="0x1093fae80" loc="121:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:109" name="ATM128_XMCRA" ref="0x109351720" loc="232:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="COM3C1" ref="0x10939f020" loc="894:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SPIF" ref="0x109395c80" loc="968:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SRE" ref="0x1093ac780" loc="815:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:19" name="ATM128_PINC" ref="0x10935da80" loc="87:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="SRW01" ref="0x10937fdb0" loc="706:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINC1" ref="0x1093b0ca0" loc="1187:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PIND3" ref="0x1093ea340" loc="1215:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:56" name="ATM128_EIFR" ref="0x1093541c0" loc="185:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINE5" ref="0x1093e69a0" loc="1243:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:53" name="ATM128_MCUCR" ref="0x109355710" loc="176:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="OCDR0" ref="0x109397660" loc="950:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:136" name="ATM128_TCNT3" ref="0x10938b020" loc="287:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_ADC_SNGL_ADC2" ref="0x109404c20" loc="61:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="ATM128_ADC_DIFF_ADC32_200x" ref="0x109401750" loc="74:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDE1" ref="0x1093e7c60" loc="1237:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_ADC_PRESCALE_4" ref="0x1093fb340" loc="107:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:49" name="ATM128_OCR0" ref="0x109356530" loc="163:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ISC50" ref="0x109379aa0" loc="745:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:39" name="ATM128_ICR1H" ref="0x1093596e0" loc="136:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="ATM128_ICR3L" ref="0x10938e8b0" loc="268:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="INTF1" ref="0x109374780" loc="775:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="EINVAL" ref="0x10871fa90" loc="58:/Users/ytc/Applications/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ATM128_ADC_DIFF_ADC10_200x" ref="0x109402a00" loc="70:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="ATM128_ADC_DIFF_ADC22_200x" ref="0x109401400" loc="73:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-115" name="NOISE_MIN" ref="0x108abe020" loc="52:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:25" name="ATM128_ADC_DIFF_ADC12_1x" ref="0x1093ff9e0" loc="84:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="SE" ref="0x1093ab140" loc="818:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ADSC" ref="0x1093c1ca0" loc="1082:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="OCDR5" ref="0x109398660" loc="945:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PB4" ref="0x1093b8320" loc="1134:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:43" name="ATM128_OCR1AH" ref="0x109358c40" loc="146:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:120" name="ATM128_OCR1CL" ref="0x10938f390" loc="254:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PC6" ref="0x1093b4960" loc="1162:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_PINF" ref="0x109365c60" loc="27:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:23" name="ATM128_DDRB" ref="0x10935c8b0" loc="99:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINA0" ref="0x1093b9660" loc="1128:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINB2" ref="0x1093b5ca0" loc="1156:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINC4" ref="0x1093b0340" loc="1184:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ICES1" ref="0x10939d680" loc="910:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PIND6" ref="0x1093eb990" loc="1212:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TWPS0" ref="0x10937f140" loc="700:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TXEN" ref="0x1093c7c80" loc="1044:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ01" ref="0x1093cd980" loc="1005:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PA0" ref="0x1093bc320" loc="1108:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="UMSEL1" ref="0x109391680" loc="992:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="INTF6" ref="0x1093757a0" loc="770:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TWA1" ref="0x109381450" loc="689:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXC1" ref="0x1093ca020" loc="1021:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_TIMER_COMPARE_SET" ref="0x109846380" loc="189:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="COM1C1" ref="0x1093a1660" loc="884:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="INT1" ref="0x109376d80" loc="765:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_ENABLE_ON" ref="0x1093f91b0" loc="122:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_WAVE16_CTC_COMPARE" ref="0x109843cd0" loc="216:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WGM31" ref="0x10939f660" loc="896:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS0" ref="0x1093a8c30" loc="841:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXCIE1" ref="0x1093c5020" loc="1052:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-5" name="NOISE_MAX" ref="0x108abe430" loc="53:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ACME" ref="0x109395020" loc="962:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADCL" ref="0x109360140" loc="43:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC1A" ref="0x109399360" loc="937:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PC0" ref="0x1093b3c20" loc="1168:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PD2" ref="0x1093ed320" loc="1196:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2048" name="SLEEP_PERIOD_MILLI" ref="0x108d13d60" loc="32:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricOR.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PE4" ref="0x1093e9920" loc="1224:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PF6" ref="0x1093e4020" loc="1252:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="MAX_NODE_SIZE" ref="0x109b7f730" loc="8:/Users/ytc/Documents/workspace/NewMetricOR/src/NeighborDiscovery/NeighborDiscovery.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ADPS0" ref="0x1093bf020" loc="1088:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TWA4" ref="0x109382a90" loc="686:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="UPM0" ref="0x109392640" loc="985:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:18" name="ATM128_ADC_DIFF_ADC21_1x" ref="0x1094001b0" loc="77:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:139" name="ATM128_TCCR3A" ref="0x10938be20" loc="295:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_COMPARE_OFF" ref="0x109809b10" loc="91:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="NOISE_DEFAULT_ELEMENT_SIZE" ref="0x108abddb0" loc="58:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_CLK16_EXTERNAL_RISE" ref="0x10980b650" loc="71:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:21" name="ATM128_PORTC" ref="0x10935c1d0" loc="93:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="RXB80" ref="0x1093c3980" loc="1067:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINE0" ref="0x1093e5980" loc="1248:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS00" ref="0x1093a6640" loc="851:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS12" ref="0x10939c020" loc="913:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:60" name="ATM128_XDIV" ref="0x109353020" loc="197:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ICNC" ref="0x10939fcb0" loc="900:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRIE0" ref="0x1093c4cc0" loc="1063:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDA4" ref="0x1093bb020" loc="1114:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SPMEN" ref="0x109377780" loc="756:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDB6" ref="0x1093b7660" loc="1142:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ISC01" ref="0x10937a460" loc="736:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDF5" ref="0x1093e3c70" loc="1263:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="BLBSET" ref="0x109378de0" loc="753:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="FOCC" ref="0x10939a640" loc="929:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PGWRT" ref="0x109377140" loc="754:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="COMA1" ref="0x1093a3020" loc="870:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:111" name="ATM128_OSCCAL" ref="0x109351ab0" loc="235:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="UPM10" ref="0x109391cc0" loc="994:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="AS0" ref="0x1093a4340" loc="864:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:98" name="ATM128_PORTF" ref="0x109353ac0" loc="210:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="UCPOL1" ref="0x109390980" loc="998:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TXEN1" ref="0x1093c5980" loc="1055:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCIE0" ref="0x109372140" loc="785:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ACBG" ref="0x1093c2330" loc="1072:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCF3A" ref="0x1093ad790" loc="808:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="SM0" ref="0x1093ab740" loc="820:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PG0" ref="0x1093df620" loc="1285:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:149" name="ATM128_UCSR0C" ref="0x10938a900" loc="304:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:45" name="ATM128_TCNT1H" ref="0x109357700" loc="151:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:136" name="ATM128_TCNT3L" ref="0x10938b390" loc="288:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WDE" ref="0x109397c90" loc="954:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ADFR" ref="0x1093c0020" loc="1083:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="MUX1" ref="0x1093be640" loc="1097:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:24" name="ATM128_ADC_DIFF_ADC02_1x" ref="0x1093ff6a0" loc="83:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_ADC_PRESCALE_32" ref="0x1093fbca0" loc="110:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="COM3A0" ref="0x1093a0680" loc="891:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="XDIV1" ref="0x10937c780" loc="723:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ2" ref="0x1093c6340" loc="1046:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:134" name="ATM128_OCR3A" ref="0x10938c560" loc="282:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:156" name="ATM128_UDR1" ref="0x109389b00" loc="319:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDG1" ref="0x1093de330" loc="1291:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="FALSE" ref="0x10897b700" loc="76:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/tos.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="EBUSY" ref="0x10871f770" loc="57:/Users/ytc/Applications/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32768" name="ATM128_TIMER0_TICKSPPS" ref="0x1093f2750" loc="61:/Users/ytc/Applications/tinyos-main/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="_CLOCK_MONOTONIC_RAW_APPROX" ref="0x108ab6ba0" loc="160:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDC0" ref="0x1093b1640" loc="1178:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDD2" ref="0x1093ecc60" loc="1206:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDE4" ref="0x1093e7330" loc="1234:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:30" name="CHANNEL_BANDGAP" ref="0x1093f2020" loc="58:/Users/ytc/Applications/tinyos-main/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCIE3C" ref="0x1093aedc0" loc="803:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_CLK16_OFF" ref="0x10980d9e0" loc="64:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ISC41" ref="0x109379dc0" loc="746:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TWGCE" ref="0x109381a80" loc="691:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CSB1" ref="0x10939ec80" loc="905:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="MUX4" ref="0x1093bfcb0" loc="1094:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_POWER_EXT_STANDBY" ref="0x1094077f0" loc="129:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DOR0" ref="0x1093c8330" loc="1034:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOIE1" ref="0x109373dc0" loc="784:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="DEFAULT_CHANNEL_SIZE" ref="0x1089b3a30" loc="48:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_log.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_DDRE" ref="0x109361390" loc="33:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PB7" ref="0x1093b9980" loc="1131:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PING1" ref="0x1093dd340" loc="1298:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_WAVE8_PWM_FAST" ref="0x109809480" loc="86:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_COMPARE_CLEAR" ref="0x109808180" loc="93:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TWS3" ref="0x109380a70" loc="698:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="SRL1" ref="0x10937f780" loc="704:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS31" ref="0x10939b960" loc="923:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:116" name="ATM128_TWCR" ref="0x109350c10" loc="250:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="_CLOCK_MONOTONIC_RAW" ref="0x108ab67b0" loc="158:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINA3" ref="0x1093baca0" loc="1125:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINB5" ref="0x1093b5340" loc="1153:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINC7" ref="0x1093b1980" loc="1181:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="CPOL" ref="0x109393330" loc="977:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SPE" ref="0x109394970" loc="974:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PA3" ref="0x1093bd920" loc="1105:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:17" name="ATM128_ADC_DIFF_ADC11_1x" ref="0x109401dd0" loc="76:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:115" name="ATM128_TWDR" ref="0x1093508a0" loc="247:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="COM1A0" ref="0x1093a2cc0" loc="881:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="INT4" ref="0x109376450" loc="762:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:130" name="ATM128_OCR3CL" ref="0x10938d390" loc="273:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:135" name="ATM128_OCR3AH" ref="0x10938cc40" loc="284:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ISC20" ref="0x10937baa0" loc="733:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINF4" ref="0x1093e1980" loc="1274:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WGM10" ref="0x1093a0020" loc="887:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADC_SNGL_ADC6" ref="0x109403950" loc="65:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="XMM1" ref="0x10937edb0" loc="713:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="COMC0" ref="0x1093a2020" loc="875:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="NOISE_QUANTIZE_INTERVAL" ref="0x108abec70" loc="55:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PB1" ref="0x1093b8c20" loc="1137:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PC3" ref="0x1093b3320" loc="1165:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="WDP2" ref="0x109396020" loc="955:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PD5" ref="0x1093af940" loc="1193:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PE7" ref="0x1093e9020" loc="1221:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:152" name="ATM128_UBRR1H" ref="0x10938ac90" loc="307:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM01" ref="0x1093a7660" loc="846:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:52" name="ATM128_MCUSR" ref="0x109355020" loc="172:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TICIE3" ref="0x1093ae140" loc="799:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WDRF" ref="0x1093aa9f0" loc="828:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WGM0" ref="0x1093a99b0" loc="835:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RWWSRE" ref="0x109378ac0" loc="752:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRIE" ref="0x1093c7660" loc="1042:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="INT7" ref="0x109377ab0" loc="759:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FE0" ref="0x1093c8020" loc="1033:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_CLK16_DIVIDE_1024" ref="0x10980cda0" loc="69:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="SRW11" ref="0x10937e460" loc="708:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:25" name="ATM128_PINA" ref="0x10935b020" loc="105:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="USBS1" ref="0x109390020" loc="995:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PIND1" ref="0x1093ea980" loc="1217:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINE3" ref="0x1093e5020" loc="1245:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TWSTA" ref="0x109383470" loc="677:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TWIE" ref="0x109382140" loc="681:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="FILESEC_UUID" ref="0x108d4b8e0" loc="499:/usr/include/sys/fcntl.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:44" name="ATM128_TCNT1" ref="0x109357020" loc="149:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_SNGL_ADC0" ref="0x109404600" loc="59:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_PRESCALE_2" ref="0x1093fcbd0" loc="105:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDA7" ref="0x1093bc650" loc="1111:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:31" name="CHANNEL_GND" ref="0x1093f2370" loc="59:/Users/ytc/Applications/tinyos-main/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ISC60" ref="0x109379460" loc="743:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="REFS1" ref="0x1093bf360" loc="1091:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ATM128_ADC_DIFF_ADC00_200x" ref="0x1094026b0" loc="69:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXCIE0" ref="0x1093c4680" loc="1061:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_ADC_PRESCALE_128" ref="0x1093fa350" loc="112:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:23" name="ATM128_ADC_DIFF_ADC71_1x" ref="0x1093ff360" loc="82:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:122" name="ATM128_TCCR1C" ref="0x10938fa90" loc="258:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCDR3" ref="0x109398ca0" loc="947:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:41" name="ATM128_OCR1BH" ref="0x1093581e0" loc="141:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UPM01" ref="0x1093cd020" loc="1002:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PB2" ref="0x1093b8920" loc="1136:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PC4" ref="0x1093b3020" loc="1164:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PD6" ref="0x1093af640" loc="1192:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PF1" ref="0x1093e3020" loc="1257:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TOV2" ref="0x109372aa0" loc="790:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PG3" ref="0x1093e0c80" loc="1282:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ11" ref="0x109390340" loc="996:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="INTF4" ref="0x109375de0" loc="772:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="ATM128_SPCR" ref="0x10935e550" loc="69:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="XDIV4" ref="0x10937dde0" loc="720:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TWEN" ref="0x109383db0" loc="680:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXC" ref="0x1093cc640" loc="1011:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:48" name="ATM128_ASSR" ref="0x1093561c0" loc="160:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_POWER_SAVE" ref="0x109407b80" loc="130:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_WAVE16_NORMAL" ref="0x109843020" loc="212:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDB1" ref="0x1093b6640" loc="1147:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDC3" ref="0x1093b2c60" loc="1175:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDD5" ref="0x1093ec330" loc="1203:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDE7" ref="0x1093e8950" loc="1231:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="OCF1C" ref="0x1093ac460" loc="812:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="FOC3C" ref="0x109399020" loc="934:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PD0" ref="0x1093ed920" loc="1198:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PE2" ref="0x1093e8020" loc="1226:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCIE1B" ref="0x109373aa0" loc="783:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="SPR1" ref="0x109393950" loc="979:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PF4" ref="0x1093e4620" loc="1254:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:33" name="ATM128_WDTCR" ref="0x10935be30" loc="119:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="UMSEL" ref="0x109392020" loc="983:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RXEN0" ref="0x1093c3020" loc="1064:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CHANNEL_THERMISTOR" ref="0x1093f37e0" loc="56:/Users/ytc/Applications/tinyos-main/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM20" ref="0x1093a5340" loc="857:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_CLK16_NORMAL" ref="0x10980dd80" loc="65:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="XMBK" ref="0x10937e790" loc="711:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXC1" ref="0x1093cbc60" loc="1020:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ICF3" ref="0x1093ad470" loc="807:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:57" name="ATM128_EIMSK" ref="0x109354540" loc="188:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ENOMEM" ref="0x10879c7a0" loc="62:/Users/ytc/Applications/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:27" name="ATM128_PORTA" ref="0x10935b710" loc="111:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TWS6" ref="0x109380140" loc="695:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS22" ref="0x1093a5970" loc="859:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS10" ref="0x10939c640" loc="915:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ICNC3" ref="0x10939c980" loc="918:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ACIS0" ref="0x1093c1660" loc="1078:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:120" name="ATM128_OCR1C" ref="0x10938f020" loc="253:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINA6" ref="0x1093ba340" loc="1122:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="ATM128_ADC_DIFF_ADC32_10x" ref="0x1094010b0" loc="72:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:106" name="ATM128_EICRA" ref="0x109351020" loc="226:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRE" ref="0x1093cc950" loc="1012:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ACI" ref="0x1093c2930" loc="1074:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PA6" ref="0x1093bd020" loc="1102:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:69" name="SERIAL_PROTO_PACKET_NOACK" ref="0x108c96e20" loc="105:/Users/ytc/Applications/tinyos-main/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="CHANNEL_BATTERY" ref="0x1093f3bf0" loc="57:/Users/ytc/Applications/tinyos-main/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDA2" ref="0x1093bb640" loc="1116:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDB4" ref="0x1093b7c80" loc="1144:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDC6" ref="0x1093b2330" loc="1172:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ISC11" ref="0x10937bdc0" loc="734:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINF7" ref="0x1093e1020" loc="1271:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDF3" ref="0x1093e2330" loc="1265:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_PRESCALE_2b" ref="0x1093fb020" loc="106:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_WAVE16_PWM_10BIT" ref="0x109843990" loc="215:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="XDIVEN" ref="0x10937d480" loc="717:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOCA" ref="0x10939a020" loc="927:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM01" ref="0x1093a7ca0" loc="848:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WGM13" ref="0x10939d9a0" loc="911:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COMB1" ref="0x1093a3660" loc="872:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ELAST" ref="0x10879ce00" loc="64:/Users/ytc/Applications/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UPE" ref="0x1093cb320" loc="1015:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="IVSEL" ref="0x1093abd60" loc="822:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:27" name="ATM128_ADC_DIFF_ADC32_1x" ref="0x1093fe0b0" loc="86:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ACIC" ref="0x1093c1020" loc="1076:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="_CLOCK_UPTIME_RAW_APPROX" ref="0x108ab5400" loc="164:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="DATAPAYLOAD" ref="0x108d15b30" loc="27:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricOR.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="_CLOCK_PROCESS_CPUTIME_ID" ref="0x108ab57e0" loc="167:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ATM128_UCSR0A" ref="0x10935fe40" loc="63:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:157" name="ATM128_UCSR1C" ref="0x109388020" loc="322:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TSM" ref="0x109396960" loc="960:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PUD" ref="0x109395320" loc="963:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DORD" ref="0x109394c80" loc="975:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ADIF" ref="0x1093c0330" loc="1084:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_START_CONVERSION_OFF" ref="0x1093f9840" loc="127:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_CLK16_DIVIDE_64" ref="0x10980c5f0" loc="67:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TXB8" ref="0x1093c6960" loc="1048:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="P_PID" ref="0x108699e60" loc="81:/usr/include/sys/wait.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:108" name="ATM128_XMCRB" ref="0x1093513a0" loc="229:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM3B0" ref="0x1093a0cc0" loc="893:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="UIO_WRITE" ref="0x108d18bf0" loc="90:/usr/include/sys/uio.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="JTRF" ref="0x1093aa6e0" loc="827:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="ATM128_PIND" ref="0x10935d020" loc="78:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINB0" ref="0x1093b4340" loc="1158:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="OCF2" ref="0x109372790" loc="789:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM0" ref="0x1093a8020" loc="837:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINC2" ref="0x1093b0980" loc="1186:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PIND4" ref="0x1093ea020" loc="1214:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="UCSZ0" ref="0x109391020" loc="988:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINE6" ref="0x1093e6680" loc="1242:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_TIMER_COMPARE_CLEAR" ref="0x109846020" loc="188:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SPMIE" ref="0x109378480" loc="750:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCDR1" ref="0x109397340" loc="949:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_ADC_SNGL_ADC3" ref="0x109403020" loc="62:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PSR0" ref="0x109395630" loc="964:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WCOL" ref="0x109394020" loc="969:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDD0" ref="0x1093eb330" loc="1208:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDE2" ref="0x1093e7950" loc="1236:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_WAVE16_PWM_9BIT" ref="0x109843660" loc="214:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCIE3A" ref="0x1093ae460" loc="800:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ISC51" ref="0x109379780" loc="744:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="U2X0" ref="0x1093c8950" loc="1036:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:113" name="ATM128_TWSR" ref="0x1093501c0" loc="241:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="MUX2" ref="0x1093be330" loc="1096:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="OCDR6" ref="0x109398340" loc="944:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TXB80" ref="0x1093c3ca0" loc="1068:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PB5" ref="0x1093b8020" loc="1133:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PC7" ref="0x1093b4660" loc="1161:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="ATM128_DDRC" ref="0x10935ddf0" loc="90:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:99" name="ATM128_PING" ref="0x109353e30" loc="213:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXCIE" ref="0x1093c7340" loc="1041:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINA1" ref="0x1093b9340" loc="1127:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINB3" ref="0x1093b5980" loc="1155:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TWPS1" ref="0x109380d90" loc="699:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINC5" ref="0x1093b0020" loc="1183:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PIND7" ref="0x1093eb670" loc="1211:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ02" ref="0x1093c3660" loc="1066:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PA1" ref="0x1093bc020" loc="1107:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_CLK8_DIVIDE_256" ref="0x10980ed70" loc="59:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WGMA0" ref="0x1093a2660" loc="877:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGMB2" ref="0x10939e660" loc="903:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TWA2" ref="0x109381140" loc="688:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="INTF7" ref="0x109375480" loc="769:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_ADC_PRESCALE_8" ref="0x1093fb660" loc="108:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CHANNEL_RSSI" ref="0x1093f33b0" loc="55:/Users/ytc/Applications/tinyos-main/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TCR0UB" ref="0x1093a4ca0" loc="867:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM1B0" ref="0x1093a1340" loc="883:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="INT2" ref="0x109376a70" loc="764:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:133" name="ATM128_OCR3BH" ref="0x10938c1e0" loc="279:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ISC30" ref="0x10937b460" loc="731:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINF2" ref="0x1093e0020" loc="1276:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PING4" ref="0x1093de980" loc="1295:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_ADC_PRESCALE" ref="0x1093fa6b0" loc="116:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="CTRLMSG" ref="0x108d15e60" loc="28:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricOR.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WGM20" ref="0x1093a6c90" loc="855:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM32" ref="0x10939b340" loc="921:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:28" name="ATM128_ADC_DIFF_ADC42_1x" ref="0x1093fe3f0" loc="87:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADC_SNGL_ADC4" ref="0x109403330" loc="63:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_WAVE16_PWM_CAPTURE_LOW" ref="0x109842a80" loc="220:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS1" ref="0x1093a8930" loc="840:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:42" name="ATM128_OCR1AL" ref="0x1093588d0" loc="145:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TWINT" ref="0x109386e20" loc="675:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_CLK16_DIVIDE_256" ref="0x10980c9c0" loc="68:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32" name="ATM128_SFIOR" ref="0x10935bab0" loc="116:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TOS_SERIAL_CC1000_ID" ref="0x108c978f0" loc="96:/Users/ytc/Applications/tinyos-main/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADC" ref="0x109361dd0" loc="41:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="FOC1B" ref="0x109399680" loc="938:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MPCM" ref="0x1093cb930" loc="1017:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WDP0" ref="0x109396640" loc="957:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PC1" ref="0x1093b3920" loc="1167:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PD3" ref="0x1093ed020" loc="1195:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PE5" ref="0x1093e9620" loc="1223:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PF7" ref="0x1093e5ca0" loc="1251:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_WAVE16_PWM_FAST_10BIT" ref="0x109842710" loc="219:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ADPS1" ref="0x1093c0c80" loc="1087:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="_CLOCK_REALTIME" ref="0x108ab6070" loc="153:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TWA5" ref="0x109382780" loc="685:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TICIE1" ref="0x109373460" loc="781:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="EXTRF" ref="0x1093a9070" loc="830:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UPM1" ref="0x109392330" loc="984:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ" ref="0x1093c6020" loc="1045:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_POWER_STANDBY" ref="0x109406020" loc="131:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="BORF" ref="0x1093aad00" loc="829:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="_CLOCK_MONOTONIC" ref="0x108ab6400" loc="155:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:138" name="ATM128_TCCR3B" ref="0x10938ba90" loc="292:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="RXB81" ref="0x1093c4020" loc="1057:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:18" name="ATM128_PORTD" ref="0x10935d710" loc="84:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINE1" ref="0x1093e5660" loc="1247:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS01" ref="0x1093a6330" loc="850:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PGERS" ref="0x109377460" loc="755:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRIE1" ref="0x1093c5340" loc="1053:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ADEN" ref="0x1093c1990" loc="1081:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_ADMUX" ref="0x10935f020" loc="51:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDA5" ref="0x1093bcc70" loc="1113:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:34" name="TOS_AM_GROUP" ref="0x108c7b380" loc="27:/Users/ytc/Applications/tinyos-main/tos/types/AM.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDB7" ref="0x1093b7350" loc="1141:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:360222" name="PAYLOAD_PERIOD_MILLI" ref="0x108d13240" loc="29:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricOR.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ISC70" ref="0x10937ade0" loc="741:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="FILESEC_OWNER" ref="0x108d4b210" loc="497:/usr/include/sys/fcntl.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDF6" ref="0x1093e3960" loc="1262:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:137" name="ATM128_TCNT3H" ref="0x10938b700" loc="289:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="AVR_CLOCK_OFF" ref="0x10980bdf0" loc="76:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:68" name="SERIAL_PROTO_PACKET_ACK" ref="0x108c96a40" loc="104:/Users/ytc/Applications/tinyos-main/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:47" name="ATM128_TCCR1A" ref="0x109357e20" loc="157:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:63" name="ATM128_SREG" ref="0x1093533b0" loc="202:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UPM11" ref="0x1093919a0" loc="993:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:121" name="ATM128_OCR1CH" ref="0x10938f700" loc="255:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_START_CONVERSION_ON" ref="0x1093f9bb0" loc="128:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TOS_SERIAL_ACTIVE_MESSAGE_ID" ref="0x108c97540" loc="95:/Users/ytc/Applications/tinyos-main/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:101" name="ATM128_PORTG" ref="0x109352560" loc="219:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCF3B" ref="0x1093adab0" loc="809:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="SM1" ref="0x1093ab440" loc="819:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PG1" ref="0x1093df320" loc="1284:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TOV0" ref="0x109371d90" loc="796:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="ATM128_UBRR0L" ref="0x10935f720" loc="57:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FILESEC_MODE" ref="0x108d4bc40" loc="500:/usr/include/sys/fcntl.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ECANCEL" ref="0x10871f140" loc="55:/Users/ytc/Applications/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="INTF2" ref="0x109374460" loc="774:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="COM3A1" ref="0x1093a0360" loc="890:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="ATM128_SPDR" ref="0x10935ec30" loc="75:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="XDIV2" ref="0x10937c460" loc="722:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_ADC_VREF_2_56" ref="0x109405530" loc="47:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_CLK8_DIVIDE_64" ref="0x10980e5f0" loc="57:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DOR" ref="0x1093cb020" loc="1014:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UPE0" ref="0x1093c8640" loc="1035:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:19" name="ATM128_ADC_DIFF_ADC31_1x" ref="0x1094004f0" loc="78:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="NOISE_HASHTABLE_SIZE" ref="0x108abc220" loc="59:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:132" name="ATM128_OCR3B" ref="0x10938da80" loc="277:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="U2X" ref="0x1093cb620" loc="1016:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_TIMER_COMPARE_TOGGLE" ref="0x109848c80" loc="187:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_ADC_VREF_RSVD" ref="0x109405180" loc="46:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDF0" ref="0x1093e2c60" loc="1268:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDG2" ref="0x1093de020" loc="1290:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_ADC_DIFF_ADC00_10x" ref="0x109402020" loc="67:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MPCM0" ref="0x1093c8c70" loc="1037:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SRW" ref="0x1093aca80" loc="816:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ACD" ref="0x1093c2020" loc="1071:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_CLK16_DIVIDE_8" ref="0x10980c230" loc="66:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDC1" ref="0x1093b1330" loc="1177:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDD3" ref="0x1093ec950" loc="1205:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDE5" ref="0x1093e7020" loc="1233:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCF1A" ref="0x109371140" loc="792:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC3A" ref="0x10939a980" loc="932:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PE0" ref="0x1093e8620" loc="1228:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PF2" ref="0x1093e4c20" loc="1256:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:52" name="ATM128_MCUCSR" ref="0x109355390" loc="173:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="USBS" ref="0x109392950" loc="986:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PG4" ref="0x1093e0980" loc="1281:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="ATM128_WAVE16_PWM_COMPARE_LOW" ref="0x109842df0" loc="221:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PAYLOAD_PRODUCE_RATIO" ref="0x108d12140" loc="33:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricOR.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:38" name="ATM128_ICR1L" ref="0x109359380" loc="135:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="PROBEMSG" ref="0x109b7f020" loc="6:/Users/ytc/Documents/workspace/NewMetricOR/src/NeighborDiscovery/NeighborDiscovery.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ENOACK" ref="0x10879cac0" loc="63:/Users/ytc/Applications/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CSB2" ref="0x10939e970" loc="904:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:225" name="SIM_LOG_OUTPUT_COUNT" ref="0x1089ae020" loc="64:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_log.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SPI2X" ref="0x109394340" loc="970:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_CLK16_EXTERNAL_FALL" ref="0x10980b260" loc="70:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:126" name="HDLC_FLAG_BYTE" ref="0x108c98ad0" loc="88:/Users/ytc/Applications/tinyos-main/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CPHA" ref="0x109393640" loc="978:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ICF1" ref="0x109372db0" loc="791:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:97" name="ATM128_DDRF" ref="0x109353740" loc="207:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TOIE2" ref="0x109373140" loc="780:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DOR1" ref="0x1093ca950" loc="1024:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINF0" ref="0x1093e0660" loc="1278:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PING2" ref="0x1093dd020" loc="1297:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_WAVE8_PWM" ref="0x10980ae30" loc="84:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="TWS4" ref="0x109380760" loc="697:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SRL2" ref="0x10937f470" loc="703:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINA4" ref="0x1093ba980" loc="1124:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ERETRY" ref="0x10871fdb0" loc="59:/Users/ytc/Applications/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS20" ref="0x1093a4020" loc="861:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ICNC1" ref="0x10939d360" loc="909:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS32" ref="0x10939b650" loc="922:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:42" name="ATM128_OCR1A" ref="0x109358560" loc="144:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINB6" ref="0x1093b5020" loc="1152:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PA4" ref="0x1093bd620" loc="1104:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDA0" ref="0x1093bbc60" loc="1118:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="COM1A1" ref="0x1093a29a0" loc="880:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="INT5" ref="0x109376140" loc="761:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDB2" ref="0x1093b6330" loc="1146:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDC4" ref="0x1093b2950" loc="1174:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDD6" ref="0x1093ec020" loc="1202:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="FILESEC_ACL" ref="0x108d4a020" loc="501:/usr/include/sys/fcntl.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ISC21" ref="0x10937b780" loc="732:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINF5" ref="0x1093e1660" loc="1273:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="TWSTO" ref="0x109383790" loc="678:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WGM11" ref="0x1093a1ca0" loc="886:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="XMM2" ref="0x10937eaa0" loc="712:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="COMC1" ref="0x1093a3ca0" loc="874:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PSR321" ref="0x109395950" loc="965:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_ADC_SNGL_ADC7" ref="0x109403c60" loc="66:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="UIO_READ" ref="0x108d18970" loc="90:/usr/include/sys/uio.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:124" name="ATM128_ETIFR" ref="0x10938fe10" loc="261:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:37" name="ATM128_TCCR2" ref="0x10935ac50" loc="131:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRE0" ref="0x1093c9ca0" loc="1032:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:155" name="ATM128_UCSR1A" ref="0x109389790" loc="316:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM1" ref="0x1093a8330" loc="838:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="COM3C0" ref="0x10939f340" loc="895:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SPIE" ref="0x109394670" loc="973:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FE1" ref="0x1093ca640" loc="1023:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:22" name="ATM128_PINB" ref="0x10935c540" loc="96:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="SRW00" ref="0x10937e140" loc="707:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINC0" ref="0x1093af020" loc="1188:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCF0" ref="0x109371a80" loc="795:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC2" ref="0x1093a6970" loc="854:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PIND2" ref="0x1093ea660" loc="1216:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINE4" ref="0x1093e6cc0" loc="1244:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_VREF_OFF" ref="0x109406a20" loc="44:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FE" ref="0x1093ccc50" loc="1013:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_WAVE8_NORMAL" ref="0x10980ab40" loc="83:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ACO" ref="0x1093c2630" loc="1073:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_LEFT_ADJUST" ref="0x109404020" loc="53:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="AVR_CLOCK_ON" ref="0x10980a1d0" loc="77:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_TIMER_COMPARE_NORMAL" ref="0x109848930" loc="186:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-115" name="NOISE_MIN_QUANTIZE" ref="0x108abe8a0" loc="54:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="MSTR" ref="0x109393020" loc="976:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:29" name="ATM128_ADC_DIFF_ADC52_1x" ref="0x1093fe730" loc="88:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:36" name="ATM128_TCNT2" ref="0x10935a8d0" loc="128:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_SNGL_ADC1" ref="0x109404910" loc="60:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:111" name="NOISE_NUM_VALUES" ref="0x108abccd0" loc="61:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDE0" ref="0x1093e6020" loc="1238:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ISC61" ref="0x109379140" loc="742:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXCIE1" ref="0x1093c6ca0" loc="1051:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="INTF0" ref="0x109374aa0" loc="776:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PORF" ref="0x1093a9380" loc="831:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="RXB8" ref="0x1093c6650" loc="1047:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_VREF_AVCC" ref="0x109406dd0" loc="45:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCDR4" ref="0x109398980" loc="946:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PB3" ref="0x1093b8620" loc="1135:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PC5" ref="0x1093b4c60" loc="1163:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PD7" ref="0x1093af340" loc="1191:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOS_SERIAL_802_15_4_ID" ref="0x108c97cb0" loc="97:/Users/ytc/Applications/tinyos-main/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCR0UB" ref="0x1093a4980" loc="866:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_ADCH" ref="0x109360490" loc="44:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOV3" ref="0x1093addc0" loc="810:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="UCSZ00" ref="0x1093cdca0" loc="1006:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ12" ref="0x1093c5ca0" loc="1056:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:44" name="ATM128_TCNT1L" ref="0x109357390" loc="150:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="UMSEL0" ref="0x109390cc0" loc="1001:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="INTF5" ref="0x109375ac0" loc="771:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TWA0" ref="0x109381760" loc="690:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXC0" ref="0x1093c9980" loc="1031:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:104" name="ATM128_SPMCR" ref="0x1093528e0" loc="222:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_WAVE16_PWM_8BIT" ref="0x109843340" loc="213:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="COM1C0" ref="0x1093a1980" loc="885:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SUCCESS" ref="0x108a78760" loc="52:/Users/ytc/Applications/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="IVCE" ref="0x1093aa0b0" loc="823:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ESIZE" ref="0x108a78d90" loc="54:/Users/ytc/Applications/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="XDIV5" ref="0x10937dac0" loc="719:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="INT0" ref="0x109375140" loc="766:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:131" name="ATM128_OCR3CH" ref="0x10938d700" loc="274:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="FILESEC_GRPUUID" ref="0x108d4a3a0" loc="502:/usr/include/sys/fcntl.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:100" name="FILESEC_ACL_RAW" ref="0x108d4a740" loc="505:/usr/include/sys/fcntl.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WGM30" ref="0x10939f980" loc="897:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_COMPARE_TOGGLE" ref="0x109809e30" loc="92:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_INT_FLAG_ON" ref="0x1093f7020" loc="140:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXCIE0" ref="0x1093c49a0" loc="1062:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:65535" name="AM_BROADCAST_ADDR" ref="0x108c7cd60" loc="15:/Users/ytc/Applications/tinyos-main/tos/types/AM.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:22" name="ATM128_ADC_DIFF_ADC61_1x" ref="0x1093ff020" loc="81:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="FAIL" ref="0x108a78a70" loc="53:/Users/ytc/Applications/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PD1" ref="0x1093ed620" loc="1197:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="OCIE1C" ref="0x1093ad140" loc="804:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PE3" ref="0x1093e9c20" loc="1225:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PF5" ref="0x1093e4320" loc="1253:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADCSRA" ref="0x109360b80" loc="48:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RXEN1" ref="0x1093c5660" loc="1054:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:34" name="ATM128_OCDR" ref="0x10935a1e0" loc="122:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM21" ref="0x1093a5020" loc="856:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="EALREADY" ref="0x10879c480" loc="61:/Users/ytc/Applications/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="_CLOCK_THREAD_CPUTIME_ID" ref="0x108ab5be0" loc="169:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="ATM128_ADC_DIFF_ADC41_1x" ref="0x109400830" loc="79:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:31" name="ATM128_ADC_SNGL_GND" ref="0x1093fed40" loc="90:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ACIS1" ref="0x1093c1340" loc="1077:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:24" name="ATM128_PORTB" ref="0x10935cc30" loc="102:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TWS7" ref="0x109381db0" loc="694:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS11" ref="0x10939c330" loc="914:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINA7" ref="0x1093ba020" loc="1121:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:114" name="ATM128_TWAR" ref="0x109350530" loc="244:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:58" name="ATM128_EICRB" ref="0x1093548c0" loc="191:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PA7" ref="0x1093bec70" loc="1101:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:54" name="ATM128_TIFR" ref="0x109355a80" loc="179:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="ATM128_ICR3" ref="0x10938e550" loc="267:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADC_PRESCALE_64" ref="0x1093fa020" loc="111:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDA3" ref="0x1093bb330" loc="1115:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDB5" ref="0x1093b7970" loc="1143:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDC7" ref="0x1093b2020" loc="1171:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ISC00" ref="0x10937a780" loc="737:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDF4" ref="0x1093e2020" loc="1264:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="FOCB" ref="0x10939a330" loc="928:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_CLK8_OFF" ref="0x1098126a0" loc="53:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TOS_AM_ADDRESS" ref="0x108c7b710" loc="28:/Users/ytc/Applications/tinyos-main/tos/types/AM.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="COMA0" ref="0x1093a3340" loc="871:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ATM128_WAVE16_PWM_COMPARE_HIGH" ref="0x109841550" loc="223:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC" ref="0x1093a96a0" loc="834:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="UCPOL0" ref="0x1093cc020" loc="1007:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TXEN0" ref="0x1093c3340" loc="1065:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ATM128_UCSR0B" ref="0x10935fab0" loc="60:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:153" name="ATM128_UBRR1L" ref="0x109389070" loc="310:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="ATM128_SPSR" ref="0x10935e8c0" loc="72:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXC" ref="0x1093cc340" loc="1010:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_POWER_DOWN" ref="0x1094063b0" loc="132:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MUX0" ref="0x1093be950" loc="1098:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RXEN" ref="0x1093c7970" loc="1043:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM3B1" ref="0x1093a09a0" loc="892:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="XDIV0" ref="0x10937caa0" loc="724:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_PINE" ref="0x109361020" loc="30:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:26" name="ATM128_DDRA" ref="0x10935b390" loc="108:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TCN0UB" ref="0x1093a4660" loc="865:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINB1" ref="0x1093b4020" loc="1157:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM1" ref="0x1093a9cc0" loc="836:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINC3" ref="0x1093b0660" loc="1185:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PIND5" ref="0x1093ebcb0" loc="1213:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINE7" ref="0x1093e6360" loc="1241:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ1" ref="0x109392c70" loc="987:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TWEA" ref="0x109383150" loc="676:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="ATM128_UDR0" ref="0x10935e1e0" loc="66:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDG0" ref="0x1093de640" loc="1292:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="RWWSB" ref="0x1093787a0" loc="751:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TRUE" ref="0x10897b9f0" loc="76:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/tos.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDD1" ref="0x1093eb020" loc="1207:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="NOISE_HISTORY" ref="0x108abd9c0" loc="57:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="P_PGID" ref="0x108697130" loc="82:/usr/include/sys/wait.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDE3" ref="0x1093e7640" loc="1235:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:35" name="ATM128_OCR2" ref="0x10935a550" loc="125:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:104" name="ATM128_SPMCSR" ref="0x109352c50" loc="223:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="IDRD" ref="0x109399cd0" loc="942:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCIE3B" ref="0x1093ae780" loc="801:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ISC40" ref="0x109378140" loc="747:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="U2X1" ref="0x1093c9020" loc="1026:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CSB0" ref="0x10939d020" loc="906:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="UCPOL" ref="0x109391340" loc="989:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="MUX3" ref="0x1093be020" loc="1095:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="sendDataPayload" ref="0x108eb56e0" loc="519:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="endForwardTask" ref="0x109026770" loc="448:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="startDutyCycle" ref="0x108e3e6a0" loc="570:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="endDataTask" ref="0x1092417b0" loc="431:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="startForwardRequestPause" ref="0x108d3d640" loc="588:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="clearBuffer" ref="0x109367810" loc="419:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="forward" ref="0x108f11740" loc="470:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="updateEDC" ref="0x108d0c4c0" loc="598:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="NO_TASK" ref="0x108cbeda0" loc="56:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="NUM_TASKS" ref="0x108cbea70" loc="55:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="stopDoneTask" ref="0x1096fada0" loc="102:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="sendDoneTask" ref="0x10969dc30" loc="156:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="startDoneTask" ref="0x1096f9e40" loc="97:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="MINDT" ref="0x109885530" loc="45:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:230" name="MAXT" ref="0x109885860" loc="46:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="fired" ref="0x109a22020" loc="74:/Users/ytc/Applications/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="END_OF_LIST" ref="0x109a39d30" loc="56:/Users/ytc/Applications/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="updateFromTimer" ref="0x109a464c0" loc="71:/Users/ytc/Applications/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="NUM_TIMERS" ref="0x109a399e0" loc="55:/Users/ytc/Applications/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="NUM_CLIENTS" ref="0x109afba40" loc="48:/Users/ytc/Applications/tinyos-main/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="errorTask" ref="0x109af7840" loc="169:/Users/ytc/Applications/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="CancelTask" ref="0x109b62960" loc="126:/Users/ytc/Applications/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="sendProbe" ref="0x109b7c680" loc="31:/Users/ytc/Documents/workspace/NewMetricOR/src/NeighborDiscovery/NeighborDiscoveryP.nc">
      <component-ref qname="NeighborDiscoveryP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
  </constants>
  <functions>
  </functions>
  <typedefs>
    <typedef name="__darwin_pthread_attr_t" ref="0x1084b29b0" loc="109:/usr/include/sys/_pthread/_pthread_types.h">
      <type-tag size="I:64" alignment="I:8"><struct-ref name="_opaque_pthread_attr_t" ref="0x1084ab6f0"/>
        <typename><typedef-ref name="__darwin_pthread_attr_t" ref="0x1084b29b0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="intptr_t" ref="0x1084c2e10" loc="30:/usr/include/sys/_types/_intptr_t.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="intptr_t" ref="0x1084c2e10"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1CH_t" ref="0x109837c50" loc="279:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1CH_t" ref="0x109837c50"/></typename>
      </type-int>
    </typedef>
    <typedef name="serial_packet_t" ref="0x108c90a20" loc="134:/Users/ytc/Applications/tinyos-main/tos/lib/serial/Serial.h">
      <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_packet" ref="0x108c90020"/>
        <typename><typedef-ref name="serial_packet_t" ref="0x108c90a20"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR3B_t" ref="0x10983c090" loc="247:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x10983e280"/>
        <typename><typedef-ref name="Atm128_TCCR3B_t" ref="0x10983c090"/></typename>
      </type-tag>
    </typedef>
    <typedef name="rune_t" ref="0x108743be0" loc="30:/usr/include/sys/_types/_rune_t.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="rune_t" ref="0x108743be0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_blkcnt_t" ref="0x1084a25c0" loc="55:/usr/include/sys/_types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__darwin_blkcnt_t" ref="0x1084a25c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="wchar_t" ref="0x1081dee50" loc="325:/opt/local/lib/gcc47/gcc/x86_64-apple-darwin16/4.7.4/include/stddef.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="wchar_t" ref="0x1081dee50"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_size_t" ref="0x10849f020" loc="92:/usr/include/i386/_types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__darwin_size_t" ref="0x10849f020"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128Admux_t" ref="0x1093fc5e0" loc="99:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x1093fc110"/>
        <typename><typedef-ref name="Atm128Admux_t" ref="0x1093fc5e0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="ushort" ref="0x108d25020" loc="91:/usr/include/sys/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="ushort" ref="0x108d25020"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_ino_t" ref="0x1084a48c0" loc="64:/usr/include/sys/_types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__darwin_ino_t" ref="0x1084a48c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="tossim_footer_t" ref="0x108c9b640" loc="16:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimRadioMsg.h">
      <type-tag size="I:2" alignment="I:1"><nx_struct-ref name="tossim_footer" ref="0x108c9b020"/>
        <typename><typedef-ref name="tossim_footer_t" ref="0x108c9b640"/></typename>
      </type-tag>
    </typedef>
    <typedef name="errno_t" ref="0x10867b020" loc="30:/usr/include/sys/_types/_errno_t.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="errno_t" ref="0x10867b020"/></typename>
      </type-int>
    </typedef>
    <typedef name="__int64_t" ref="0x10849b3e0" loc="46:/usr/include/i386/_types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__int64_t" ref="0x10849b3e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__int16_t" ref="0x10849a410" loc="42:/usr/include/i386/_types.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="__int16_t" ref="0x10849a410"/></typename>
      </type-int>
    </typedef>
    <typedef name="serial_header_t" ref="0x108c92ca0" loc="129:/Users/ytc/Applications/tinyos-main/tos/lib/serial/Serial.h">
      <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_header" ref="0x108c93bc0"/>
        <typename><typedef-ref name="serial_header_t" ref="0x108c92ca0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="TMilli" ref="0x108cfacb0" loc="42:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.h">
      <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x108cfa940"/>
        <typename><typedef-ref name="TMilli" ref="0x108cfacb0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="filesec_t" ref="0x108d4cc40" loc="31:/usr/include/sys/_types/_filesec_t.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="V:" alignment="V:"><struct-ref name="_filesec" ref="0x108d4c820"/></type-tag>
        <typename><typedef-ref name="filesec_t" ref="0x108d4cc40"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="_RuneEntry" ref="0x1088c3b30" loc="65:/usr/include/runetype.h">
      <type-tag size="I:24" alignment="I:8"><struct-ref ref="0x1088c35b0"/>
        <typename><typedef-ref name="_RuneEntry" ref="0x1088c3b30"/></typename>
      </type-tag>
    </typedef>
    <typedef name="user_long_t" ref="0x10879d9b0" loc="100:/usr/include/i386/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="user_long_t" ref="0x10879d9b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT0_t" ref="0x109804020" loc="111:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT0_t" ref="0x109804020"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1BL_t" ref="0x109837840" loc="278:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1BL_t" ref="0x109837840"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR2_t" ref="0x1098030d0" loc="116:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR2_t" ref="0x1098030d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="fd_set" ref="0x108a8e020" loc="48:/usr/include/sys/_types/_fd_def.h">
      <documentation loc="32:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_mote.h">
        <short>&#10; The C functions that allow TOSSIM-side code to access the SimMoteP&#10; component.</short>
        <long>&#10; The C functions that allow TOSSIM-side code to access the SimMoteP&#10; component.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-tag size="I:128" alignment="I:4"><struct-ref name="fd_set" ref="0x108a79530"/>
        <typename><typedef-ref name="fd_set" ref="0x108a8e020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="list_t" ref="0x108efc090" loc="217:/Users/ytc/Documents/workspace/NewMetricOR/src/simclist.h">
      <documentation loc="193:/Users/ytc/Documents/workspace/NewMetricOR/src/simclist.h">
        <short> list object *</short>
      </documentation>
      <type-tag size="I:120" alignment="I:8"><struct-ref ref="0x108efe680"/>
        <typename><typedef-ref name="list_t" ref="0x108efc090"/></typename>
      </type-tag>
    </typedef>
    <typedef name="sim_time_t" ref="0x10897a320" loc="51:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_tossim.h">
      <documentation loc="32:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_tossim.h">
        <short>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0x10897a320"/></typename>
      </type-int>
    </typedef>
    <typedef name="float_t" ref="0x1087ceaa0" loc="59:/opt/local/lib/gcc47/gcc/x86_64-apple-darwin16/4.7.4/include-fixed/math.h">
      <documentation loc="50:/opt/local/lib/gcc47/gcc/x86_64-apple-darwin16/4.7.4/include-fixed/math.h">
        <short>****************************************************************************&#10; Floating point data types                                                  *&#10;*****************************************************************************</short>
      </documentation>
      <type-float cname="float" size="I:4" alignment="I:4">
        <typename><typedef-ref name="float_t" ref="0x1087ceaa0"/></typename>
      </type-float>
    </typedef>
    <typedef name="mode_t" ref="0x10879a250" loc="30:/usr/include/sys/_types/_mode_t.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="mode_t" ref="0x10879a250"/></typename>
      </type-int>
    </typedef>
    <typedef name="mcontext_t" ref="0x1086ef090" loc="115:/usr/include/i386/_mcontext.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:712" alignment="I:8"><struct-ref name="__darwin_mcontext64" ref="0x1086e5020"/></type-tag>
        <typename><typedef-ref name="mcontext_t" ref="0x1086ef090"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="Atm128_TCCR1C_t" ref="0x10983a0d0" loc="262:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x10983b790"/>
        <typename><typedef-ref name="Atm128_TCCR1C_t" ref="0x10983a0d0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="int_least32_t" ref="0x1084bd490" loc="40:/opt/local/lib/gcc47/gcc/x86_64-apple-darwin16/4.7.4/include-fixed/stdint.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="int_least32_t" ref="0x1084bd490"/></typename>
      </type-int>
    </typedef>
    <typedef name="user_size_t" ref="0x10879d1e0" loc="98:/usr/include/i386/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="user_size_t" ref="0x10879d1e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__builtin_va_list" ref="0x1081d6690"  loc="NONE">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="V:" alignment="V:"><struct-ref ref="0x1081d6530"/></type-tag>
      </type-pointer>
    </typedef>
    <typedef name="__uint32_t" ref="0x10849b020" loc="45:/usr/include/i386/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__uint32_t" ref="0x10849b020"/></typename>
      </type-int>
    </typedef>
    <typedef name="TMicro" ref="0x108cf9c80" loc="44:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.h">
      <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x108cf9910"/>
        <typename><typedef-ref name="TMicro" ref="0x108cf9c80"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__darwin_nl_item" ref="0x1084b8020" loc="39:/usr/include/_types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_nl_item" ref="0x1084b8020"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_float" ref="0x108cf8ac0" loc="6:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricOR.h">
      <type-float cname="float" size="I:4" alignment="I:1" network="nx_float">
        <typename><typedef-ref name="nx_float" ref="0x108cf8ac0"/></typename>
      </type-float>
    </typedef>
    <typedef name="__darwin_wchar_t" ref="0x10849f870" loc="104:/usr/include/i386/_types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_wchar_t" ref="0x10849f870"/></typename>
      </type-int>
    </typedef>
    <typedef name="nlink_t" ref="0x108d20160" loc="30:/usr/include/sys/_types/_nlink_t.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="nlink_t" ref="0x108d20160"/></typename>
      </type-int>
    </typedef>
    <typedef name="clock_t" ref="0x108a9e090" loc="30:/usr/include/sys/_types/_clock_t.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="clock_t" ref="0x108a9e090"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1BH_t" ref="0x109837430" loc="277:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1BH_t" ref="0x109837430"/></typename>
      </type-int>
    </typedef>
    <typedef name="heap_t" ref="0x108a1d0d0" loc="65:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/heap.h">
      <documentation loc="53:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/heap.h">
        <short>&#10; </short>
        <long>&#10; @author Philip Levis&#10;</long>
      </documentation>
      <type-tag size="I:24" alignment="I:8"><struct-ref name="heap" ref="0x108a1e690"/>
        <typename><typedef-ref name="heap_t" ref="0x108a1d0d0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pthread_condattr_t" ref="0x108d1fde0" loc="30:/usr/include/sys/_pthread/_pthread_condattr_t.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="_opaque_pthread_condattr_t" ref="0x1084acd40"/>
        <typename><typedef-ref name="pthread_condattr_t" ref="0x108d1fde0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="user_ulong_t" ref="0x10879ddb0" loc="101:/usr/include/i386/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="user_ulong_t" ref="0x10879ddb0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_ssize_t" ref="0x1084a0d00" loc="119:/usr/include/i386/_types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__darwin_ssize_t" ref="0x1084a0d00"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_uint16_t" ref="0x10864f1f0" loc="446:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
        <typename><typedef-ref name="nxle_uint16_t" ref="0x10864f1f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_log_channel_t" ref="0x1089b07c0" loc="61:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_log.c">
      <type-tag size="I:24" alignment="I:8"><struct-ref name="sim_log_channel" ref="0x1089b29c0"/>
        <typename><typedef-ref name="sim_log_channel_t" ref="0x1089b07c0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_int" ref="0x108d278a0" loc="86:/usr/include/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="u_int" ref="0x108d278a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_once_t" ref="0x108d1ccd0" loc="30:/usr/include/sys/_pthread/_pthread_once_t.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="_opaque_pthread_once_t" ref="0x1084afb80"/>
        <typename><typedef-ref name="pthread_once_t" ref="0x108d1ccd0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint" ref="0x108d253b0" loc="92:/usr/include/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint" ref="0x108d253b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="am_group_t" ref="0x108c7c400" loc="11:/Users/ytc/Applications/tinyos-main/tos/types/AM.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="am_group_t" ref="0x108c7c400"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCCR3C_t" ref="0x10983a590" loc="265:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x10983b790"/>
        <typename><typedef-ref name="Atm128_TCCR3C_t" ref="0x10983a590"/></typename>
      </type-tag>
    </typedef>
    <typedef name="ino64_t" ref="0x108d21920" loc="30:/usr/include/sys/_types/_ino64_t.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="ino64_t" ref="0x108d21920"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_least8_t" ref="0x1084bdc90" loc="42:/opt/local/lib/gcc47/gcc/x86_64-apple-darwin16/4.7.4/include-fixed/stdint.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint_least8_t" ref="0x1084bdc90"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT1H_t" ref="0x10983a9e0" loc="269:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT1H_t" ref="0x10983a9e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT3L_t" ref="0x109838650" loc="272:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT3L_t" ref="0x109838650"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_fast32_t" ref="0x1084c2570" loc="55:/opt/local/lib/gcc47/gcc/x86_64-apple-darwin16/4.7.4/include-fixed/stdint.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint_fast32_t" ref="0x1084c2570"/></typename>
      </type-int>
    </typedef>
    <typedef name="blksize_t" ref="0x108d23480" loc="30:/usr/include/sys/_types/_blksize_t.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="blksize_t" ref="0x108d23480"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_least64_t" ref="0x1084bd890" loc="41:/opt/local/lib/gcc47/gcc/x86_64-apple-darwin16/4.7.4/include-fixed/stdint.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int_least64_t" ref="0x1084bd890"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ETIFR_t" ref="0x10982c530" loc="324:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x10982c110"/>
        <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x10982c530"/></typename>
      </type-tag>
    </typedef>
    <typedef name="rusage_info_current" ref="0x108726570" loc="281:/usr/include/sys/resource.h">
      <type-tag size="I:232" alignment="I:8"><struct-ref name="rusage_info_v3" ref="0x108722260"/>
        <typename><typedef-ref name="rusage_info_current" ref="0x108726570"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCNT2_t" ref="0x109804ca0" loc="115:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT2_t" ref="0x109804ca0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1AL_t" ref="0x109837020" loc="276:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1AL_t" ref="0x109837020"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_mach_port_t" ref="0x1084a62e0" loc="69:/usr/include/sys/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_mach_port_t" ref="0x1084a62e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="rsize_t" ref="0x108673b90" loc="30:/usr/include/sys/_types/_rsize_t.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="rsize_t" ref="0x108673b90"/></typename>
      </type-int>
    </typedef>
    <typedef name="in_addr_t" ref="0x108d23ca0" loc="30:/usr/include/sys/_types/_in_addr_t.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="in_addr_t" ref="0x108d23ca0"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_event_t" ref="0x108983410" loc="51:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_event_queue.h">
      <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x108983020"/>
        <typename><typedef-ref name="sim_event_t" ref="0x108983410"/></typename>
      </type-tag>
    </typedef>
    <typedef name="error_t" ref="0x10881bcb0" loc="67:/Users/ytc/Applications/tinyos-main/tos/types/TinyError.h">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="error_t" ref="0x10881bcb0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_uid_t" ref="0x1084a8160" loc="75:/usr/include/sys/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_uid_t" ref="0x1084a8160"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_SFIOR_t" ref="0x109848310" loc="178:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x109849ec0"/>
        <typename><typedef-ref name="Atm128_SFIOR_t" ref="0x109848310"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__darwin_clock_t" ref="0x1084a04e0" loc="117:/usr/include/i386/_types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__darwin_clock_t" ref="0x1084a04e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_least8_t" ref="0x1084bbc20" loc="38:/opt/local/lib/gcc47/gcc/x86_64-apple-darwin16/4.7.4/include-fixed/stdint.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="int_least8_t" ref="0x1084bbc20"/></typename>
      </type-int>
    </typedef>
    <typedef name="FILE" ref="0x10890d930" loc="153:/usr/include/stdio.h">
      <type-tag size="I:152" alignment="I:8"><struct-ref name="__sFILE" ref="0x108901980"/>
        <typename><typedef-ref name="FILE" ref="0x10890d930"/></typename>
      </type-tag>
    </typedef>
    <typedef name="fixpt_t" ref="0x108d24b80" loc="104:/usr/include/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="fixpt_t" ref="0x108d24b80"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ADCL_t" ref="0x1093f5cf0" loc="161:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ADCL_t" ref="0x1093f5cf0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_gid_t" ref="0x1084a3ab0" loc="60:/usr/include/sys/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_gid_t" ref="0x1084a3ab0"/></typename>
      </type-int>
    </typedef>
    <typedef name="radio_stats_t" ref="0x108c93860" loc="121:/Users/ytc/Applications/tinyos-main/tos/lib/serial/Serial.h">
      <type-tag size="I:18" alignment="I:2"><struct-ref name="radio_stats" ref="0x108c955c0"/>
        <typename><typedef-ref name="radio_stats_t" ref="0x108c93860"/></typename>
      </type-tag>
    </typedef>
    <typedef name="clockid_t" ref="0x108ab5e80" loc="171:/usr/include/time.h">
      <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x108ab8ce0"/>
        <typename><typedef-ref name="clockid_t" ref="0x108ab5e80"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_ICR1H_t" ref="0x109834db0" loc="291:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ICR1H_t" ref="0x109834db0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ICR3L_t" ref="0x1098339f0" loc="294:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ICR3L_t" ref="0x1098339f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="gid_t" ref="0x108d23890" loc="30:/usr/include/sys/_types/_gid_t.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="gid_t" ref="0x108d23890"/></typename>
      </type-int>
    </typedef>
    <typedef name="user_addr_t" ref="0x10878ed80" loc="97:/usr/include/i386/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="user_addr_t" ref="0x10878ed80"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_packet_t" ref="0x108c6b9a0" loc="59:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_packet.h">
      <documentation loc="32:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_packet.h">
        <short>&#10;&#10; TOSSIM packet abstract data type, so C++ code can call into nesC&#10; code that does the native-to-network type translation.</short>
        <long>&#10;&#10; TOSSIM packet abstract data type, so C++ code can call into nesC&#10; code that does the native-to-network type translation.&#10;&#10; @author Philip Levis&#10; @date   Jan 2 2006&#10;</long>
      </documentation>
      <type-tag size="I:0" alignment="I:1"><struct-ref name="sim_packet" ref="0x108c6b660"/>
        <typename><typedef-ref name="sim_packet_t" ref="0x108c6b9a0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128Adcsra_t" ref="0x1093f54f0" loc="158:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x1093f6d70"/>
        <typename><typedef-ref name="Atm128Adcsra_t" ref="0x1093f54f0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="int8_t" ref="0x1084b8cc0" loc="30:/usr/include/sys/_types/_int8_t.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="int8_t" ref="0x1084b8cc0"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_log_output_t" ref="0x1089b2650" loc="54:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_log.c">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="sim_log_output" ref="0x1089b3d90"/>
        <typename><typedef-ref name="sim_log_output_t" ref="0x1089b2650"/></typename>
      </type-tag>
    </typedef>
    <typedef name="suseconds_t" ref="0x108a89890" loc="30:/usr/include/sys/_types/_suseconds_t.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="suseconds_t" ref="0x108a89890"/></typename>
      </type-int>
    </typedef>
    <typedef name="sigset_t" ref="0x1086eb740" loc="30:/usr/include/sys/_types/_sigset_t.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="sigset_t" ref="0x1086eb740"/></typename>
      </type-int>
    </typedef>
    <typedef name="T32khz" ref="0x108cf94d0" loc="43:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.h">
      <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x108cf9160"/>
        <typename><typedef-ref name="T32khz" ref="0x108cf94d0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_short" ref="0x108d27500" loc="85:/usr/include/sys/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="u_short" ref="0x108d27500"/></typename>
      </type-int>
    </typedef>
    <typedef name="tossim_header_t" ref="0x108c7aba0" loc="12:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimRadioMsg.h">
      <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="tossim_header" ref="0x108c7bab0"/>
        <typename><typedef-ref name="tossim_header_t" ref="0x108c7aba0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="ptrdiff_t" ref="0x1081de620" loc="150:/opt/local/lib/gcc47/gcc/x86_64-apple-darwin16/4.7.4/include/stddef.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="ptrdiff_t" ref="0x1081de620"/></typename>
      </type-int>
    </typedef>
    <typedef name="TSecond" ref="0x1081df840" loc="41:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.h">
      <documentation loc="1:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORAppC.nc">
        <short>&#10;Copyright (C),2014-2017, YTC, www.bjfulinux.cn&#10;Copyright (C),2014-2017, ENS Lab, ens.bjfu.edu.cn&#10;Created on  2017-06-30 09:11&#10;</short>
        <long>&#10;Copyright (C),2014-2017, YTC, www.bjfulinux.cn&#10;Copyright (C),2014-2017, ENS Lab, ens.bjfu.edu.cn&#10;Created on  2017-06-30 09:11&#10;@author: ytc recessburton@gmail.com&#10;@version: 0.1&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the University of California nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;*</long>
      </documentation>
      <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x1081df4d0"/>
        <typename><typedef-ref name="TSecond" ref="0x1081df840"/></typename>
      </type-tag>
    </typedef>
    <typedef name="blkcnt_t" ref="0x108d23020" loc="30:/usr/include/sys/_types/_blkcnt_t.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="blkcnt_t" ref="0x108d23020"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint32_t" ref="0x1084bb400" loc="31:/usr/include/_types/_uint32_t.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x1084bb400"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_fp_control_t" ref="0x1086a35a0" loc="114:/usr/include/mach/i386/_structs.h">
      <type-tag size="I:2" alignment="I:2"><struct-ref name="__darwin_fp_control" ref="0x10869b390"/>
        <typename><typedef-ref name="__darwin_fp_control_t" ref="0x1086a35a0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="nxle_uint64_t" ref="0x1086590d0" loc="448:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:1" network="nxle_uint64_t">
        <typename><typedef-ref name="nxle_uint64_t" ref="0x1086590d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_uint8_t" ref="0x10864c020" loc="435:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
        <typename><typedef-ref name="nx_uint8_t" ref="0x10864c020"/></typename>
      </type-int>
    </typedef>
    <typedef name="uintptr_t" ref="0x1084c3230" loc="30:/usr/include/sys/_types/_uintptr_t.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uintptr_t" ref="0x1084c3230"/></typename>
      </type-int>
    </typedef>
    <typedef name="caddr_t" ref="0x108d243d0" loc="99:/usr/include/sys/types.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        <typename><typedef-ref name="caddr_t" ref="0x108d243d0"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="fcodeblobs_t" ref="0x108d31680" loc="378:/usr/include/sys/fcntl.h">
      <documentation loc="369:/usr/include/sys/fcntl.h">
        <short> Information the user passes in to get the codeblobs out of the kernel *</short>
      </documentation>
      <type-tag size="I:48" alignment="I:8"><struct-ref name="fcodeblobs" ref="0x108d32130"/>
        <typename><typedef-ref name="fcodeblobs_t" ref="0x108d31680"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__darwin_pthread_rwlockattr_t" ref="0x1084b66a0" loc="117:/usr/include/sys/_pthread/_pthread_types.h">
      <type-tag size="I:24" alignment="I:8"><struct-ref name="_opaque_pthread_rwlockattr_t" ref="0x1084b1020"/>
        <typename><typedef-ref name="__darwin_pthread_rwlockattr_t" ref="0x1084b66a0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint_fast64_t" ref="0x1084c2980" loc="56:/opt/local/lib/gcc47/gcc/x86_64-apple-darwin16/4.7.4/include-fixed/stdint.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint_fast64_t" ref="0x1084c2980"/></typename>
      </type-int>
    </typedef>
    <typedef name="uuid_t" ref="0x108e68ba0" loc="30:/usr/include/sys/_types/_uuid_t.h">
      <type-array elements="I:16" size="I:16" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
        <typename><typedef-ref name="uuid_t" ref="0x108e68ba0"/></typename>
      </type-array>
    </typedef>
    <typedef name="Atm128_TCNT3H_t" ref="0x109838240" loc="271:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT3H_t" ref="0x109838240"/></typename>
      </type-int>
    </typedef>
    <typedef name="__uint16_t" ref="0x10849a7e0" loc="43:/usr/include/i386/_types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="__uint16_t" ref="0x10849a7e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_char" ref="0x108d27150" loc="84:/usr/include/sys/types.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="u_char" ref="0x108d27150"/></typename>
      </type-int>
    </typedef>
    <typedef name="mcu_power_t" ref="0x10940a1b0" loc="120:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="mcu_power_t" ref="0x10940a1b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast16_t" ref="0x1084c0150" loc="50:/opt/local/lib/gcc47/gcc/x86_64-apple-darwin16/4.7.4/include-fixed/stdint.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="int_fast16_t" ref="0x1084c0150"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1AH_t" ref="0x109838a80" loc="275:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1AH_t" ref="0x109838a80"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1CL_t" ref="0x109836090" loc="280:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1CL_t" ref="0x109836090"/></typename>
      </type-int>
    </typedef>
    <typedef name="fpos_t" ref="0x108902ae0" loc="77:/usr/include/stdio.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="fpos_t" ref="0x108902ae0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCCR1B_t" ref="0x10983eb80" loc="244:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x10983e280"/>
        <typename><typedef-ref name="Atm128_TCCR1B_t" ref="0x10983eb80"/></typename>
      </type-tag>
    </typedef>
    <typedef name="div_t" ref="0x108742640" loc="85:/usr/include/stdlib.h">
      <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x108742220"/>
        <typename><typedef-ref name="div_t" ref="0x108742640"/></typename>
      </type-tag>
    </typedef>
    <typedef name="segsz_t" ref="0x108d20580" loc="124:/usr/include/sys/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="segsz_t" ref="0x108d20580"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_gain_noise_t" ref="0x108b43230" loc="6:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_gain.c">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="sim_gain_noise" ref="0x108b449a0"/>
        <typename><typedef-ref name="sim_gain_noise_t" ref="0x108b43230"/></typename>
      </type-tag>
    </typedef>
    <typedef name="size_t" ref="0x1081dea60" loc="213:/opt/local/lib/gcc47/gcc/x86_64-apple-darwin16/4.7.4/include/stddef.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="size_t" ref="0x1081dea60"/></typename>
      </type-int>
    </typedef>
    <typedef name="socklen_t" ref="0x108d5a480" loc="30:/usr/include/sys/_types/_socklen_t.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="socklen_t" ref="0x108d5a480"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_suseconds_t" ref="0x1084a7cb0" loc="74:/usr/include/sys/_types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_suseconds_t" ref="0x1084a7cb0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__uint8_t" ref="0x10849a090" loc="41:/usr/include/i386/_types.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__uint8_t" ref="0x10849a090"/></typename>
      </type-int>
    </typedef>
    <typedef name="list_hash_t" ref="0x108f0d090" loc="70:/Users/ytc/Documents/workspace/NewMetricOR/src/simclist.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="list_hash_t" ref="0x108f0d090"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCCR0_t" ref="0x109805aa0" loc="110:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x109805020"/>
        <typename><typedef-ref name="Atm128_TCCR0_t" ref="0x109805aa0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="nx_am_id_t" ref="0x108c7e270" loc="6:/Users/ytc/Applications/tinyos-main/tos/types/AM.h">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/platform_message.h">
        <short>&#10; Defining the platform-independently named packet structures to be the&#10; tossim structures.</short>
        <long>&#10; Defining the platform-independently named packet structures to be the&#10; tossim structures.&#10;&#10; @author Philip Levis&#10; @date   Dec 2 2005&#10; Revision:  $Revision: 1.5 $&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
        <typename><typedef-ref name="nx_am_id_t" ref="0x108c7e270"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_ct_rune_t" ref="0x10849c420" loc="70:/usr/include/i386/_types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_ct_rune_t" ref="0x10849c420"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_fsfilcnt_t" ref="0x1084a3690" loc="59:/usr/include/sys/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_fsfilcnt_t" ref="0x1084a3690"/></typename>
      </type-int>
    </typedef>
    <typedef name="message_header_t" ref="0x108c8e090" loc="53:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/platform_message.h">
      <type-tag size="I:7" alignment="I:1"><union-ref name="message_header" ref="0x108c8f730"/>
        <typename><typedef-ref name="message_header_t" ref="0x108c8e090"/></typename>
      </type-tag>
    </typedef>
    <typedef name="gain_entry_t" ref="0x108b50020" loc="57:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_gain.h">
      <documentation loc="32:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_gain.h">
        <short>&#10; The C functions that allow TOSSIM-side code to access the SimMoteP&#10; component.</short>
        <long>&#10; The C functions that allow TOSSIM-side code to access the SimMoteP&#10; component.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-tag size="I:24" alignment="I:8"><struct-ref name="gain_entry" ref="0x108b35510"/>
        <typename><typedef-ref name="gain_entry_t" ref="0x108b50020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="am_addr_t" ref="0x108c7c7e0" loc="12:/Users/ytc/Applications/tinyos-main/tos/types/AM.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="am_addr_t" ref="0x108c7c7e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_int32_t" ref="0x10864d120" loc="433:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="int" size="I:4" alignment="I:1" network="nx_int32_t">
        <typename><typedef-ref name="nx_int32_t" ref="0x10864d120"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ADCH_t" ref="0x1093f58f0" loc="160:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ADCH_t" ref="0x1093f58f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_least16_t" ref="0x1084bf0d0" loc="43:/opt/local/lib/gcc47/gcc/x86_64-apple-darwin16/4.7.4/include-fixed/stdint.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint_least16_t" ref="0x1084bf0d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="overheardcountlistnode" ref="0x108d0f3a0" loc="55:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricOR.h">
      <type-tag size="I:12" alignment="I:4"><struct-ref name="overheardcountlistnode" ref="0x108d10870"/>
        <typename><typedef-ref name="overheardcountlistnode" ref="0x108d0f3a0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint8_t" ref="0x1084b9bc0" loc="31:/usr/include/_types/_uint8_t.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x1084b9bc0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_socklen_t" ref="0x1084a0930" loc="118:/usr/include/i386/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_socklen_t" ref="0x1084a0930"/></typename>
      </type-int>
    </typedef>
    <typedef name="element_unserializer" ref="0x108f03050" loc="165:/Users/ytc/Documents/workspace/NewMetricOR/src/simclist.h">
      <documentation loc="150:/Users/ytc/Documents/workspace/NewMetricOR/src/simclist.h">
        <short>&#10; a function for un-serializing an element.</short>
        <long>&#10; a function for un-serializing an element.&#10;&#10; An unserializer function accomplishes the inverse operation of the&#10; serializer function.  An unserializer function is one that gets a&#10; serialized representation of an element and turns it backe to the original&#10; element. The serialized representation is passed as a reference to a buffer&#10; with its data, and the function allocates and returns the buffer containing&#10; the original element, and it sets the length of this buffer into the&#10; integer passed by reference.&#10;&#10; @param data              reference to the buffer with the serialized representation of the element&#10; @param data_len          reference to the location where to store the length of the data in the buffer returned&#10; @return                  reference to a buffer with the original, unserialized representation of the element&#10;</long>
      </documentation>
      <type-pointer size="I:8" alignment="I:8">
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-qualified const="">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
                <typename><typedef-ref name="uint32_t" ref="0x1084bb400"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <typename><typedef-ref name="element_unserializer" ref="0x108f03050"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="time_t" ref="0x108a89410" loc="30:/usr/include/sys/_types/_time_t.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="time_t" ref="0x108a89410"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_blksize_t" ref="0x1084a2a00" loc="56:/usr/include/sys/_types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_blksize_t" ref="0x1084a2a00"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_int8_t" ref="0x10864acd0" loc="441:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="signed char" size="I:1" alignment="I:1" network="nxle_int8_t">
        <typename><typedef-ref name="nxle_int8_t" ref="0x10864acd0"/></typename>
      </type-int>
    </typedef>
    <typedef name="lldiv_t" ref="0x10874db00" loc="96:/usr/include/stdlib.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x10874d6e0"/>
        <typename><typedef-ref name="lldiv_t" ref="0x10874db00"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pthread_attr_t" ref="0x1086ef550" loc="30:/usr/include/sys/_pthread/_pthread_attr_t.h">
      <type-tag size="I:64" alignment="I:8"><struct-ref name="_opaque_pthread_attr_t" ref="0x1084ab6f0"/>
        <typename><typedef-ref name="pthread_attr_t" ref="0x1086ef550"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pid_t" ref="0x108697880" loc="30:/usr/include/sys/_types/_pid_t.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="pid_t" ref="0x108697880"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_rwlockattr_t" ref="0x108d1b800" loc="30:/usr/include/sys/_pthread/_pthread_rwlockattr_t.h">
      <type-tag size="I:24" alignment="I:8"><struct-ref name="_opaque_pthread_rwlockattr_t" ref="0x1084b1020"/>
        <typename><typedef-ref name="pthread_rwlockattr_t" ref="0x108d1b800"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR0_t" ref="0x109804420" loc="112:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR0_t" ref="0x109804420"/></typename>
      </type-int>
    </typedef>
    <typedef name="__uint64_t" ref="0x10849b7f0" loc="47:/usr/include/i386/_types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__uint64_t" ref="0x10849b7f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_int32_t" ref="0x108652bc0" loc="443:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="int" size="I:4" alignment="I:1" network="nxle_int32_t">
        <typename><typedef-ref name="nxle_int32_t" ref="0x108652bc0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_fp_status_t" ref="0x1086a96b0" loc="164:/usr/include/mach/i386/_structs.h">
      <type-tag size="I:2" alignment="I:2"><struct-ref name="__darwin_fp_status" ref="0x1086a3930"/>
        <typename><typedef-ref name="__darwin_fp_status_t" ref="0x1086a96b0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="_RuneRange" ref="0x1088c16b0" loc="70:/usr/include/runetype.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x1088c1290"/>
        <typename><typedef-ref name="_RuneRange" ref="0x1088c16b0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="va_list" ref="0x108906020" loc="102:/opt/local/lib/gcc47/gcc/x86_64-apple-darwin16/4.7.4/include/stdarg.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="V:" alignment="V:"><struct-ref ref="0x1081d6530"/></type-tag>
        <typename><typedef-ref name="va_list" ref="0x108906020"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="int_fast8_t" ref="0x1084bfce0" loc="49:/opt/local/lib/gcc47/gcc/x86_64-apple-darwin16/4.7.4/include-fixed/stdint.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="int_fast8_t" ref="0x1084bfce0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_pthread_cond_t" ref="0x1084b4020" loc="110:/usr/include/sys/_pthread/_pthread_types.h">
      <type-tag size="I:48" alignment="I:8"><struct-ref name="_opaque_pthread_cond_t" ref="0x1084ac360"/>
        <typename><typedef-ref name="__darwin_pthread_cond_t" ref="0x1084b4020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="tossim_metadata_t" ref="0x108c98090" loc="30:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimRadioMsg.h">
      <type-tag size="I:8" alignment="I:1"><nx_struct-ref name="tossim_metadata" ref="0x108c9b9b0"/>
        <typename><typedef-ref name="tossim_metadata_t" ref="0x108c98090"/></typename>
      </type-tag>
    </typedef>
    <typedef name="element_hash_computer" ref="0x108f07e40" loc="128:/Users/ytc/Documents/workspace/NewMetricOR/src/simclist.h">
      <documentation loc="119:/Users/ytc/Documents/workspace/NewMetricOR/src/simclist.h">
        <short>&#10; a function computing the hash of elements.</short>
        <long>&#10; a function computing the hash of elements.&#10;&#10; An hash computing function is a function that:&#10;      -# receives the reference to an element el&#10;      -# returns a hash value for el&#10;&#10; It is responsability of the function to handle possible NULL values.&#10;</long>
      </documentation>
      <type-pointer size="I:8" alignment="I:8">
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="list_hash_t" ref="0x108f0d090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-qualified const="">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <typename><typedef-ref name="element_hash_computer" ref="0x108f07e40"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="in_port_t" ref="0x108d210d0" loc="30:/usr/include/sys/_types/_in_port_t.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="in_port_t" ref="0x108d210d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_off_t" ref="0x1084a6b20" loc="71:/usr/include/sys/_types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__darwin_off_t" ref="0x1084a6b20"/></typename>
      </type-int>
    </typedef>
    <typedef name="am_id_t" ref="0x108c7c020" loc="10:/Users/ytc/Applications/tinyos-main/tos/types/AM.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="am_id_t" ref="0x108c7c020"/></typename>
      </type-int>
    </typedef>
    <typedef name="intmax_t" ref="0x1084c3630" loc="32:/usr/include/_types/_intmax_t.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="intmax_t" ref="0x1084c3630"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128TimerCtrlCapture_t" ref="0x10983e6a0" loc="241:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x10983e280"/>
        <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x10983e6a0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__darwin_mode_t" ref="0x1084a6710" loc="70:/usr/include/sys/_types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="__darwin_mode_t" ref="0x1084a6710"/></typename>
      </type-int>
    </typedef>
    <typedef name="element_serializer" ref="0x108f06dd0" loc="148:/Users/ytc/Documents/workspace/NewMetricOR/src/simclist.h">
      <documentation loc="130:/Users/ytc/Documents/workspace/NewMetricOR/src/simclist.h">
        <short>&#10; a function for serializing an element.</short>
        <long>&#10; a function for serializing an element.&#10;&#10; A serializer function is one that gets a reference to an element,&#10; and returns a reference to a buffer that contains its serialization&#10; along with the length of this buffer.&#10; It is responsability of the function to handle possible NULL values,&#10; returning a NULL buffer and a 0 buffer length.&#10;&#10; These functions have 3 goals:&#10;  -# &#34;freeze&#34; and &#34;flatten&#34; the memory representation of the element&#10;  -# provide a portable (wrt byte order, or type size) representation of the element, if the dump can be used on different sw/hw combinations&#10;  -# possibly extract a compressed representation of the element&#10;&#10; @param el                reference to the element data&#10; @param serialize_buffer  reference to fill with the length of the buffer&#10; @return                  reference to the buffer with the serialized data&#10;</long>
      </documentation>
      <type-pointer size="I:8" alignment="I:8">
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-qualified const="">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
                <typename><typedef-ref name="uint32_t" ref="0x1084bb400"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <typename><typedef-ref name="element_serializer" ref="0x108f06dd0"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="__darwin_ino64_t" ref="0x1084a4460" loc="62:/usr/include/sys/_types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__darwin_ino64_t" ref="0x1084a4460"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCCR2_t" ref="0x1098048a0" loc="114:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x109805020"/>
        <typename><typedef-ref name="Atm128_TCCR2_t" ref="0x1098048a0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="serial_metadata_t" ref="0x108c8f3d0" loc="138:/Users/ytc/Applications/tinyos-main/tos/lib/serial/Serial.h">
      <type-tag size="I:1" alignment="I:1"><nx_struct-ref name="serial_metadata" ref="0x108c90d90"/>
        <typename><typedef-ref name="serial_metadata_t" ref="0x108c8f3d0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint16_t" ref="0x1084bb020" loc="31:/usr/include/_types/_uint16_t.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x1084bb020"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_int8_t" ref="0x108790920" loc="30:/usr/include/sys/_types/_u_int8_t.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="u_int8_t" ref="0x108790920"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT1L_t" ref="0x10983adf0" loc="270:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT1L_t" ref="0x10983adf0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR3CH_t" ref="0x109834580" loc="287:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3CH_t" ref="0x109834580"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_am_group_t" ref="0x108c7e7a0" loc="7:/Users/ytc/Applications/tinyos-main/tos/types/AM.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
        <typename><typedef-ref name="nx_am_group_t" ref="0x108c7e7a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="message_metadata_t" ref="0x108c8c4a0" loc="61:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/platform_message.h">
      <type-tag size="I:8" alignment="I:1"><union-ref name="message_metadata" ref="0x108c8edd0"/>
        <typename><typedef-ref name="message_metadata_t" ref="0x108c8c4a0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="fd_mask" ref="0x108d1f310" loc="185:/usr/include/sys/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="fd_mask" ref="0x108d1f310"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_time_t" ref="0x1084a2170" loc="120:/usr/include/i386/_types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__darwin_time_t" ref="0x1084a2170"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_uint32_t" ref="0x10864ce60" loc="437:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:1" network="nx_uint32_t">
        <typename><typedef-ref name="nx_uint32_t" ref="0x10864ce60"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_uuid_t" ref="0x1084a8ad0" loc="77:/usr/include/sys/_types.h">
      <type-array elements="I:16" size="I:16" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
        <typename><typedef-ref name="__darwin_uuid_t" ref="0x1084a8ad0"/></typename>
      </type-array>
    </typedef>
    <typedef name="__darwin_dev_t" ref="0x1084a2e10" loc="57:/usr/include/sys/_types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_dev_t" ref="0x1084a2e10"/></typename>
      </type-int>
    </typedef>
    <typedef name="hashtable_t" ref="0x1089a7600" loc="10:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/hashtable.h">
      <type-tag size="V:" alignment="V:"><struct-ref name="hashtable" ref="0x1089a7210"/>
        <typename><typedef-ref name="hashtable_t" ref="0x1089a7600"/></typename>
      </type-tag>
    </typedef>
    <typedef name="element_meter" ref="0x108f072a0" loc="117:/Users/ytc/Documents/workspace/NewMetricOR/src/simclist.h">
      <documentation loc="108:/Users/ytc/Documents/workspace/NewMetricOR/src/simclist.h">
        <short>&#10; an element lenght meter.</short>
        <long>&#10; an element lenght meter.&#10;&#10; An element meter is a function that:&#10;      -# receives the reference to an element el&#10;      -# returns its size in bytes&#10;&#10; It is responsability of the function to handle possible NULL values.&#10;</long>
      </documentation>
      <type-pointer size="I:8" alignment="I:8">
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
            <typename><typedef-ref name="size_t" ref="0x1081dea60"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-qualified const="">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <typename><typedef-ref name="element_meter" ref="0x108f072a0"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="dev_t" ref="0x10879bdf0" loc="30:/usr/include/sys/_types/_dev_t.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="dev_t" ref="0x10879bdf0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_rune_t" ref="0x10849fce0" loc="109:/usr/include/i386/_types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_rune_t" ref="0x10849fce0"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_int32_t" ref="0x10878e130" loc="30:/usr/include/sys/_types/_u_int32_t.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="u_int32_t" ref="0x10878e130"/></typename>
      </type-int>
    </typedef>
    <typedef name="fsfilcnt_t" ref="0x108d19a60" loc="30:/usr/include/sys/_types/_fsfilcnt_t.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="fsfilcnt_t" ref="0x108d19a60"/></typename>
      </type-int>
    </typedef>
    <typedef name="sae_associd_t" ref="0x108d5aa00" loc="286:/usr/include/sys/socket.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="sae_associd_t" ref="0x108d5aa00"/></typename>
      </type-int>
    </typedef>
    <typedef name="ftrimactivefile_t" ref="0x108d2a8f0" loc="439:/usr/include/sys/fcntl.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="ftrimactivefile" ref="0x108d2a020"/>
        <typename><typedef-ref name="ftrimactivefile_t" ref="0x108d2a8f0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint_fast8_t" ref="0x1084c0d20" loc="53:/opt/local/lib/gcc47/gcc/x86_64-apple-darwin16/4.7.4/include-fixed/stdint.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint_fast8_t" ref="0x1084c0d20"/></typename>
      </type-int>
    </typedef>
    <typedef name="idtype_t" ref="0x108697450" loc="83:/usr/include/sys/wait.h">
      <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x108699a00"/>
        <typename><typedef-ref name="idtype_t" ref="0x108697450"/></typename>
      </type-tag>
    </typedef>
    <typedef name="fsignatures_t" ref="0x108d30610" loc="391:/usr/include/sys/fcntl.h">
      <type-tag size="I:24" alignment="I:8"><struct-ref name="fsignatures" ref="0x108d31a30"/>
        <typename><typedef-ref name="fsignatures_t" ref="0x108d30610"/></typename>
      </type-tag>
    </typedef>
    <typedef name="_RuneCharClass" ref="0x1088c02f0" loc="75:/usr/include/runetype.h">
      <type-tag size="I:20" alignment="I:4"><struct-ref ref="0x1088c1e80"/>
        <typename><typedef-ref name="_RuneCharClass" ref="0x1088c02f0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128Assr_t" ref="0x109850020" loc="130:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x109852ad0"/>
        <typename><typedef-ref name="Atm128Assr_t" ref="0x109850020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR3BL_t" ref="0x109834170" loc="286:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3BL_t" ref="0x109834170"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_int16_t" ref="0x1086479e0" loc="432:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="short" size="I:2" alignment="I:1" network="nx_int16_t">
        <typename><typedef-ref name="nx_int16_t" ref="0x1086479e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="NeighborSet" ref="0x108d104c0" loc="49:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricOR.h">
      <type-tag size="I:20" alignment="I:4"><struct-ref name="NeighborSetNode" ref="0x108d11650"/>
        <typename><typedef-ref name="NeighborSet" ref="0x108d104c0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__darwin_pid_t" ref="0x1084a7020" loc="72:/usr/include/sys/_types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_pid_t" ref="0x1084a7020"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ICR1L_t" ref="0x1098331f0" loc="292:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ICR1L_t" ref="0x1098331f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="ucontext_t" ref="0x1086eb2d0" loc="48:/usr/include/sys/_types/_ucontext.h">
      <type-tag size="I:56" alignment="I:8"><struct-ref name="__darwin_ucontext" ref="0x1086ee9a0"/>
        <typename><typedef-ref name="ucontext_t" ref="0x1086eb2d0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="qaddr_t" ref="0x108d24020" loc="97:/usr/include/sys/types.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="quad_t" ref="0x108d25b40"/></typename>
        </type-int>
        <typename><typedef-ref name="qaddr_t" ref="0x108d24020"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="register_t" ref="0x10878e930" loc="87:/usr/include/i386/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="register_t" ref="0x10878e930"/></typename>
      </type-int>
    </typedef>
    <typedef name="fpunchhole_t" ref="0x108d2cb50" loc="433:/usr/include/sys/fcntl.h">
      <type-tag size="I:24" alignment="I:8"><struct-ref name="fpunchhole" ref="0x108d2dd40"/>
        <typename><typedef-ref name="fpunchhole_t" ref="0x108d2cb50"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__darwin_pthread_key_t" ref="0x1084b4a00" loc="112:/usr/include/sys/_pthread/_pthread_types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__darwin_pthread_key_t" ref="0x1084b4a00"/></typename>
      </type-int>
    </typedef>
    <typedef name="element_comparator" ref="0x108f0a730" loc="93:/Users/ytc/Documents/workspace/NewMetricOR/src/simclist.h">
      <documentation loc="84:/Users/ytc/Documents/workspace/NewMetricOR/src/simclist.h">
        <short>&#10; a comparator of elements.</short>
        <long>&#10; a comparator of elements.&#10;&#10; A comparator of elements is a function that:&#10;      -# receives two references to elements a and b&#10;      -# returns {&#60;0, 0, >0} if (a > b), (a == b), (a &#60; b) respectively&#10;&#10; It is responsability of the function to handle possible NULL values.&#10;</long>
      </documentation>
      <type-pointer size="I:8" alignment="I:8">
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-qualified const="">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:8" alignment="I:8">
              <type-qualified const="">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <typename><typedef-ref name="element_comparator" ref="0x108f0a730"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="Atm128_ETIMSK_t" ref="0x10982f020" loc="309:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x109831b70"/>
        <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x10982f020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="rlim_t" ref="0x10870fb90" loc="89:/usr/include/sys/resource.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="rlim_t" ref="0x10870fb90"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_natural_t" ref="0x10849c020" loc="50:/usr/include/i386/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_natural_t" ref="0x10849c020"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128TimerControl_t" ref="0x109805440" loc="108:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <documentation loc="11:/Users/ytc/Applications/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x109805020"/>
        <typename><typedef-ref name="Atm128TimerControl_t" ref="0x109805440"/></typename>
      </type-tag>
    </typedef>
    <typedef name="ssize_t" ref="0x10867a790" loc="30:/usr/include/sys/_types/_ssize_t.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="ssize_t" ref="0x10867a790"/></typename>
      </type-int>
    </typedef>
    <typedef name="sig_atomic_t" ref="0x108696230" loc="39:/usr/include/i386/signal.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="sig_atomic_t" ref="0x108696230"/></typename>
      </type-int>
    </typedef>
    <typedef name="int32_t" ref="0x1084b9420" loc="30:/usr/include/sys/_types/_int32_t.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="int32_t" ref="0x1084b9420"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_mbstate_t" ref="0x10849e4e0" loc="81:/usr/include/i386/_types.h">
      <type-tag size="I:128" alignment="I:8"><union-ref ref="0x10849cc10"/>
        <typename><typedef-ref name="__darwin_mbstate_t" ref="0x10849e4e0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint64_t" ref="0x1084bb820" loc="31:/usr/include/_types/_uint64_t.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint64_t" ref="0x1084bb820"/></typename>
      </type-int>
    </typedef>
    <typedef name="syscall_arg_t" ref="0x10879b9e0" loc="111:/usr/include/i386/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="syscall_arg_t" ref="0x10879b9e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_long" ref="0x108d27c40" loc="88:/usr/include/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="u_long" ref="0x108d27c40"/></typename>
      </type-int>
    </typedef>
    <typedef name="__nesc_atomic_t" ref="0x1093d52f0" loc="94:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__nesc_atomic_t" ref="0x1093d52f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_sigset_t" ref="0x1084a7860" loc="73:/usr/include/sys/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_sigset_t" ref="0x1084a7860"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_int64_t" ref="0x108650320" loc="444:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="long long" size="I:8" alignment="I:1" network="nxle_int64_t">
        <typename><typedef-ref name="nxle_int64_t" ref="0x108650320"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_int16_t" ref="0x108652490" loc="442:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="short" size="I:2" alignment="I:1" network="nxle_int16_t">
        <typename><typedef-ref name="nxle_int16_t" ref="0x108652490"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_t" ref="0x108d1bc60" loc="30:/usr/include/sys/_pthread/_pthread_t.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:8192" alignment="I:8"><struct-ref name="_opaque_pthread_t" ref="0x1084b19a0"/></type-tag>
        <typename><typedef-ref name="pthread_t" ref="0x108d1bc60"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="imaxdiv_t" ref="0x1084c78b0" loc="242:/usr/include/inttypes.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x1084c7490"/>
        <typename><typedef-ref name="imaxdiv_t" ref="0x1084c78b0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR1A_t" ref="0x109844500" loc="205:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x109845b40"/>
        <typename><typedef-ref name="Atm128_TCCR1A_t" ref="0x109844500"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint_least32_t" ref="0x1084bf4e0" loc="44:/opt/local/lib/gcc47/gcc/x86_64-apple-darwin16/4.7.4/include-fixed/stdint.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint_least32_t" ref="0x1084bf4e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_pthread_mutex_t" ref="0x1084b5020" loc="113:/usr/include/sys/_pthread/_pthread_types.h">
      <type-tag size="I:64" alignment="I:8"><struct-ref name="_opaque_pthread_mutex_t" ref="0x1084ad730"/>
        <typename><typedef-ref name="__darwin_pthread_mutex_t" ref="0x1084b5020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__mbstate_t" ref="0x10849e090" loc="79:/usr/include/i386/_types.h">
      <type-tag size="I:128" alignment="I:8"><union-ref ref="0x10849cc10"/>
        <typename><typedef-ref name="__mbstate_t" ref="0x10849e090"/></typename>
      </type-tag>
    </typedef>
    <typedef name="wint_t" ref="0x1088b2990" loc="31:/usr/include/sys/_types/_wint_t.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="wint_t" ref="0x1088b2990"/></typename>
      </type-int>
    </typedef>
    <typedef name="stack_t" ref="0x1086ee620" loc="42:/usr/include/sys/_types/_sigaltstack.h">
      <type-tag size="I:24" alignment="I:8"><struct-ref name="__darwin_sigaltstack" ref="0x1086ef910"/>
        <typename><typedef-ref name="stack_t" ref="0x1086ee620"/></typename>
      </type-tag>
    </typedef>
    <typedef name="message_footer_t" ref="0x108c8ea50" loc="57:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/platform_message.h">
      <type-tag size="I:2" alignment="I:1"><union-ref name="message_footer" ref="0x108c8e3f0"/>
        <typename><typedef-ref name="message_footer_t" ref="0x108c8ea50"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR3BH_t" ref="0x109836ce0" loc="285:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3BH_t" ref="0x109836ce0"/></typename>
      </type-int>
    </typedef>
    <typedef name="fsblkcnt_t" ref="0x108d195f0" loc="30:/usr/include/sys/_types/_fsblkcnt_t.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="fsblkcnt_t" ref="0x108d195f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="fbootstraptransfer_t" ref="0x108d29870" loc="447:/usr/include/sys/fcntl.h">
      <type-tag size="I:24" alignment="I:8"><struct-ref name="fbootstraptransfer" ref="0x108d2aca0"/>
        <typename><typedef-ref name="fbootstraptransfer_t" ref="0x108d29870"/></typename>
      </type-tag>
    </typedef>
    <typedef name="off_t" ref="0x1089591e0" loc="30:/usr/include/sys/_types/_off_t.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="off_t" ref="0x1089591e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="DataPayload" ref="0x108d112e0" loc="41:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricOR.h">
      <type-tag size="I:8" alignment="I:1"><nx_struct-ref name="DataPayload" ref="0x108d124a0"/>
        <typename><typedef-ref name="DataPayload" ref="0x108d112e0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="ct_rune_t" ref="0x1087437c0" loc="31:/usr/include/sys/_types/_ct_rune_t.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="ct_rune_t" ref="0x1087437c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_int64_t" ref="0x10864d830" loc="434:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="long long" size="I:8" alignment="I:1" network="nx_int64_t">
        <typename><typedef-ref name="nx_int64_t" ref="0x10864d830"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_pthread_once_t" ref="0x1084b5b20" loc="115:/usr/include/sys/_pthread/_pthread_types.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="_opaque_pthread_once_t" ref="0x1084afb80"/>
        <typename><typedef-ref name="__darwin_pthread_once_t" ref="0x1084b5b20"/></typename>
      </type-tag>
    </typedef>
    <typedef name="quad_t" ref="0x108d25b40" loc="96:/usr/include/sys/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="quad_t" ref="0x108d25b40"/></typename>
      </type-int>
    </typedef>
    <typedef name="sa_family_t" ref="0x108d5a020" loc="30:/usr/include/sys/_types/_sa_family_t.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="sa_family_t" ref="0x108d5a020"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128TimerCtrlClock_t" ref="0x10983bbb0" loc="259:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x10983b790"/>
        <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x10983bbb0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="swblk_t" ref="0x108d20940" loc="125:/usr/include/sys/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="swblk_t" ref="0x108d20940"/></typename>
      </type-int>
    </typedef>
    <typedef name="__int8_t" ref="0x1081f1ad0" loc="37:/usr/include/i386/_types.h">
      <documentation loc="691:/usr/include/sys/cdefs.h">
        <short>***************************************&#10;  Public darwin-specific feature macros&#10;****************************************</short>
      </documentation>
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__int8_t" ref="0x1081f1ad0"/></typename>
      </type-int>
    </typedef>
    <typedef name="element_seeker" ref="0x108f09650" loc="106:/Users/ytc/Documents/workspace/NewMetricOR/src/simclist.h">
      <documentation loc="95:/Users/ytc/Documents/workspace/NewMetricOR/src/simclist.h">
        <short>&#10; a seeker of elements.</short>
        <long>&#10; a seeker of elements.&#10;&#10; An element seeker is a function that:&#10;      -# receives a reference to an element el&#10;      -# receives a reference to some indicator data&#10;      -# returns non-0 if the element matches the indicator, 0 otherwise&#10;&#10; It is responsability of the function to handle possible NULL values in any&#10; argument.&#10;</long>
      </documentation>
      <type-pointer size="I:8" alignment="I:8">
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-qualified const="">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:8" alignment="I:8">
              <type-qualified const="">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <typename><typedef-ref name="element_seeker" ref="0x108f09650"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="uint_fast16_t" ref="0x1084c2160" loc="54:/opt/local/lib/gcc47/gcc/x86_64-apple-darwin16/4.7.4/include-fixed/stdint.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint_fast16_t" ref="0x1084c2160"/></typename>
      </type-int>
    </typedef>
    <typedef name="sa_endpoints_t" ref="0x108d56670" loc="306:/usr/include/sys/socket.h">
      <type-tag size="I:40" alignment="I:8"><struct-ref name="sa_endpoints" ref="0x108d571e0"/>
        <typename><typedef-ref name="sa_endpoints_t" ref="0x108d56670"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR3AL_t" ref="0x1098368d0" loc="284:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3AL_t" ref="0x1098368d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_wint_t" ref="0x1084a00d0" loc="112:/usr/include/i386/_types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_wint_t" ref="0x1084a00d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="uintmax_t" ref="0x1084c3a50" loc="32:/usr/include/_types/_uintmax_t.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uintmax_t" ref="0x1084c3a50"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_am_addr_t" ref="0x108c7ebb0" loc="8:/Users/ytc/Applications/tinyos-main/tos/types/AM.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
        <typename><typedef-ref name="nx_am_addr_t" ref="0x108c7ebb0"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_uint16_t" ref="0x10864c740" loc="436:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
        <typename><typedef-ref name="nx_uint16_t" ref="0x10864c740"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_quad_t" ref="0x108d25790" loc="95:/usr/include/sys/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="u_quad_t" ref="0x108d25790"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_fsblkcnt_t" ref="0x1084a3270" loc="58:/usr/include/sys/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_fsblkcnt_t" ref="0x1084a3270"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast32_t" ref="0x1084c0540" loc="51:/opt/local/lib/gcc47/gcc/x86_64-apple-darwin16/4.7.4/include-fixed/stdint.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="int_fast32_t" ref="0x1084c0540"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_least16_t" ref="0x1084bd090" loc="39:/opt/local/lib/gcc47/gcc/x86_64-apple-darwin16/4.7.4/include-fixed/stdint.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="int_least16_t" ref="0x1084bd090"/></typename>
      </type-int>
    </typedef>
    <typedef name="useconds_t" ref="0x108d20e70" loc="30:/usr/include/sys/_types/_useconds_t.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="useconds_t" ref="0x108d20e70"/></typename>
      </type-int>
    </typedef>
    <typedef name="ldiv_t" ref="0x10874d090" loc="90:/usr/include/stdlib.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x108742c00"/>
        <typename><typedef-ref name="ldiv_t" ref="0x10874d090"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_int64_t" ref="0x10878e550" loc="30:/usr/include/sys/_types/_u_int64_t.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="u_int64_t" ref="0x10878e550"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_int16_t" ref="0x108790d00" loc="30:/usr/include/sys/_types/_u_int16_t.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="u_int16_t" ref="0x108790d00"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TIFR_t" ref="0x10984a180" loc="163:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x10984cd30"/>
        <typename><typedef-ref name="Atm128_TIFR_t" ref="0x10984a180"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__darwin_va_list" ref="0x10849f4a0" loc="98:/usr/include/i386/_types.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="V:" alignment="V:"><struct-ref ref="0x1081d6530"/></type-tag>
        <typename><typedef-ref name="__darwin_va_list" ref="0x10849f4a0"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="siginfo_t" ref="0x1086f1cd0" loc="188:/usr/include/sys/signal.h">
      <type-tag size="I:104" alignment="I:8"><struct-ref name="__siginfo" ref="0x1086f2020"/>
        <typename><typedef-ref name="siginfo_t" ref="0x1086f1cd0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__darwin_id_t" ref="0x1084a4020" loc="61:/usr/include/sys/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_id_t" ref="0x1084a4020"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_wctype_t" ref="0x1084b8840" loc="42:/usr/include/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_wctype_t" ref="0x1084b8840"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCCR3A_t" ref="0x1098449e0" loc="208:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x109845b40"/>
        <typename><typedef-ref name="Atm128_TCCR3A_t" ref="0x1098449e0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint_least64_t" ref="0x1084bf8f0" loc="45:/opt/local/lib/gcc47/gcc/x86_64-apple-darwin16/4.7.4/include-fixed/stdint.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint_least64_t" ref="0x1084bf8f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__int32_t" ref="0x10849ab60" loc="44:/usr/include/i386/_types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__int32_t" ref="0x10849ab60"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_ptrdiff_t" ref="0x10849eb00" loc="84:/usr/include/i386/_types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__darwin_ptrdiff_t" ref="0x10849eb00"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_intptr_t" ref="0x10849bbc0" loc="49:/usr/include/i386/_types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__darwin_intptr_t" ref="0x10849bbc0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_pthread_condattr_t" ref="0x1084b45c0" loc="111:/usr/include/sys/_pthread/_pthread_types.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="_opaque_pthread_condattr_t" ref="0x1084acd40"/>
        <typename><typedef-ref name="__darwin_pthread_condattr_t" ref="0x1084b45c0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pthread_rwlock_t" ref="0x108d1b2c0" loc="30:/usr/include/sys/_pthread/_pthread_rwlock_t.h">
      <type-tag size="I:200" alignment="I:8"><struct-ref name="_opaque_pthread_rwlock_t" ref="0x1084b05a0"/>
        <typename><typedef-ref name="pthread_rwlock_t" ref="0x108d1b2c0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="double_t" ref="0x1087cd020" loc="60:/opt/local/lib/gcc47/gcc/x86_64-apple-darwin16/4.7.4/include-fixed/math.h">
      <type-float cname="double" size="I:8" alignment="I:8">
        <typename><typedef-ref name="double_t" ref="0x1087cd020"/></typename>
      </type-float>
    </typedef>
    <typedef name="bool" ref="0x10897b190" loc="65:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/tos.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x10897b190"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_noise_hash_t" ref="0x108ab94f0" loc="71:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_noise.h">
      <documentation loc="32:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_noise.h">
        <short>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.&#10;&#10; @author Hyungjune Lee&#10; @date   Oct 13 2006&#10;</long>
      </documentation>
      <type-tag size="I:488" alignment="I:8"><struct-ref name="sim_noise_hash_t" ref="0x108aba0c0"/>
        <typename><typedef-ref name="sim_noise_hash_t" ref="0x108ab94f0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="rusage_info_t" ref="0x10870cd40" loc="192:/usr/include/sys/resource.h">
      <documentation loc="132:/usr/include/sys/resource.h">
        <short>***&#10; RESOURCE USAGE&#10;</short>
      </documentation>
      <type-pointer size="I:8" alignment="I:8">
        <type-void size="I:1" alignment="I:1"></type-void>
        <typename><typedef-ref name="rusage_info_t" ref="0x10870cd40"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="__darwin_pthread_mutexattr_t" ref="0x1084b55d0" loc="114:/usr/include/sys/_pthread/_pthread_types.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="_opaque_pthread_mutexattr_t" ref="0x1084af1d0"/>
        <typename><typedef-ref name="__darwin_pthread_mutexattr_t" ref="0x1084b55d0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__darwin_pthread_t" ref="0x1084b6bd0" loc="118:/usr/include/sys/_pthread/_pthread_types.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:8192" alignment="I:8"><struct-ref name="_opaque_pthread_t" ref="0x1084b19a0"/></type-tag>
        <typename><typedef-ref name="__darwin_pthread_t" ref="0x1084b6bd0"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="__gnuc_va_list" ref="0x1089a99e0" loc="40:/opt/local/lib/gcc47/gcc/x86_64-apple-darwin16/4.7.4/include/stdarg.h">
      <documentation loc="32:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_log.h">
        <short>&#10; The TOSSIM logging system.</short>
        <long>&#10; The TOSSIM logging system. Unlike in TinyOS 1.x, this logging&#10; system supports an arbitrary number of channels, denoted by&#10; a string identifier. A channel can be connected to any number&#10; of outputs, and a debug statement can be associated with any&#10; number of channels.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="V:" alignment="V:"><struct-ref ref="0x1081d6530"/></type-tag>
        <typename><typedef-ref name="__gnuc_va_list" ref="0x1089a99e0"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="nxle_uint8_t" ref="0x108650a50" loc="445:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nxle_uint8_t">
        <typename><typedef-ref name="nxle_uint8_t" ref="0x108650a50"/></typename>
      </type-int>
    </typedef>
    <typedef name="user_off_t" ref="0x10879b5b0" loc="103:/usr/include/i386/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="user_off_t" ref="0x10879b5b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR3AH_t" ref="0x1098364c0" loc="283:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3AH_t" ref="0x1098364c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR3CL_t" ref="0x109834990" loc="288:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3CL_t" ref="0x109834990"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ICR3H_t" ref="0x1098335f0" loc="293:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ICR3H_t" ref="0x1098335f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="int64_t" ref="0x1084b97f0" loc="30:/usr/include/sys/_types/_int64_t.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int64_t" ref="0x1084b97f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="int16_t" ref="0x1084b9090" loc="30:/usr/include/sys/_types/_int16_t.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="int16_t" ref="0x1084b9090"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_mach_port_name_t" ref="0x1084a4da0" loc="68:/usr/include/sys/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_mach_port_name_t" ref="0x1084a4da0"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast64_t" ref="0x1084c0930" loc="52:/opt/local/lib/gcc47/gcc/x86_64-apple-darwin16/4.7.4/include-fixed/stdint.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int_fast64_t" ref="0x1084c0930"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_wctrans_t" ref="0x1084b8400" loc="40:/usr/include/_types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_wctrans_t" ref="0x1084b8400"/></typename>
      </type-int>
    </typedef>
    <typedef name="uid_t" ref="0x1086ebb70" loc="30:/usr/include/sys/_types/_uid_t.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uid_t" ref="0x1086ebb70"/></typename>
      </type-int>
    </typedef>
    <typedef name="user_time_t" ref="0x10879b1d0" loc="102:/usr/include/i386/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="user_time_t" ref="0x10879b1d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="message_t" ref="0x108c8bde0" loc="19:/Users/ytc/Applications/tinyos-main/tos/types/message.h">
      <type-tag size="I:45" alignment="I:1"><nx_struct-ref name="message_t" ref="0x108c8c7d0"/>
        <typename><typedef-ref name="message_t" ref="0x108c8bde0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="nx_uint64_t" ref="0x10864a5b0" loc="438:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:1" network="nx_uint64_t">
        <typename><typedef-ref name="nx_uint64_t" ref="0x10864a5b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TIMSK_t" ref="0x10984e8f0" loc="146:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x10984e4d0"/>
        <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x10984e8f0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="sae_connid_t" ref="0x108d5ae10" loc="290:/usr/include/sys/socket.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="sae_connid_t" ref="0x108d5ae10"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_useconds_t" ref="0x1084a85b0" loc="76:/usr/include/sys/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_useconds_t" ref="0x1084a85b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="sig_t" ref="0x108701e40" loc="331:/usr/include/sys/signal.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </function-parameters>
        </type-function>
        <typename><typedef-ref name="sig_t" ref="0x108701e40"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="node_t" ref="0x108a2c180" loc="65:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/heap.c">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="node" ref="0x108a158e0"/>
        <typename><typedef-ref name="node_t" ref="0x108a2c180"/></typename>
      </type-tag>
    </typedef>
    <typedef name="fchecklv_t" ref="0x108d2e620" loc="407:/usr/include/sys/fcntl.h">
      <type-tag size="I:24" alignment="I:8"><struct-ref name="fchecklv" ref="0x108d30960"/>
        <typename><typedef-ref name="fchecklv_t" ref="0x108d2e620"/></typename>
      </type-tag>
    </typedef>
    <typedef name="nx_int8_t" ref="0x1086472d0" loc="431:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="signed char" size="I:1" alignment="I:1" network="nx_int8_t">
        <typename><typedef-ref name="nx_int8_t" ref="0x1086472d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="fstore_t" ref="0x108d2d9e0" loc="425:/usr/include/sys/fcntl.h">
      <type-tag size="I:32" alignment="I:8"><struct-ref name="fstore" ref="0x108d2e970"/>
        <typename><typedef-ref name="fstore_t" ref="0x108d2d9e0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="filesec_property_t" ref="0x108d4ae20" loc="507:/usr/include/sys/fcntl.h">
      <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x108d4ced0"/>
        <typename><typedef-ref name="filesec_property_t" ref="0x108d4ae20"/></typename>
      </type-tag>
    </typedef>
    <typedef name="sim_noise_node_t" ref="0x108ad07e0" loc="83:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_noise.h">
      <type-tag size="I:80" alignment="I:8"><struct-ref name="sim_noise_node_t" ref="0x108ab9940"/>
        <typename><typedef-ref name="sim_noise_node_t" ref="0x108ad07e0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="id_t" ref="0x108697c80" loc="30:/usr/include/sys/_types/_id_t.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="id_t" ref="0x108697c80"/></typename>
      </type-int>
    </typedef>
    <typedef name="user_ssize_t" ref="0x10879d5d0" loc="99:/usr/include/i386/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="user_ssize_t" ref="0x10879d5d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_uuid_string_t" ref="0x1084aa020" loc="78:/usr/include/sys/_types.h">
      <type-array elements="I:37" size="I:37" alignment="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        <typename><typedef-ref name="__darwin_uuid_string_t" ref="0x1084aa020"/></typename>
      </type-array>
    </typedef>
    <typedef name="pthread_mutex_t" ref="0x108d1c2f0" loc="30:/usr/include/sys/_pthread/_pthread_mutex_t.h">
      <type-tag size="I:64" alignment="I:8"><struct-ref name="_opaque_pthread_mutex_t" ref="0x1084ad730"/>
        <typename><typedef-ref name="pthread_mutex_t" ref="0x108d1c2f0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pthread_cond_t" ref="0x108d1f8d0" loc="30:/usr/include/sys/_pthread/_pthread_cond_t.h">
      <type-tag size="I:48" alignment="I:8"><struct-ref name="_opaque_pthread_cond_t" ref="0x1084ac360"/>
        <typename><typedef-ref name="pthread_cond_t" ref="0x108d1f8d0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pthread_key_t" ref="0x108d19160" loc="30:/usr/include/sys/_pthread/_pthread_key_t.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="pthread_key_t" ref="0x108d19160"/></typename>
      </type-int>
    </typedef>
    <typedef name="ino_t" ref="0x108d214e0" loc="30:/usr/include/sys/_types/_ino_t.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="ino_t" ref="0x108d214e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="daddr_t" ref="0x108d24790" loc="100:/usr/include/sys/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="daddr_t" ref="0x108d24790"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_uint32_t" ref="0x10864f950" loc="447:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:1" network="nxle_uint32_t">
        <typename><typedef-ref name="nxle_uint32_t" ref="0x10864f950"/></typename>
      </type-int>
    </typedef>
    <typedef name="key_t" ref="0x108d21d00" loc="30:/usr/include/sys/_types/_key_t.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="key_t" ref="0x108d21d00"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_mutexattr_t" ref="0x108d1c810" loc="30:/usr/include/sys/_pthread/_pthread_mutexattr_t.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="_opaque_pthread_mutexattr_t" ref="0x1084af1d0"/>
        <typename><typedef-ref name="pthread_mutexattr_t" ref="0x108d1c810"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uart_id_t" ref="0x108c984e0" loc="83:/Users/ytc/Applications/tinyos-main/tos/lib/serial/Serial.h">
      <documentation loc="71:/Users/ytc/Applications/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uart_id_t" ref="0x108c984e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="_RuneLocale" ref="0x1088ccab0" loc="106:/usr/include/runetype.h">
      <type-tag size="I:3208" alignment="I:8"><struct-ref ref="0x1088bbbe0"/>
        <typename><typedef-ref name="_RuneLocale" ref="0x1088ccab0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__darwin_pthread_rwlock_t" ref="0x1084b60d0" loc="116:/usr/include/sys/_pthread/_pthread_types.h">
      <type-tag size="I:200" alignment="I:8"><struct-ref name="_opaque_pthread_rwlock_t" ref="0x1084b05a0"/>
        <typename><typedef-ref name="__darwin_pthread_rwlock_t" ref="0x1084b60d0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128TimerCtrlCompare_t" ref="0x109844020" loc="202:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x109845b40"/>
        <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x109844020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="list_dump_info_t" ref="0x108f0c980" loc="81:/Users/ytc/Documents/workspace/NewMetricOR/src/simclist.h">
      <type-tag size="I:40" alignment="I:8"><struct-ref ref="0x108f0c1f0"/>
        <typename><typedef-ref name="list_dump_info_t" ref="0x108f0c980"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__nesc_sillytask_sendDataPayload" ref="0x108eb5c90" loc="519:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-array elements="I:4" size="I:16" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_updateEDC" ref="0x108d0ca60" loc="598:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-array elements="I:7" size="I:28" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_forward" ref="0x108f11ce0" loc="470:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-array elements="I:3" size="I:12" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_endDataTask" ref="0x109241d50" loc="431:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-array elements="I:1" size="I:4" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_startForwardRequestPause" ref="0x108d3dc00" loc="588:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-array elements="I:6" size="I:24" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_startDutyCycle" ref="0x108e3ec40" loc="570:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-array elements="I:5" size="I:20" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_endForwardTask" ref="0x109026d10" loc="448:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-array elements="I:2" size="I:8" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_clearBuffer" ref="0x109367db0" loc="419:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-array elements="I:0" size="I:0" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_startDoneTask" ref="0x1096f8630" loc="97:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-array elements="I:8" size="I:32" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_stopDoneTask" ref="0x1096f93d0" loc="102:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-array elements="I:9" size="I:36" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_sendDoneTask" ref="0x1096fa250" loc="156:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-array elements="I:10" size="I:40" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="receive_message_t" ref="0x10973d5d0" loc="66:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-tag size="I:64" alignment="I:8"><struct-ref name="receive_message" scoped="" ref="0x10973d160"/>
        <typename><typedef-ref name="receive_message_t" scoped="" ref="0x10973d5d0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__nesc_sillytask_fired" ref="0x109a225c0" loc="74:/Users/ytc/Applications/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_updateFromTimer" ref="0x109a46a70" loc="71:/Users/ytc/Applications/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="Timer_t" ref="0x109a37390" loc="66:/Users/ytc/Applications/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-tag size="I:12" alignment="I:4"><struct-ref scoped="" ref="0x109a38ca0"/>
        <typename><typedef-ref name="Timer_t" scoped="" ref="0x109a37390"/></typename>
      </type-tag>
    </typedef>
    <typedef name="queue_entry_t" ref="0x109af0480" loc="57:/Users/ytc/Applications/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-tag size="I:8" alignment="I:8"><struct-ref scoped="" ref="0x109af0110"/>
        <typename><typedef-ref name="queue_entry_t" scoped="" ref="0x109af0480"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__nesc_sillytask_errorTask" ref="0x109af7de0" loc="169:/Users/ytc/Applications/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_CancelTask" ref="0x109b61020" loc="126:/Users/ytc/Applications/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_sendProbe" ref="0x109b7cc20" loc="31:/Users/ytc/Documents/workspace/NewMetricOR/src/NeighborDiscovery/NeighborDiscoveryP.nc">
      <component-ref qname="NeighborDiscoveryP"/>
      <type-array elements="I:15" size="I:60" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
  </typedefs>
</nesc>
