<nesc xmlns="http://www.tinyos.net/nesC">
  <components>
    <component qname="NewMetricORAppC" loc="40:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORAppC.nc">
      <configuration/>
    </component>
    <component qname="NewMetricORC" loc="48:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc" safe="">
      <module/>
    </component>
    <component qname="MainC" loc="47:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/MainC.nc">
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:/Users/ytc/Applications/tinyos-main/tos/platforms/mica/sim/PlatformC.nc">
      <documentation loc="1:/Users/ytc/Applications/tinyos-main/tos/platforms/micaz/sim/platform_hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: platform_hardware.h,v 1.6 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/Users/ytc/Applications/tinyos-main/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/Users/ytc/Applications/tinyos-main/tos/platforms/micaz/sim/platform_hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: platform_hardware.h,v 1.6 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/Users/ytc/Applications/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/Users/ytc/Applications/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/Users/ytc/Applications/tinyos-main/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/Users/ytc/Applications/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:27">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:23">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:22">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:21">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:20">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:19">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:18">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:17">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:16">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="10:/Users/ytc/Applications/tinyos-main/tos/platforms/mica/sim/MeasureClockC.nc">
      <documentation loc="3:/Users/ytc/Applications/tinyos-main/tos/platforms/mica/sim/MeasureClockC.nc">
        <short>&#10; Simulation version of MeasureClockC for the mica platform.</short>
        <long>&#10; Simulation version of MeasureClockC for the mica platform. See &#10; tos/platforms/mica/MeasureClockC.nc for more details.&#10;&#10; @author Phil Levis&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SimMainP" loc="43:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/SimMainP.nc">
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="42:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TinySchedulerC.nc">
      <documentation loc="32:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TinySchedulerC.nc">
        <short>&#10; TOSSIM-specific scheduler implementation, which models&#10; tasks as simulation events (in order to capture delay).</short>
        <long>&#10; TOSSIM-specific scheduler implementation, which models&#10; tasks as simulation events (in order to capture delay).&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SimSchedulerBasicP" loc="47:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/SimSchedulerBasicP.nc">
      <documentation loc="33:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_event_queue.h">
        <short>&#10; The event queue is the core of the mote side of TOSSIM.</short>
        <long>&#10; The event queue is the core of the mote side of TOSSIM. It is a&#10; wrapper around the underlying heap. Unlike the 1.x version, it is&#10; not re-entrant: merging the Python console and TOSSIM means that&#10; functionality like packet injection/reception from external tools&#10; is on the Python side.&#10;&#10; @author Phil Levis&#10; @date   November 22 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SimMoteP" loc="45:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/SimMoteP.nc">
      <documentation loc="33:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/SimMoteP.nc">
        <short>&#10; The TOSSIM abstraction of a mote.</short>
        <long>&#10; The TOSSIM abstraction of a mote. By putting simulation state into&#10; a component, we can scale and reference this state automatically&#10; using nesC's rewriting, rather than managing and indexing into&#10; arrays manually.&#10;&#10; @author Phil Levis&#10; @date   August 19 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="42:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/ActiveMessageC.nc">
      <documentation loc="33:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/ActiveMessageC.nc">
        <short>&#10;&#10; The basic chip-independent TOSSIM Active Message layer for radio chips&#10; that do not have simulation support.</short>
        <long>&#10;&#10; The basic chip-independent TOSSIM Active Message layer for radio chips&#10; that do not have simulation support.&#10;&#10; @author Philip Levis&#10; @date December 2 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TossimActiveMessageC" loc="44:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimActiveMessageC.nc">
      <documentation loc="33:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimActiveMessageC.nc">
        <short>&#10;&#10; The basic chip-independent TOSSIM Active Message layer for radio chips&#10; that do not have simulation support.</short>
        <long>&#10;&#10; The basic chip-independent TOSSIM Active Message layer for radio chips&#10; that do not have simulation support.&#10;&#10; @author Philip Levis&#10; @date December 2 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TossimPacketModelC" loc="60:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <documentation loc="32:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_csma.h">
        <short>&#10;&#10; Configuration parameters for a CSMA link.</short>
        <long>&#10;&#10; Configuration parameters for a CSMA link.&#10;&#10; @author Philip Levis&#10; @date   Dec 10 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CpmModelC" loc="54:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <documentation loc="32:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_noise.h">
        <short>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.&#10;&#10; @author Hyungjune Lee&#10; @date   Oct 13 2006&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="57:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/ActiveMessageAddressC.nc">
      <documentation loc="49:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/ActiveMessageAddressC.nc">
        <short>&#10; Accessor methods for Active Messages.</short>
        <long>&#10; Accessor methods for Active Messages.&#10;&#10; @author Philip Levis&#10; @author Morten Tranberg Hansen (added ActiveMessageAddress)&#10; @date June 19 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="NewMetricORAppC.packetTimer" loc="44(NewMetricORAppC.packetTimer):/Users/ytc/Applications/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/Users/ytc/Applications/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/Users/ytc/Applications/tinyos-main/tos/system/TimerMilliP.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/Users/ytc/Applications/tinyos-main/tos/platforms/mica/sim/HilTimerMilliC.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/platforms/mica/sim/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/Users/ytc/Applications/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x102faf940"/>
            <typename><typedef-ref name="TMilli" ref="0x102fafcb0"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x103b1a470"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="50:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncC.nc">
      <documentation loc="32:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncC.nc">
        <short>&#10; The TOSSIM implementation of the Atm128 Timer0.</short>
        <long>&#10; The TOSSIM implementation of the Atm128 Timer0. It is built from a&#10; timer-specific counter component and a generic compare&#10; component. The counter component has an additional simulation-only&#10; interface to let the compare component know when its state has&#10; changed (e.g., TCNTX was set).&#10;&#10; @date November 22 2005&#10;&#10; @author Philip Levis &#60;pal@cs.stanford.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="48:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <documentation loc="1:/Users/ytc/Applications/tinyos-main/tos/platforms/micaz/sim/platform_hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: platform_hardware.h,v 1.6 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/Users/ytc/Applications/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/Users/ytc/Applications/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x102faf940"/>
            <typename><typedef-ref name="TMilli" ref="0x102fafcb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/Users/ytc/Applications/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x102faf940"/>
            <typename><typedef-ref name="TMilli" ref="0x102fafcb0"/></typename>
          </type-tag>
          <value cst="I:6">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/Users/ytc/Applications/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/Users/ytc/Applications/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x102faf940"/>
            <typename><typedef-ref name="TMilli" ref="0x102fafcb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NewMetricORAppC.wakeTimer" loc="44(NewMetricORAppC.wakeTimer):/Users/ytc/Applications/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/Users/ytc/Applications/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="NewMetricORAppC.sleepTimer" loc="44(NewMetricORAppC.sleepTimer):/Users/ytc/Applications/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/Users/ytc/Applications/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="NewMetricORAppC.forwardPacketTimer" loc="44(NewMetricORAppC.forwardPacketTimer):/Users/ytc/Applications/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/Users/ytc/Applications/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="NewMetricORAppC.forwardPauseTimer" loc="44(NewMetricORAppC.forwardPauseTimer):/Users/ytc/Applications/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/Users/ytc/Applications/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="NewMetricORAppC.AMSenderC" loc="47(NewMetricORAppC.AMSenderC):/Users/ytc/Applications/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/Users/ytc/Applications/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:11">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NewMetricORAppC.AMSenderC.SenderC" loc="47(NewMetricORAppC.AMSenderC.SenderC):/Users/ytc/Applications/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/Users/ytc/Applications/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x102f31020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NewMetricORAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(NewMetricORAppC.AMSenderC.SenderC.AMQueueEntryP):/Users/ytc/Applications/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/Users/ytc/Applications/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x102f31020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/Users/ytc/Applications/tinyos-main/tos/system/AMQueueP.nc">
      <documentation loc="33:/Users/ytc/Applications/tinyos-main/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/Users/ytc/Applications/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/Users/ytc/Applications/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NewMetricORAppC.AMReceiverC" loc="43(NewMetricORAppC.AMReceiverC):/Users/ytc/Applications/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/Users/ytc/Applications/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:11">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:/Users/ytc/Applications/tinyos-main/tos/system/RandomC.nc">
      <documentation loc="33:/Users/ytc/Applications/tinyos-main/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/Users/ytc/Applications/tinyos-main/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/Users/ytc/Applications/tinyos-main/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="NeighborDiscoveryC" loc="3:/Users/ytc/Documents/workspace/NewMetricOR/src/NeighborDiscovery/NeighborDiscoveryC.nc">
      <configuration/>
    </component>
    <component qname="NeighborDiscoveryP" loc="7:/Users/ytc/Documents/workspace/NewMetricOR/src/NeighborDiscovery/NeighborDiscoveryP.nc">
      <module/>
    </component>
    <component qname="NeighborDiscoveryC.packetTimer" loc="44(NeighborDiscoveryC.packetTimer):/Users/ytc/Applications/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/Users/ytc/Applications/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="NeighborDiscoveryC.probeSender" loc="47(NeighborDiscoveryC.probeSender):/Users/ytc/Applications/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/Users/ytc/Applications/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:13">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NeighborDiscoveryC.probeSender.SenderC" loc="47(NeighborDiscoveryC.probeSender.SenderC):/Users/ytc/Applications/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/Users/ytc/Applications/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x102f31020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NeighborDiscoveryC.probeSender.SenderC.AMQueueEntryP" loc="43(NeighborDiscoveryC.probeSender.SenderC.AMQueueEntryP):/Users/ytc/Applications/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/Users/ytc/Applications/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x102f31020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NeighborDiscoveryC.probeReceiver" loc="43(NeighborDiscoveryC.probeReceiver):/Users/ytc/Applications/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/Users/ytc/Applications/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:13">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x103b1a470" loc="23:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x103b1a470"/></type-var>
        </typedef>
        <constant name="divider" ref="0x103b1a780" loc="23:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc" abstract="">
      <documentation loc="37:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x10373ad30" loc="41:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x103737110" loc="42:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x1037374a0" loc="43:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x1037377f0" loc="44:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x1037b7700" loc="42:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x1037b7a90" loc="43:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x1037b7e20" loc="44:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x1037b41c0" loc="45:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/Users/ytc/Applications/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x103cfb780" loc="46:/Users/ytc/Applications/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x103cfb780"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x103cfbab0" loc="46:/Users/ytc/Applications/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/Users/ytc/Applications/tinyos-main/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/Users/ytc/Applications/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x103dad640" loc="45:/Users/ytc/Applications/tinyos-main/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x1037486c0" loc="40:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x103748a30" loc="40:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x103748da0" loc="40:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMReceiverC" loc="43:/Users/ytc/Applications/tinyos-main/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/Users/ytc/Applications/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x103df6390" loc="43:/Users/ytc/Applications/tinyos-main/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x102f31020"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/Users/ytc/Applications/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/Users/ytc/Applications/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x103cd4020" loc="46:/Users/ytc/Applications/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x103cd4020"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x103b0e020" loc="23:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x103b0e020"/></type-var>
        </typedef>
        <constant name="divider" ref="0x103b0e330" loc="23:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/Users/ytc/Applications/tinyos-main/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/Users/ytc/Applications/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x103d81360" loc="47:/Users/ytc/Applications/tinyos-main/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x102f31020"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/Users/ytc/Applications/tinyos-main/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/Users/ytc/Applications/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x103d733f0" loc="43:/Users/ytc/Applications/tinyos-main/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x102f31020"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/Users/ytc/Applications/tinyos-main/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/Users/ytc/Applications/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x103d7a4a0" loc="47:/Users/ytc/Applications/tinyos-main/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x102f31020"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/Users/ytc/Applications/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/Users/ytc/Applications/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x103d5ee10" loc="46:/Users/ytc/Applications/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x103d5ee10"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/Users/ytc/Applications/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/Users/ytc/Applications/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="SplitControl" loc="87:/Users/ytc/Applications/tinyos-main/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/Users/ytc/Applications/tinyos-main/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x1034a0ab0" loc="113:/Users/ytc/Applications/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/Users/ytc/Applications/tinyos-main/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x102ad0cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x1034a0830" loc="113:/Users/ytc/Applications/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x102ad0cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x10349e020" loc="138:/Users/ytc/Applications/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/Users/ytc/Applications/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x102ad0cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x10349fd30" loc="138:/Users/ytc/Applications/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x102ad0cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x103472b80" loc="104:/Users/ytc/Applications/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/Users/ytc/Applications/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x102ad0cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x10349f350" loc="130:/Users/ytc/Applications/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/Users/ytc/Applications/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x102ad0cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/Users/ytc/Applications/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/Users/ytc/Applications/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x103443d70" loc="60:/Users/ytc/Applications/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/Users/ytc/Applications/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/Users/ytc/Applications/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x102ccd350" loc="67:/Users/ytc/Applications/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/Users/ytc/Applications/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x102ad0cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x102ccdba0" loc="75:/Users/ytc/Applications/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/Users/ytc/Applications/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x103b36e40" loc="38:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x103b346b0" loc="44:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x103b366d0" loc="32:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x103b33020" loc="50:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x103b37420" loc="21:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x103b05ad0"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x103b03020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x103b37e50" loc="27:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x103b05ad0"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x103b03020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x103b37bd0" loc="27:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x103b05ad0"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x103b03020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TossimPacket" loc="44:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacket.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="strength" ref="0x1038ebc50" loc="45:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacket.nc">
        <interfacedef-ref qname="TossimPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x10276dcc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1038eb9d0" loc="45:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/Users/ytc/Applications/tinyos-main/tos/interfaces/Packet.nc">
      <documentation loc="42:/Users/ytc/Applications/tinyos-main/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x103482020" loc="65:/Users/ytc/Applications/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/Users/ytc/Applications/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x103487cf0" loc="65:/Users/ytc/Applications/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x103481110" loc="78:/Users/ytc/Applications/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/Users/ytc/Applications/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x103482e10" loc="78:/Users/ytc/Applications/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x10347d490" loc="126:/Users/ytc/Applications/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/Users/ytc/Applications/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10347fe50" loc="126:/Users/ytc/Applications/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x10347d1c0" loc="126:/Users/ytc/Applications/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x10347f560" loc="106:/Users/ytc/Applications/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/Users/ytc/Applications/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x1034805e0" loc="94:/Users/ytc/Applications/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/Users/ytc/Applications/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x103480020" loc="94:/Users/ytc/Applications/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x103480350" loc="94:/Users/ytc/Applications/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/Users/ytc/Applications/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/Users/ytc/Applications/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x103ac8c50" loc="53:/Users/ytc/Applications/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x103ac8c50"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x103ac45a0" loc="61:/Users/ytc/Applications/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/Users/ytc/Applications/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x102770400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMSend.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x10347a630" loc="80:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="60:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x102ad0cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x102f317e0"/></typename>
            </type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x103485ca0" loc="80:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x102f317e0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x10347a060" loc="80:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x10347a390" loc="80:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x103473020" loc="135:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="126:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x103474890" loc="135:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x103474bc0" loc="135:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x103474020" loc="123:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="113:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x1034779c0" loc="96:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="82:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x102ad0cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x103477740" loc="96:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x103475020" loc="110:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="98:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x102ad0cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x103476900" loc="110:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x103476c50" loc="110:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x102ad0cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/Users/ytc/Applications/tinyos-main/tos/interfaces/Random.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x1034a6020" loc="52:/Users/ytc/Applications/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="48:/Users/ytc/Applications/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x102770020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x1034a76d0" loc="46:/Users/ytc/Applications/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="42:/Users/ytc/Applications/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x102770400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x103b475a0" loc="45:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x103ab9020"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x103ab9440"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x103b44ab0" loc="53:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x103affd30"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x103afd180"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x103b46830" loc="49:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x103b014d0"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x103b018f0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x103b442a0" loc="50:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x103b014d0"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x103b018f0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x103b44020" loc="50:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x103b014d0"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x103b018f0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x103b43520" loc="54:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x103affd30"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x103afd180"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x103b432a0" loc="54:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x103affd30"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x103afd180"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x103b46020" loc="46:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x103ab9020"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x103ab9440"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x103b47d70" loc="46:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x103ab9020"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x103ab9440"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/Users/ytc/Applications/tinyos-main/tos/interfaces/Send.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x103d6f930" loc="75:/Users/ytc/Applications/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="57:/Users/ytc/Applications/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x102ad0cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x103d6f370" loc="75:/Users/ytc/Applications/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x103d6f6a0" loc="75:/Users/ytc/Applications/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x103d68160" loc="125:/Users/ytc/Applications/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="115:/Users/ytc/Applications/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x103d6aae0" loc="125:/Users/ytc/Applications/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x103d6ae10" loc="125:/Users/ytc/Applications/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x103d6a270" loc="112:/Users/ytc/Applications/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="102:/Users/ytc/Applications/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x103d6dc40" loc="89:/Users/ytc/Applications/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="77:/Users/ytc/Applications/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x102ad0cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x103d6d9c0" loc="89:/Users/ytc/Applications/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x103d6b360" loc="100:/Users/ytc/Applications/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="91:/Users/ytc/Applications/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x102ad0cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x103d6ed10" loc="100:/Users/ytc/Applications/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x103d6b0d0" loc="100:/Users/ytc/Applications/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x102ad0cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/Users/ytc/Applications/tinyos-main/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x103486020" loc="53:/Users/ytc/Applications/tinyos-main/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x103486020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x103486b60" loc="64:/Users/ytc/Applications/tinyos-main/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/Users/ytc/Applications/tinyos-main/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x102ad0cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x103486020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x1034868e0" loc="64:/Users/ytc/Applications/tinyos-main/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x103486020"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/Users/ytc/Applications/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x103aa6e40" loc="50:/Users/ytc/Applications/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/Users/ytc/Applications/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x102f317e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x103aa5dc0" loc="60:/Users/ytc/Applications/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/Users/ytc/Applications/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x103aa5660" loc="55:/Users/ytc/Applications/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/Users/ytc/Applications/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x102f31400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x103aa6600" loc="45:/Users/ytc/Applications/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/Users/ytc/Applications/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x102f31400"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x102f317e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x103aa6020" loc="45:/Users/ytc/Applications/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x102f31400"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x103aa6370" loc="45:/Users/ytc/Applications/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x102f317e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x103b2f8c0" loc="56:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x103b2f8c0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x103b2fb00" loc="56:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x103b2fb00"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x103b28800" loc="109:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x103b2fb00"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x103b2a7e0" loc="78:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x103b29e10" loc="103:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x103b2fb00"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x103b2fb00"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x103b29840" loc="103:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x103b2fb00"/></type-var>
          </variable>
          <variable name="dt" ref="0x103b29b80" loc="103:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x103b2fb00"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x103b29020" loc="88:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x102c30190"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x103b27020" loc="116:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x103b2fb00"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x103b2c680" loc="66:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x103b2fb00"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x103b2c400" loc="66:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x103b2fb00"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x103b2a020" loc="73:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/Users/ytc/Applications/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x1036a5b00" loc="62:/Users/ytc/Applications/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/Users/ytc/Applications/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x102ad0cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x103b4ad50" loc="41:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x103b4ad50"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x103b3d7a0" loc="74:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x102c30190"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x103b40860" loc="58:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x103b416c0" loc="48:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x103b4ad50"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x103b3e020" loc="62:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x103b3c020" loc="80:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x102c30190"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x103b400b0" loc="54:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x103b4ad50"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x103b41e00" loc="54:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x103b4ad50"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x103b3e790" loc="65:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x103b3d020" loc="68:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/Users/ytc/Applications/tinyos-main/tos/interfaces/Receive.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x1034a4060" loc="78:/Users/ytc/Applications/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/Users/ytc/Applications/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
              <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:8" alignment="I:8">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1034a56d0" loc="78:/Users/ytc/Applications/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x1034a5a20" loc="78:/Users/ytc/Applications/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1034a5d50" loc="78:/Users/ytc/Applications/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SimMote" loc="42:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/SimMote.nc">
      <documentation loc="32:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/SimMote.nc">
        <short>&#10; TOSSIM-specific interface to access a mote's state.</short>
        <long>&#10; TOSSIM-specific interface to access a mote's state. TinyOS programs&#10; should never use this interface.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="setEuid" ref="0x10387d2a0" loc="44:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="euid" ref="0x10387d020" loc="44:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/SimMote.nc">
            <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getVariableInfo" ref="0x10387a2c0" loc="47:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-pointer size="I:8" alignment="I:8">
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
            </type-pointer>
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
                <typename><typedef-ref name="size_t" ref="0x102493a60"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="name" ref="0x10387c8b0" loc="47:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/SimMote.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="ptr" ref="0x10387cc10" loc="47:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/SimMote.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x10387a020" loc="47:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/SimMote.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
                <typename><typedef-ref name="size_t" ref="0x102493a60"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOff" ref="0x1038790e0" loc="49:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x10387a970" loc="48:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getEuid" ref="0x103880890" loc="43:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x10387c190" loc="46:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x102c30190"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartTime" ref="0x10387da50" loc="45:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborDiscovery" loc="1:/Users/ytc/Documents/workspace/NewMetricOR/src/NeighborDiscovery/NeighborDiscovery.nc">
      <function event="" provided="0" name="PrepareAckAddtionalMsg" ref="0x1034942a0" loc="3:/Users/ytc/Documents/workspace/NewMetricOR/src/NeighborDiscovery/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x103494020" loc="3:/Users/ytc/Documents/workspace/NewMetricOR/src/NeighborDiscovery/NeighborDiscovery.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startNeighborDiscover" ref="0x10349d880" loc="2:/Users/ytc/Documents/workspace/NewMetricOR/src/NeighborDiscovery/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="AckAddtionalMsg" ref="0x103494ca0" loc="4:/Users/ytc/Documents/workspace/NewMetricOR/src/NeighborDiscovery/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ackMessage" ref="0x103494a20" loc="4:/Users/ytc/Documents/workspace/NewMetricOR/src/NeighborDiscovery/NeighborDiscovery.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x103b22410" loc="57:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x103b22410"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x103b22650" loc="57:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x103b22650"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x103b20020" loc="64:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x103b22650"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x103b1f120" loc="76:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x103b208a0" loc="71:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x102c30190"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x103b1f880" loc="82:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/Users/ytc/Applications/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x1036d05a0" loc="44:/Users/ytc/Applications/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x1036d0cd0" loc="45:/Users/ytc/Applications/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x102c30190"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x1036d1760" loc="42:/Users/ytc/Applications/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x1036ceb60" loc="47:/Users/ytc/Applications/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x102c30190"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x1036d1e60" loc="43:/Users/ytc/Applications/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x102c30190"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x1036ce420" loc="46:/Users/ytc/Applications/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x1036d4980" loc="40:/Users/ytc/Applications/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x1036d1070" loc="41:/Users/ytc/Applications/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/Users/ytc/Applications/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x1034a8e30" loc="59:/Users/ytc/Applications/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/Users/ytc/Applications/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x102ad0cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1034a8bb0" loc="59:/Users/ytc/Applications/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="PrepareAckAddtionalMsg" ref="0x1034983f0" loc="88:/Users/ytc/Applications/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x103498170" loc="88:/Users/ytc/Applications/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="AckAddtionalMsg" ref="0x103498da0" loc="90:/Users/ytc/Applications/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x103498b20" loc="90:/Users/ytc/Applications/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x10349a0b0" loc="71:/Users/ytc/Applications/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/Users/ytc/Applications/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x102ad0cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x10349bdc0" loc="71:/Users/ytc/Applications/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x1034992a0" loc="85:/Users/ytc/Applications/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/Users/ytc/Applications/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x102c30190"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x103499020" loc="85:/Users/ytc/Applications/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GainRadioModel" loc="47:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getackinfo" ref="0x103942020" loc="62:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x103943cf0" loc="62:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="putOnAirTo" ref="0x103947100" loc="48:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x102c30190"/></typename>
            </type-int>
            <type-int cname="long long" size="I:8" alignment="I:8">
              <typename><typedef-ref name="sim_time_t" ref="0x102c2f320"/></typename>
            </type-int>
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x10394cce0" loc="48:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </variable>
          <variable name="msg" ref="0x1039490d0" loc="49:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x103949400" loc="50:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x102c30190"/></typename>
            </type-int>
          </variable>
          <variable name="endTime" ref="0x1039497a0" loc="51:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
            <type-int cname="long long" size="I:8" alignment="I:8">
              <typename><typedef-ref name="sim_time_t" ref="0x102c2f320"/></typename>
            </type-int>
          </variable>
          <variable name="gain" ref="0x103949ab0" loc="52:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </variable>
          <variable name="reverseGain" ref="0x103949e00" loc="53:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receive" ref="0x103945c00" loc="60:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x103945980" loc="60:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearChannel" ref="0x103946190" loc="56:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x102c30190"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPendingTransmission" ref="0x1039468e0" loc="57:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="ackinfo" ref="0x103942980" loc="63:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x103942700" loc="63:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setClearValue" ref="0x103947a20" loc="55:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x1039477a0" loc="55:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="acked" ref="0x1039452a0" loc="59:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x103945020" loc="59:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="shouldAck" ref="0x1039435f0" loc="61:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x102c30190"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x103943370" loc="61:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TossimPacketModel" loc="45:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x1038e7a60" loc="57:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
        <documentation loc="47:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
          <short>&#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long>&#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x102ad0cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="node" ref="0x1038e7110" loc="57:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </variable>
          <variable name="msg" ref="0x1038e7490" loc="57:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1038e77c0" loc="57:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receive" ref="0x1038e30b0" loc="85:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
        <documentation loc="79:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
          <short>&#10; Signal that a packet was received.</short>
          <long>&#10; Signal that a packet was received. Note that there is no buffer&#10; swap: a component using this interface must copy out the message&#10; if it needs it.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1038e4e00" loc="85:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="PrepareAckAddtionalMsg" ref="0x1038e2550" loc="89:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1038e22d0" loc="89:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x1038e5650" loc="69:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
        <documentation loc="59:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the&#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a&#10; sendFailed event, and never a sendSucceeded event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x102ad0cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1038e53d0" loc="69:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x1038e4600" loc="76:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
        <documentation loc="71:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
          <short>&#10; Signaled in response to an accepted send request.</short>
          <long>&#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x102ad0cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1038e4020" loc="76:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x1038e4370" loc="76:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x102ad0cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="shouldAck" ref="0x1038e3b20" loc="87:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x102c30190"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x1038e38a0" loc="87:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x103b564b0" loc="55:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x103b564b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x103b4f020" loc="98:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x103b51020" loc="87:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x102c30190"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x103b56de0" loc="61:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x103b564b0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x103b4fa00" loc="104:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x103b4f780" loc="104:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x103b4e270" loc="110:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x103b537b0" loc="75:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x103b53020" loc="70:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x103b517e0" loc="93:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x102c30190"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x103b547e0" loc="67:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x103b564b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x103b54560" loc="67:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x103b564b0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x103b52020" loc="78:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x103b52770" loc="81:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x1038af9f0" loc="177:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x102f31400"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x1038af770" loc="177:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x1038b96d0" loc="88:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x102f317e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x1038b9450" loc="88:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x1038bead0" loc="68:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x102f317e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x1038bb600" loc="78:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x102f317e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x1038bb380" loc="78:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x1038b7020" loc="121:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x102f317e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x1038b6a00" loc="121:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x1038b6d50" loc="121:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x102f317e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x1038b8ac0" loc="103:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x102f317e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x1038b84e0" loc="103:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x1038b8830" loc="103:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x102f317e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x1038b34a0" loc="147:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x102f31020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x1038b3220" loc="147:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x1038b1850" loc="162:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x102f31020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x1038b12a0" loc="162:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x1038b15c0" loc="162:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x102f31020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x1038b42a0" loc="136:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x102c30190"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x1038b4020" loc="136:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x1038ae020" loc="187:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x102f31400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x1038ad8c0" loc="187:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
                <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x1038adc10" loc="187:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x102f31400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x1038aee40" loc="195:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/Users/ytc/Applications/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x102f31400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/Users/ytc/Applications/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/Users/ytc/Applications/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x10295b390" loc="57:/Users/ytc/Applications/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/Users/ytc/Applications/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x10297f350" loc="72:/Users/ytc/Applications/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/Users/ytc/Applications/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x10295bae0" loc="65:/Users/ytc/Applications/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/Users/ytc/Applications/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x102c30190"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x10343e020" loc="53:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x10343e020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x10346ec50" loc="136:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x102770400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x10343c5b0" loc="83:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x10346f360" loc="114:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x102770400"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x102770400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x103471d60" loc="114:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x102770400"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x10346f0d0" loc="114:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x102770400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x1034715b0" loc="98:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x102c30190"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x10346dca0" loc="151:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x102770400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x10346d420" loc="144:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x102770400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x10343cd90" loc="92:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x102c30190"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x10343eb90" loc="64:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x102770400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x10343e910" loc="64:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x102770400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x10346e2f0" loc="129:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x102770400"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x102770400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x10346fd00" loc="129:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x102770400"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x10346e060" loc="129:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x102770400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x10343d680" loc="73:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x102770400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x10343d400" loc="73:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x102770400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x10343de80" loc="78:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
    <union loc="297:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x103ae4b70" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x103ae4d80" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x103ae4e30" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x103ae4290"/></type-tag>
      </field>
    </union>
    <struct name="ip_mreq" loc="501:/usr/include/netinet/in.h" ref="0x1030464d0" defined="" size="I:8" alignment="I:4">
      <field name="imr_multiaddr" ref="0x103046c00" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref name="in_addr" ref="0x10304a0c0"/></type-tag>
      </field>
      <field name="imr_interface" ref="0x103046cb0" bit-offset="I:32" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref name="in_addr" ref="0x10304a0c0"/></type-tag>
      </field>
    </struct>
    <struct name="__float2" loc="668:/opt/local/lib/gcc47/gcc/x86_64-apple-darwin16/4.7.4/include-fixed/math.h" ref="0x102b52780" defined="" size="I:8" alignment="I:4">
      <field name="__sinval" ref="0x102b52c90" bit-offset="I:0" size="I:4">
        <type-float cname="float" size="I:4" alignment="I:4"></type-float>
      </field>
      <field name="__cosval" ref="0x102b52d40" bit-offset="I:32" size="I:4">
        <type-float cname="float" size="I:4" alignment="I:4"></type-float>
      </field>
    </struct>
    <attribute name="bnd" loc="9:/usr/local/lib/ncc/deputy_nodeputy.h" ref="0x102498170" defined="" size="I:16" alignment="I:8">
      <field name="lo" ref="0x102498600" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="hi" ref="0x1024986b0" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
    </attribute>
    <enum loc="185:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x103afb5a0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="253:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x103aee080" defined="" size="I:1" alignment="I:1">
      <field name="rsvd" ref="0x103aee290" bit-offset="I:0" bit-size="I:5">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="focC" ref="0x103aee340" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="focB" ref="0x103aee3f0" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="focA" ref="0x103aee4a0" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="54:/Users/ytc/Applications/tinyos-main/tos/platforms/micaz/sim/platform_hardware.h" ref="0x1036a7020" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="94:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h" ref="0x1036af110" defined="" size="I:1" alignment="I:1">
      <field name="mux" ref="0x1036af320" bit-offset="I:0" bit-size="I:5">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="adlar" ref="0x1036af3d0" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="refs" ref="0x1036af480" bit-offset="I:6" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="ip_opts" loc="393:/usr/include/netinet/in.h" ref="0x1030489a0" defined="" size="I:44" alignment="I:4">
      <field name="ip_dst" ref="0x1030460e0" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref name="in_addr" ref="0x10304a0c0"/></type-tag>
      </field>
      <field name="ip_opts" ref="0x103046190" bit-offset="I:32" size="I:40">
        <type-array elements="I:40" size="I:40" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <struct name="ftrimactivefile" loc="436:/usr/include/sys/fcntl.h" ref="0x102fdf020" defined="" size="I:16" alignment="I:8">
      <field name="fta_offset" ref="0x102fdf6e0" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="off_t" ref="0x102c0e1e0"/></typename>
        </type-int>
      </field>
      <field name="fta_length" ref="0x102fdf790" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="off_t" ref="0x102c0e1e0"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="rusage_info_v2" loc="228:/usr/include/sys/resource.h" ref="0x1029d0170" defined="" size="I:160" alignment="I:8">
      <field name="ri_uuid" ref="0x1029cd200" bit-offset="I:0" size="I:16">
        <type-array elements="I:16" size="I:16" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="ri_user_time" ref="0x1029cd2b0" bit-offset="I:128" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_system_time" ref="0x1029cd360" bit-offset="I:192" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_pkg_idle_wkups" ref="0x1029cd410" bit-offset="I:256" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_interrupt_wkups" ref="0x1029cd4c0" bit-offset="I:320" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_pageins" ref="0x1029cd570" bit-offset="I:384" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_wired_size" ref="0x1029cd620" bit-offset="I:448" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_resident_size" ref="0x1029cd6d0" bit-offset="I:512" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_phys_footprint" ref="0x1029cd780" bit-offset="I:576" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_proc_start_abstime" ref="0x1029cd830" bit-offset="I:640" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_proc_exit_abstime" ref="0x1029cd8e0" bit-offset="I:704" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_child_user_time" ref="0x1029cd990" bit-offset="I:768" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_child_system_time" ref="0x1029cda40" bit-offset="I:832" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_child_pkg_idle_wkups" ref="0x1029cdbf0" bit-offset="I:896" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_child_interrupt_wkups" ref="0x1029cdca0" bit-offset="I:960" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_child_pageins" ref="0x1029cdd50" bit-offset="I:1024" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_child_elapsed_abstime" ref="0x1029cde00" bit-offset="I:1088" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_diskio_bytesread" ref="0x1029cdeb0" bit-offset="I:1152" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_diskio_byteswritten" ref="0x1029d7020" bit-offset="I:1216" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="_opaque_pthread_cond_t" loc="68:/usr/include/sys/_pthread/_pthread_types.h" ref="0x102761360" defined="" size="I:48" alignment="I:8">
      <field name="__sig" ref="0x1027619d0" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__opaque" ref="0x102761a80" bit-offset="I:64" size="I:40">
        <type-array elements="I:40" size="I:40" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <nx_struct name="tossim_metadata" loc="18:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimRadioMsg.h" ref="0x102f509b0" defined="" size="I:11" alignment="I:1">
      <field name="strength" ref="0x102f4fac0" bit-offset="I:0" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1" network="nx_int8_t">
          <typename><typedef-ref name="nx_int8_t" ref="0x1028fc2d0"/></typename>
        </type-int>
      </field>
      <field name="ack" ref="0x102f4fb70" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x102901020"/></typename>
        </type-int>
      </field>
      <field name="time" ref="0x102f4fc20" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x102901740"/></typename>
        </type-int>
      </field>
      <field name="ackNode" ref="0x102f4fcd0" bit-offset="I:32" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x102901020"/></typename>
        </type-int>
      </field>
      <field name="other1" ref="0x102f4fd80" bit-offset="I:40" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x102901740"/></typename>
        </type-int>
      </field>
      <field name="other2" ref="0x102f4fe30" bit-offset="I:56" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x102901740"/></typename>
        </type-int>
      </field>
      <field name="other3" ref="0x102f4fee0" bit-offset="I:72" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x102901740"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <struct name="gain_entry" loc="53:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_gain.h" ref="0x102dea510" defined="" size="I:24" alignment="I:8">
      <field name="mote" ref="0x102dead20" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="gain" ref="0x102deadd0" bit-offset="I:64" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="next" ref="0x102deae80" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:24" alignment="I:8"><struct-ref name="gain_entry" ref="0x102dea510"/></type-tag>
        </type-pointer>
      </field>
    </struct>
    <struct name="proc_rlimit_control_wakeupmon" loc="353:/usr/include/sys/resource.h" ref="0x1029da360" defined="" size="I:8" alignment="I:4">
      <field name="wm_flags" ref="0x1029da970" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x102770400"/></typename>
        </type-int>
      </field>
      <field name="wm_rate" ref="0x1029daa20" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="int32_t" ref="0x10276e420"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="fd_set" loc="46:/usr/include/sys/_types/_fd_def.h" ref="0x102d2e530" defined="" size="I:128" alignment="I:4">
      <field name="fds_bits" ref="0x102d44d90" bit-offset="I:0" size="I:128">
        <type-array elements="I:32" size="I:128" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="__int32_t" ref="0x10274fb60"/></typename>
          </type-int>
        </type-array>
      </field>
    </struct>
    <attribute name="deputy_scope"  loc="NONE" ref="0x102491a20" size="V:" alignment="V:">
    </attribute>
    <struct name="timeval" loc="30:/usr/include/sys/_types/_timeval.h" ref="0x1029c40e0" defined="" size="I:16" alignment="I:8">
      <field name="tv_sec" ref="0x1029c4790" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__darwin_time_t" ref="0x102757170"/></typename>
        </type-int>
      </field>
      <field name="tv_usec" ref="0x1029c4840" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__darwin_suseconds_t" ref="0x10275ccb0"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="sim_gain_noise" loc="3:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_gain.c" ref="0x102df99a0" defined="" size="I:16" alignment="I:8">
      <field name="mean" ref="0x102df8020" bit-offset="I:0" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="range" ref="0x102df80d0" bit-offset="I:64" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
    </struct>
    <struct name="sf_hdtr" loc="668:/usr/include/sys/socket.h" ref="0x103027d70" defined="" size="I:32" alignment="I:8">
      <field name="headers" ref="0x1030257e0" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:16" alignment="I:8"><struct-ref name="iovec" ref="0x102fceeb0"/></type-tag>
        </type-pointer>
      </field>
      <field name="hdr_cnt" ref="0x103025890" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="trailers" ref="0x103025940" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:16" alignment="I:8"><struct-ref name="iovec" ref="0x102fceeb0"/></type-tag>
        </type-pointer>
      </field>
      <field name="trl_cnt" ref="0x1030259f0" bit-offset="I:192" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="stat64" loc="221:/usr/include/sys/stat.h" ref="0x103164420" defined="" size="I:144" alignment="I:8">
      <field name="st_dev" ref="0x10318ba80" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="dev_t" ref="0x102a50df0"/></typename>
        </type-int>
      </field>
      <field name="st_mode" ref="0x10318bb30" bit-offset="I:32" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="mode_t" ref="0x102a4f250"/></typename>
        </type-int>
      </field>
      <field name="st_nlink" ref="0x10318bbe0" bit-offset="I:48" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="nlink_t" ref="0x102fd5160"/></typename>
        </type-int>
      </field>
      <field name="st_ino" ref="0x10318bc90" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__darwin_ino64_t" ref="0x102759460"/></typename>
        </type-int>
      </field>
      <field name="st_uid" ref="0x10318bd40" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uid_t" ref="0x1029a0b70"/></typename>
        </type-int>
      </field>
      <field name="st_gid" ref="0x10318bdf0" bit-offset="I:160" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="gid_t" ref="0x102fd8890"/></typename>
        </type-int>
      </field>
      <field name="st_rdev" ref="0x10318bea0" bit-offset="I:192" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="dev_t" ref="0x102a50df0"/></typename>
        </type-int>
      </field>
      <field name="st_atimespec" ref="0x10318bf50" bit-offset="I:256" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timespec" ref="0x102d3f0e0"/></type-tag>
      </field>
      <field name="st_mtimespec" ref="0x10318a030" bit-offset="I:384" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timespec" ref="0x102d3f0e0"/></type-tag>
      </field>
      <field name="st_ctimespec" ref="0x10318a0e0" bit-offset="I:512" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timespec" ref="0x102d3f0e0"/></type-tag>
      </field>
      <field name="st_birthtimespec" ref="0x10318a190" bit-offset="I:640" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timespec" ref="0x102d3f0e0"/></type-tag>
      </field>
      <field name="st_size" ref="0x10318a240" bit-offset="I:768" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="off_t" ref="0x102c0e1e0"/></typename>
        </type-int>
      </field>
      <field name="st_blocks" ref="0x10318a2f0" bit-offset="I:832" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="blkcnt_t" ref="0x102fd8020"/></typename>
        </type-int>
      </field>
      <field name="st_blksize" ref="0x10318a4a0" bit-offset="I:896" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="blksize_t" ref="0x102fd8480"/></typename>
        </type-int>
      </field>
      <field name="st_flags" ref="0x10318a550" bit-offset="I:928" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x102750020"/></typename>
        </type-int>
      </field>
      <field name="st_gen" ref="0x10318a600" bit-offset="I:960" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x102750020"/></typename>
        </type-int>
      </field>
      <field name="st_lspare" ref="0x10318a6b0" bit-offset="I:992" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__int32_t" ref="0x10274fb60"/></typename>
        </type-int>
      </field>
      <field name="st_qspare" ref="0x10318a760" bit-offset="I:1024" size="I:16">
        <type-array elements="I:2" size="I:16" alignment="I:8">
          <type-int cname="long long" size="I:8" alignment="I:8">
            <typename><typedef-ref name="__int64_t" ref="0x1027503e0"/></typename>
          </type-int>
        </type-array>
      </field>
    </struct>
    <struct loc="123:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x103b05370" defined="" size="I:1" alignment="I:1">
      <field name="tcr0ub" ref="0x103b05580" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="ocr0ub" ref="0x103b05630" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="tcn0ub" ref="0x103b056e0" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="as0" ref="0x103b05790" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0x103b05840" bit-offset="I:4" bit-size="I:4">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="accessx_descriptor" loc="132:/usr/include/sys/unistd.h" ref="0x1030878f0" defined="" size="I:16" alignment="I:4">
      <field name="ad_name_offset" ref="0x1030ae1c0" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="ad_flags" ref="0x1030ae270" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="ad_pad" ref="0x1030ae320" bit-offset="I:64" size="I:8">
        <type-array elements="I:2" size="I:8" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </type-array>
      </field>
    </struct>
    <struct loc="77:/usr/include/runetype.h" ref="0x102b70be0" defined="" size="I:3208" alignment="I:8">
      <field name="__magic" ref="0x102b70df0" bit-offset="I:0" size="I:8">
        <type-array elements="I:8" size="I:8" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__encoding" ref="0x102b70ea0" bit-offset="I:64" size="I:32">
        <type-array elements="I:32" size="I:32" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__sgetrune" ref="0x102b70f50" bit-offset="I:320" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-int cname="int" size="I:4" alignment="I:4">
              <typename><typedef-ref name="__darwin_rune_t" ref="0x102754ce0"/></typename>
            </type-int>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-qualified const="">
                  <type-int cname="char" size="I:1" alignment="I:1"></type-int>
                </type-qualified>
              </type-pointer>
              <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
                <typename><typedef-ref name="__darwin_size_t" ref="0x102754020"/></typename>
              </type-int>
              <type-pointer size="I:8" alignment="I:8">
                <type-pointer size="I:8" alignment="I:8">
                  <type-qualified const="">
                    <type-int cname="char" size="I:1" alignment="I:1"></type-int>
                  </type-qualified>
                </type-pointer>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="__sputrune" ref="0x102b81070" bit-offset="I:384" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <function-parameters>
              <type-int cname="int" size="I:4" alignment="I:4">
                <typename><typedef-ref name="__darwin_rune_t" ref="0x102754ce0"/></typename>
              </type-int>
              <type-pointer size="I:8" alignment="I:8">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-pointer>
              <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
                <typename><typedef-ref name="__darwin_size_t" ref="0x102754020"/></typename>
              </type-int>
              <type-pointer size="I:8" alignment="I:8">
                <type-pointer size="I:8" alignment="I:8">
                  <type-int cname="char" size="I:1" alignment="I:1"></type-int>
                </type-pointer>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="__invalid_rune" ref="0x102b81170" bit-offset="I:448" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__darwin_rune_t" ref="0x102754ce0"/></typename>
        </type-int>
      </field>
      <field name="__runetype" ref="0x102b81220" bit-offset="I:480" size="I:1024">
        <type-array elements="I:256" size="I:1024" alignment="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="__uint32_t" ref="0x102750020"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="__maplower" ref="0x102b812d0" bit-offset="I:8672" size="I:1024">
        <type-array elements="I:256" size="I:1024" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="__darwin_rune_t" ref="0x102754ce0"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="__mapupper" ref="0x102b81380" bit-offset="I:16864" size="I:1024">
        <type-array elements="I:256" size="I:1024" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="__darwin_rune_t" ref="0x102754ce0"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="__runetype_ext" ref="0x102b81430" bit-offset="I:25088" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x102b76290"/>
          <typename><typedef-ref name="_RuneRange" ref="0x102b766b0"/></typename>
        </type-tag>
      </field>
      <field name="__maplower_ext" ref="0x102b814e0" bit-offset="I:25216" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x102b76290"/>
          <typename><typedef-ref name="_RuneRange" ref="0x102b766b0"/></typename>
        </type-tag>
      </field>
      <field name="__mapupper_ext" ref="0x102b81590" bit-offset="I:25344" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x102b76290"/>
          <typename><typedef-ref name="_RuneRange" ref="0x102b766b0"/></typename>
        </type-tag>
      </field>
      <field name="__variable" ref="0x102b81640" bit-offset="I:25472" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__variable_len" ref="0x102b816f0" bit-offset="I:25536" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__ncharclasses" ref="0x102b818a0" bit-offset="I:25568" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__charclasses" ref="0x102b81950" bit-offset="I:25600" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:20" alignment="I:4"><struct-ref ref="0x102b76e80"/>
            <typename><typedef-ref name="_RuneCharClass" ref="0x102b752f0"/></typename>
          </type-tag>
        </type-pointer>
      </field>
    </struct>
    <struct name="sigaction" loc="286:/usr/include/sys/signal.h" ref="0x1029b7be0" defined="" size="I:16" alignment="I:8">
      <field name="__sigaction_u" ref="0x1029b6490" bit-offset="I:0" size="I:8">
        <type-tag size="I:8" alignment="I:8"><union-ref name="__sigaction_u" ref="0x1029af170"/></type-tag>
      </field>
      <field name="sa_mask" ref="0x1029b6540" bit-offset="I:64" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="sigset_t" ref="0x1029a0740"/></typename>
        </type-int>
      </field>
      <field name="sa_flags" ref="0x1029b65f0" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <attribute name="nonnull" loc="8:/usr/local/lib/ncc/deputy_nodeputy.h" ref="0x102497660" defined="" size="I:4" alignment="I:4">
      <field name="dummy" ref="0x102497ad0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <struct name="__double2" loc="669:/opt/local/lib/gcc47/gcc/x86_64-apple-darwin16/4.7.4/include-fixed/math.h" ref="0x102b50020" defined="" size="I:16" alignment="I:8">
      <field name="__sinval" ref="0x102b50530" bit-offset="I:0" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="__cosval" ref="0x102b505e0" bit-offset="I:64" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
    </struct>
    <enum loc="25:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h" ref="0x103619770" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="_opaque_pthread_t" loc="103:/usr/include/sys/_pthread/_pthread_types.h" ref="0x1027669a0" defined="" size="I:8192" alignment="I:8">
      <field name="__sig" ref="0x1027673e0" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__cleanup_stack" ref="0x102767490" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:24" alignment="I:8"><struct-ref name="__darwin_pthread_handler_rec" ref="0x10275f470"/></type-tag>
        </type-pointer>
      </field>
      <field name="__opaque" ref="0x102767540" bit-offset="I:128" size="I:8176">
        <type-array elements="I:8176" size="I:8176" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <attribute name="number"  loc="NONE" ref="0x102490020" size="V:" alignment="V:">
    </attribute>
    <struct name="sigstack" loc="367:/usr/include/sys/signal.h" ref="0x1029b31a0" defined="" size="I:16" alignment="I:8">
      <field name="ss_sp" ref="0x1029b3740" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="ss_onstack" ref="0x1029b37f0" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct loc="43:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.h" ref="0x102fae160" defined="" size="I:4" alignment="I:4">
      <field name="notUsed" ref="0x102fae370" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="82:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x103abd800" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="radvisory" loc="363:/usr/include/sys/fcntl.h" ref="0x102fe87f0" defined="" size="I:16" alignment="I:8">
      <field name="ra_offset" ref="0x102fe8da0" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="off_t" ref="0x102c0e1e0"/></typename>
        </type-int>
      </field>
      <field name="ra_count" ref="0x102fe8e50" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="node" loc="62:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/heap.c" ref="0x102cca8e0" defined="" size="I:16" alignment="I:8">
      <field name="data" ref="0x102ccaee0" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="key" ref="0x102ce1020" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <enum loc="51:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h" ref="0x1036b8800" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="linger" loc="312:/usr/include/sys/socket.h" ref="0x10300b960" defined="" size="I:8" alignment="I:4">
      <field name="l_onoff" ref="0x10300bec0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="l_linger" ref="0x10300a020" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="51:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_noise.h" ref="0x102d74c40" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="44:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.h" ref="0x102fae910" defined="" size="I:4" alignment="I:4">
      <field name="notUsed" ref="0x102faeb20" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="__darwin_x86_debug_state32" loc="422:/usr/include/mach/i386/_structs.h" ref="0x1029761f0" defined="" size="I:32" alignment="I:4">
      <field name="__dr0" ref="0x102975240" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__dr1" ref="0x1029752f0" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__dr2" ref="0x1029753a0" bit-offset="I:64" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__dr3" ref="0x102975450" bit-offset="I:96" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__dr4" ref="0x102975500" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__dr5" ref="0x1029755b0" bit-offset="I:160" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__dr6" ref="0x102975660" bit-offset="I:192" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__dr7" ref="0x102975710" bit-offset="I:224" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="87:/Users/ytc/Applications/tinyos-main/tos/lib/serial/Serial.h" ref="0x102f4d7c0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <nx_struct name="serial_packet" loc="131:/Users/ytc/Applications/tinyos-main/tos/lib/serial/Serial.h" ref="0x102f45020" defined="" size="I:7" alignment="I:1">
      <field name="header" ref="0x102f45730" bit-offset="I:0" size="I:7">
        <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_header" ref="0x102f48bc0"/>
          <typename><typedef-ref name="serial_header_t" ref="0x102f47ca0"/></typename>
        </type-tag>
      </field>
      <field name="data" ref="0x102f457e0" bit-offset="I:56" size="I:0">
        <type-array elements="I:0" size="I:0" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x102901020"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <struct name="timeval64" loc="31:/usr/include/sys/_types/_timeval64.h" ref="0x102d3f9e0" defined="" size="I:16" alignment="I:8">
      <field name="tv_sec" ref="0x102d3e020" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__int64_t" ref="0x1027503e0"/></typename>
        </type-int>
      </field>
      <field name="tv_usec" ref="0x102d3e0d0" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__int64_t" ref="0x1027503e0"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="integer"  loc="NONE" ref="0x10248dcf0" size="V:" alignment="V:">
    </attribute>
    <attribute name="exactlyonce" loc="99:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/tos.h" ref="0x102c5e3a0" defined="" size="I:0" alignment="I:1">
    </attribute>
    <struct loc="87:/usr/include/stdlib.h" ref="0x1029f7c00" defined="" size="I:16" alignment="I:8">
      <field name="quot" ref="0x1029f7e10" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="rem" ref="0x1029f7ec0" bit-offset="I:64" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <union name="message_footer" loc="55:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/platform_message.h" ref="0x102f433f0" defined="" size="I:2" alignment="I:1">
      <field name="tossim" ref="0x102f438f0" bit-offset="I:0" size="I:2">
        <type-tag size="I:2" alignment="I:1"><nx_struct-ref name="tossim_footer" ref="0x102f50020"/>
          <typename><typedef-ref name="tossim_footer_t" ref="0x102f50640"/></typename>
        </type-tag>
      </field>
    </union>
    <enum loc="120:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h" ref="0x1036adb20" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="150:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h" ref="0x1036a9d70" defined="" size="I:1" alignment="I:1">
      <field name="adps" ref="0x1036a8020" bit-offset="I:0" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="adie" ref="0x1036a80d0" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="adif" ref="0x1036a8180" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="adfr" ref="0x1036a8230" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="adsc" ref="0x1036a82e0" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="aden" ref="0x1036a8390" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
    </struct>
    <union name="message_metadata" loc="59:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/platform_message.h" ref="0x102f43dd0" defined="" size="I:11" alignment="I:1">
      <field name="tossim" ref="0x102f41340" bit-offset="I:0" size="I:11">
        <type-tag size="I:11" alignment="I:1"><nx_struct-ref name="tossim_metadata" ref="0x102f509b0"/>
          <typename><typedef-ref name="tossim_metadata_t" ref="0x102f4d090"/></typename>
        </type-tag>
      </field>
    </union>
    <struct loc="60:/usr/include/runetype.h" ref="0x102b785b0" defined="" size="I:24" alignment="I:8">
      <field name="__min" ref="0x102b787c0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__darwin_rune_t" ref="0x102754ce0"/></typename>
        </type-int>
      </field>
      <field name="__max" ref="0x102b78870" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__darwin_rune_t" ref="0x102754ce0"/></typename>
        </type-int>
      </field>
      <field name="__map" ref="0x102b78920" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__darwin_rune_t" ref="0x102754ce0"/></typename>
        </type-int>
      </field>
      <field name="__types" ref="0x102b789d0" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="__uint32_t" ref="0x102750020"/></typename>
          </type-int>
        </type-pointer>
      </field>
    </struct>
    <attribute name="combine"  loc="NONE" ref="0x102491340" size="V:" alignment="V:">
      <field name="fn" ref="0x102491550" bit-offset="U:" bit-size="U:">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
    </attribute>
    <union name="__sigaction_u" loc="269:/usr/include/sys/signal.h" ref="0x1029af170" defined="" size="I:8" alignment="I:8">
      <field name="__sa_handler" ref="0x1029ae7e0" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="__sa_sigaction" ref="0x1029ae8b0" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-int cname="int" size="I:4" alignment="I:4"></type-int>
              <type-pointer size="I:8" alignment="I:8">
                <type-tag size="I:104" alignment="I:8"><struct-ref name="__siginfo" ref="0x1029a7020"/></type-tag>
              </type-pointer>
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
    </union>
    <struct name="__darwin_mcontext64" loc="76:/usr/include/i386/_mcontext.h" ref="0x10299a020" defined="" size="I:712" alignment="I:8">
      <field name="__es" ref="0x10299ab10" bit-offset="I:0" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="__darwin_x86_exception_state64" ref="0x1029953d0"/></type-tag>
      </field>
      <field name="__ss" ref="0x10299abc0" bit-offset="I:128" size="I:168">
        <type-tag size="I:168" alignment="I:8"><struct-ref name="__darwin_x86_thread_state64" ref="0x102975a10"/></type-tag>
      </field>
      <field name="__fs" ref="0x10299ac70" bit-offset="I:1472" size="I:524">
        <type-tag size="I:524" alignment="I:4"><struct-ref name="__darwin_x86_float_state64" ref="0x10297a7d0"/></type-tag>
      </field>
    </struct>
    <struct loc="199:/usr/include/sys/wait.h" ref="0x1029ec990" defined="" size="I:4" alignment="I:4">
      <field name="w_Termsig" ref="0x1029ecba0" bit-offset="I:0" bit-size="I:7">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="w_Coredump" ref="0x1029ecc50" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="w_Retcode" ref="0x1029ecd00" bit-offset="I:8" bit-size="I:8">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="w_Filler" ref="0x1029ecdb0" bit-offset="I:16" bit-size="I:16">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="26:/Users/ytc/Applications/tinyos-main/tos/types/AM.h" ref="0x102f30080" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="__darwin_fp_status" loc="147:/usr/include/mach/i386/_structs.h" ref="0x102958930" defined="" size="I:2" alignment="I:2">
      <field name="__invalid" ref="0x102956820" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__denorm" ref="0x1029568d0" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__zdiv" ref="0x102956980" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__ovrfl" ref="0x102956a30" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__undfl" ref="0x102956ae0" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__precis" ref="0x102956b90" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__stkflt" ref="0x102956c40" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__errsumm" ref="0x102956cf0" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__c0" ref="0x102956da0" bit-offset="I:8" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__c1" ref="0x102956e50" bit-offset="I:9" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__c2" ref="0x102956f00" bit-offset="I:10" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__tos" ref="0x10295e020" bit-offset="I:11" bit-size="I:3">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__c3" ref="0x10295e0d0" bit-offset="I:14" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__busy" ref="0x10295e280" bit-offset="I:15" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
    </struct>
    <struct name="group_source_req" loc="536:/usr/include/netinet/in.h" ref="0x1030424d0" defined="" size="I:264" alignment="I:8">
      <field name="gsr_interface" ref="0x103042ea0" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x102770400"/></typename>
        </type-int>
      </field>
      <field name="gsr_group" ref="0x103042f50" bit-offset="I:64" size="I:128">
        <type-tag size="I:128" alignment="I:8"><struct-ref name="sockaddr_storage" ref="0x103006170"/></type-tag>
      </field>
      <field name="gsr_source" ref="0x103040030" bit-offset="I:1088" size="I:128">
        <type-tag size="I:128" alignment="I:8"><struct-ref name="sockaddr_storage" ref="0x103006170"/></type-tag>
      </field>
    </struct>
    <struct name="__darwin_sigaltstack" loc="36:/usr/include/sys/_types/_sigaltstack.h" ref="0x1029a4910" defined="" size="I:24" alignment="I:8">
      <field name="ss_sp" ref="0x1029a3100" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="ss_size" ref="0x1029a31b0" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__darwin_size_t" ref="0x102754020"/></typename>
        </type-int>
      </field>
      <field name="ss_flags" ref="0x1029a3260" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="sockproto" loc="417:/usr/include/sys/socket.h" ref="0x103009760" defined="" size="I:4" alignment="I:2">
      <field name="sp_family" ref="0x103009dc0" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10274f7e0"/></typename>
        </type-int>
      </field>
      <field name="sp_protocol" ref="0x103009e70" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10274f7e0"/></typename>
        </type-int>
      </field>
    </struct>
    <nx_struct name="serial_header" loc="123:/Users/ytc/Applications/tinyos-main/tos/lib/serial/Serial.h" ref="0x102f48bc0" defined="" size="I:7" alignment="I:1">
      <field name="dest" ref="0x102f47880" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x102f33bb0"/></typename>
        </type-int>
      </field>
      <field name="src" ref="0x102f47930" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x102f33bb0"/></typename>
        </type-int>
      </field>
      <field name="length" ref="0x102f479e0" bit-offset="I:32" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x102901020"/></typename>
        </type-int>
      </field>
      <field name="group" ref="0x102f47a90" bit-offset="I:40" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_group_t" ref="0x102f337a0"/></typename>
        </type-int>
      </field>
      <field name="type" ref="0x102f47b40" bit-offset="I:48" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_id_t" ref="0x102f33270"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <enum loc="26:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricOR.h" ref="0x102fca840" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="47:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_log.c" ref="0x102c686c0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="14:/Users/ytc/Applications/tinyos-main/tos/types/AM.h" ref="0x102f31a30" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="170:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x103afc6a0" defined="" size="I:1" alignment="I:1">
      <field name="psr321" ref="0x103afc8b0" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="psr0" ref="0x103afc960" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="pud" ref="0x103afca10" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="acme" ref="0x103afcac0" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0x103afcb70" bit-offset="I:4" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="tsm" ref="0x103afcc20" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
    </struct>
    <union name="message_header" loc="50:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/platform_message.h" ref="0x102f44730" defined="" size="I:7" alignment="I:1">
      <field name="tossim" ref="0x102f44e50" bit-offset="I:0" size="I:7">
        <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="tossim_header" ref="0x102f30ab0"/>
          <typename><typedef-ref name="tossim_header_t" ref="0x102f2fba0"/></typename>
        </type-tag>
      </field>
      <field name="serial" ref="0x102f44f00" bit-offset="I:0" size="I:7">
        <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_header" ref="0x102f48bc0"/>
          <typename><typedef-ref name="serial_header_t" ref="0x102f47ca0"/></typename>
        </type-tag>
      </field>
    </union>
    <struct name="timespec" loc="30:/usr/include/sys/_types/_timespec.h" ref="0x102d3f0e0" defined="" size="I:16" alignment="I:8">
      <field name="tv_sec" ref="0x102d3f6c0" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__darwin_time_t" ref="0x102757170"/></typename>
        </type-int>
      </field>
      <field name="tv_nsec" ref="0x102d3f770" bit-offset="I:64" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <attribute name="count" loc="11:/usr/local/lib/ncc/deputy_nodeputy.h" ref="0x10249a8d0" defined="" size="I:4" alignment="I:4">
      <field name="n" ref="0x10249ac10" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <struct name="NeighborSetNode" loc="43:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricOR.h" ref="0x102fc6650" defined="" size="I:20" alignment="I:4">
      <field name="nodeid" ref="0x102fc50a0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="sleepperiod" ref="0x102fc5150" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="edc" ref="0x102fc5200" bit-offset="I:64" size="I:4">
        <type-float cname="float" size="I:4" alignment="I:4"></type-float>
      </field>
      <field name="p" ref="0x102fc52b0" bit-offset="I:96" size="I:4">
        <type-float cname="float" size="I:4" alignment="I:4"></type-float>
      </field>
      <field name="use" ref="0x102fc5360" bit-offset="I:128" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x102c30190"/></typename>
        </type-int>
      </field>
    </struct>
    <struct loc="196:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x103af9410" defined="" size="I:1" alignment="I:1">
      <field name="wgm10" ref="0x103af9620" bit-offset="I:0" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="comC" ref="0x103af96d0" bit-offset="I:2" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="comB" ref="0x103af9780" bit-offset="I:4" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="comA" ref="0x103af9830" bit-offset="I:6" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="bnd_nok" loc="10:/usr/local/lib/ncc/deputy_nodeputy.h" ref="0x102498d00" defined="" size="I:16" alignment="I:8">
      <field name="lo" ref="0x10249a1e0" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="hi" ref="0x10249a290" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
    </attribute>
    <struct name="fstore" loc="419:/usr/include/sys/fcntl.h" ref="0x102fe3970" defined="" size="I:32" alignment="I:8">
      <field name="fst_flags" ref="0x102fe25c0" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="fst_posmode" ref="0x102fe2670" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="fst_offset" ref="0x102fe2720" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="off_t" ref="0x102c0e1e0"/></typename>
        </type-int>
      </field>
      <field name="fst_length" ref="0x102fe27d0" bit-offset="I:128" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="off_t" ref="0x102c0e1e0"/></typename>
        </type-int>
      </field>
      <field name="fst_bytesalloc" ref="0x102fe2880" bit-offset="I:192" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="off_t" ref="0x102c0e1e0"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="timezone" loc="129:/usr/include/sys/time.h" ref="0x102d3c680" defined="" size="I:8" alignment="I:4">
      <field name="tz_minuteswest" ref="0x102d3cc30" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tz_dsttime" ref="0x102d3cce0" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <union name="wait" loc="194:/usr/include/sys/wait.h" ref="0x1029edce0" defined="" size="I:4" alignment="I:4">
      <field name="w_status" ref="0x1029ebd20" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="w_T" ref="0x1029ebdd0" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x1029ec990"/></type-tag>
      </field>
      <field name="w_S" ref="0x1029ebe80" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x1029eb720"/></type-tag>
      </field>
    </union>
    <struct name="rusage_info_v0" loc="194:/usr/include/sys/resource.h" ref="0x1029cb0c0" defined="" size="I:96" alignment="I:8">
      <field name="ri_uuid" ref="0x1029cad20" bit-offset="I:0" size="I:16">
        <type-array elements="I:16" size="I:16" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="ri_user_time" ref="0x1029cadd0" bit-offset="I:128" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_system_time" ref="0x1029cae80" bit-offset="I:192" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_pkg_idle_wkups" ref="0x1029caf30" bit-offset="I:256" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_interrupt_wkups" ref="0x1029c9020" bit-offset="I:320" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_pageins" ref="0x1029c90d0" bit-offset="I:384" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_wired_size" ref="0x1029c9180" bit-offset="I:448" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_resident_size" ref="0x1029c9230" bit-offset="I:512" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_phys_footprint" ref="0x1029c92e0" bit-offset="I:576" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_proc_start_abstime" ref="0x1029c9390" bit-offset="I:640" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_proc_exit_abstime" ref="0x1029c9440" bit-offset="I:704" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="__darwin_ucontext" loc="34:/usr/include/sys/_types/_ucontext.h" ref="0x1029a39a0" defined="" size="I:56" alignment="I:8">
      <field name="uc_onstack" ref="0x1029a1b30" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="uc_sigmask" ref="0x1029a1be0" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__darwin_sigset_t" ref="0x10275c860"/></typename>
        </type-int>
      </field>
      <field name="uc_stack" ref="0x1029a1c90" bit-offset="I:64" size="I:24">
        <type-tag size="I:24" alignment="I:8"><struct-ref name="__darwin_sigaltstack" ref="0x1029a4910"/></type-tag>
      </field>
      <field name="uc_link" ref="0x1029a1d40" bit-offset="I:256" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:56" alignment="I:8"><struct-ref name="__darwin_ucontext" ref="0x1029a39a0"/></type-tag>
        </type-pointer>
      </field>
      <field name="uc_mcsize" ref="0x1029a1df0" bit-offset="I:320" size="I:8">
        <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__darwin_size_t" ref="0x102754020"/></typename>
        </type-int>
      </field>
      <field name="uc_mcontext" ref="0x1029a1ea0" bit-offset="I:384" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:712" alignment="I:8"><struct-ref name="__darwin_mcontext64" ref="0x10299a020"/></type-tag>
        </type-pointer>
      </field>
    </struct>
    <enum loc="102:/Users/ytc/Applications/tinyos-main/tos/lib/serial/Serial.h" ref="0x102f4b340" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="_opaque_pthread_once_t" loc="88:/usr/include/sys/_pthread/_pthread_types.h" ref="0x102764b80" defined="" size="I:16" alignment="I:8">
      <field name="__sig" ref="0x102765240" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__opaque" ref="0x1027652f0" bit-offset="I:64" size="I:8">
        <type-array elements="I:8" size="I:8" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <struct loc="42:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.h" ref="0x102faf940" defined="" size="I:4" alignment="I:4">
      <field name="notUsed" ref="0x102fafb50" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="iovec" loc="30:/usr/include/sys/_types/_iovec_t.h" ref="0x102fceeb0" defined="" size="I:16" alignment="I:8">
      <field name="iov_base" ref="0x102fcd4d0" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="iov_len" ref="0x102fcd580" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="size_t" ref="0x102493a60"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="sim_event" loc="53:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_event_queue.h" ref="0x102c38020" defined="" size="I:48" alignment="I:8">
      <field name="time" ref="0x102c350a0" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="sim_time_t" ref="0x102c2f320"/></typename>
        </type-int>
      </field>
      <field name="mote" ref="0x102c35150" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="force" ref="0x102c35200" bit-offset="I:128" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x102c30190"/></typename>
        </type-int>
      </field>
      <field name="cancelled" ref="0x102c352b0" bit-offset="I:136" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x102c30190"/></typename>
        </type-int>
      </field>
      <field name="data" ref="0x102c35360" bit-offset="I:192" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="handle" ref="0x102c35410" bit-offset="I:256" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x102c38020"/>
                  <typename><typedef-ref name="sim_event_t" ref="0x102c38410"/></typename>
                </type-tag>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="cleanup" ref="0x102c354e0" bit-offset="I:320" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x102c38020"/>
                  <typename><typedef-ref name="sim_event_t" ref="0x102c38410"/></typename>
                </type-tag>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
    </struct>
    <enum loc="5:/Users/ytc/Documents/workspace/NewMetricOR/src/NeighborDiscovery/NeighborDiscovery.h" ref="0x103deccc0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="__siginfo" loc="177:/usr/include/sys/signal.h" ref="0x1029a7020" defined="" size="I:104" alignment="I:8">
      <field name="si_signo" ref="0x1029a6540" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="si_errno" ref="0x1029a65f0" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="si_code" ref="0x1029a66a0" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="si_pid" ref="0x1029a6750" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="pid_t" ref="0x10294c880"/></typename>
        </type-int>
      </field>
      <field name="si_uid" ref="0x1029a6800" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uid_t" ref="0x1029a0b70"/></typename>
        </type-int>
      </field>
      <field name="si_status" ref="0x1029a68b0" bit-offset="I:160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="si_addr" ref="0x1029a6960" bit-offset="I:192" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="si_value" ref="0x1029a6a10" bit-offset="I:256" size="I:8">
        <type-tag size="I:8" alignment="I:8"><union-ref name="sigval" ref="0x1029a0e40"/></type-tag>
      </field>
      <field name="si_band" ref="0x1029a6ac0" bit-offset="I:320" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__pad" ref="0x1029a6b70" bit-offset="I:384" size="I:56">
        <type-array elements="I:7" size="I:56" alignment="I:8">
          <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8"></type-int>
        </type-array>
      </field>
    </struct>
    <struct name="stat" loc="182:/usr/include/sys/stat.h" ref="0x103169e80" defined="" size="I:144" alignment="I:8">
      <field name="st_dev" ref="0x103165540" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="dev_t" ref="0x102a50df0"/></typename>
        </type-int>
      </field>
      <field name="st_mode" ref="0x1031655f0" bit-offset="I:32" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="mode_t" ref="0x102a4f250"/></typename>
        </type-int>
      </field>
      <field name="st_nlink" ref="0x1031656a0" bit-offset="I:48" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="nlink_t" ref="0x102fd5160"/></typename>
        </type-int>
      </field>
      <field name="st_ino" ref="0x103165750" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__darwin_ino64_t" ref="0x102759460"/></typename>
        </type-int>
      </field>
      <field name="st_uid" ref="0x103165800" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uid_t" ref="0x1029a0b70"/></typename>
        </type-int>
      </field>
      <field name="st_gid" ref="0x1031658b0" bit-offset="I:160" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="gid_t" ref="0x102fd8890"/></typename>
        </type-int>
      </field>
      <field name="st_rdev" ref="0x103165960" bit-offset="I:192" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="dev_t" ref="0x102a50df0"/></typename>
        </type-int>
      </field>
      <field name="st_atimespec" ref="0x103165a10" bit-offset="I:256" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timespec" ref="0x102d3f0e0"/></type-tag>
      </field>
      <field name="st_mtimespec" ref="0x103165ac0" bit-offset="I:384" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timespec" ref="0x102d3f0e0"/></type-tag>
      </field>
      <field name="st_ctimespec" ref="0x103165b70" bit-offset="I:512" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timespec" ref="0x102d3f0e0"/></type-tag>
      </field>
      <field name="st_birthtimespec" ref="0x103165c20" bit-offset="I:640" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timespec" ref="0x102d3f0e0"/></type-tag>
      </field>
      <field name="st_size" ref="0x103165cd0" bit-offset="I:768" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="off_t" ref="0x102c0e1e0"/></typename>
        </type-int>
      </field>
      <field name="st_blocks" ref="0x103165d80" bit-offset="I:832" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="blkcnt_t" ref="0x102fd8020"/></typename>
        </type-int>
      </field>
      <field name="st_blksize" ref="0x103165f30" bit-offset="I:896" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="blksize_t" ref="0x102fd8480"/></typename>
        </type-int>
      </field>
      <field name="st_flags" ref="0x103164020" bit-offset="I:928" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x102750020"/></typename>
        </type-int>
      </field>
      <field name="st_gen" ref="0x1031640d0" bit-offset="I:960" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x102750020"/></typename>
        </type-int>
      </field>
      <field name="st_lspare" ref="0x103164180" bit-offset="I:992" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__int32_t" ref="0x10274fb60"/></typename>
        </type-int>
      </field>
      <field name="st_qspare" ref="0x103164230" bit-offset="I:1024" size="I:16">
        <type-array elements="I:2" size="I:16" alignment="I:8">
          <type-int cname="long long" size="I:8" alignment="I:8">
            <typename><typedef-ref name="__int64_t" ref="0x1027503e0"/></typename>
          </type-int>
        </type-array>
      </field>
    </struct>
    <union loc="150:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x103affd30" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x103afff40" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x103afd020" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x103aff3b0"/></type-tag>
      </field>
    </union>
    <nx_struct name="tossim_footer" loc="14:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimRadioMsg.h" ref="0x102f50020" defined="" size="I:2" alignment="I:1">
      <field name="crc" ref="0x102f504e0" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
          <typename><typedef-ref name="nxle_uint16_t" ref="0x1029041f0"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <union loc="153:/usr/include/netinet6/in6.h" ref="0x103058140" defined="" size="I:16" alignment="I:4">
      <field name="__u6_addr8" ref="0x103058350" bit-offset="I:0" size="I:16">
        <type-array elements="I:16" size="I:16" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="__uint8_t" ref="0x10274f090"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="__u6_addr16" ref="0x103058400" bit-offset="I:0" size="I:16">
        <type-array elements="I:8" size="I:16" alignment="I:2">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="__uint16_t" ref="0x10274f7e0"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="__u6_addr32" ref="0x1030584b0" bit-offset="I:0" size="I:16">
        <type-array elements="I:4" size="I:16" alignment="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="__uint32_t" ref="0x102750020"/></typename>
          </type-int>
        </type-array>
      </field>
    </union>
    <enum loc="43:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h" ref="0x1036b96e0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="sim_packet" loc="59:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_packet.h" ref="0x102f20660" defined="" size="I:0" alignment="I:1">
    </struct>
    <enum loc="51:/Users/ytc/Applications/tinyos-main/tos/types/TinyError.h" ref="0x102d2d490" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="ip6_mtuinfo" loc="544:/usr/include/netinet6/in6.h" ref="0x10304f450" defined="" size="I:32" alignment="I:4">
      <field name="ip6m_addr" ref="0x10304fb00" bit-offset="I:0" size="I:28">
        <type-tag size="I:28" alignment="I:4"><struct-ref name="sockaddr_in6" ref="0x103058990"/></type-tag>
      </field>
      <field name="ip6m_mtu" ref="0x10304fbb0" bit-offset="I:224" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x102770400"/></typename>
        </type-int>
      </field>
    </struct>
    <struct loc="41:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.h" ref="0x1024944d0" defined="" size="I:4" alignment="I:4">
      <field name="notUsed" ref="0x1024946e0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="79:/usr/include/sys/wait.h" ref="0x10294ea00" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="list_entry_s" loc="168:/Users/ytc/Documents/workspace/NewMetricOR/src/simclist.h" ref="0x1031b8700" defined="" size="I:24" alignment="I:8">
      <field name="data" ref="0x1031b70a0" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="next" ref="0x1031b7150" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:24" alignment="I:8"><struct-ref name="list_entry_s" ref="0x1031b8700"/></type-tag>
        </type-pointer>
      </field>
      <field name="prev" ref="0x1031b7200" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:24" alignment="I:8"><struct-ref name="list_entry_s" ref="0x1031b8700"/></type-tag>
        </type-pointer>
      </field>
    </struct>
    <struct loc="73:/Users/ytc/Documents/workspace/NewMetricOR/src/simclist.h" ref="0x1031c11f0" defined="" size="I:40" alignment="I:8">
      <field name="version" ref="0x1031c1400" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x102770020"/></typename>
        </type-int>
      </field>
      <field name="timestamp" ref="0x1031c14b0" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="int64_t" ref="0x10276e7f0"/></typename>
        </type-int>
      </field>
      <field name="list_size" ref="0x1031c1560" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x102770400"/></typename>
        </type-int>
      </field>
      <field name="list_numels" ref="0x1031c1610" bit-offset="I:160" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x102770400"/></typename>
        </type-int>
      </field>
      <field name="list_hash" ref="0x1031c16c0" bit-offset="I:192" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="list_hash_t" ref="0x1031c2090"/></typename>
        </type-int>
      </field>
      <field name="dumpsize" ref="0x1031c1770" bit-offset="I:224" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x102770400"/></typename>
        </type-int>
      </field>
      <field name="consistent" ref="0x1031c1820" bit-offset="I:256" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="__darwin_mcontext_avx64" loc="84:/usr/include/i386/_mcontext.h" ref="0x1029a5020" defined="" size="I:1032" alignment="I:8">
      <field name="__es" ref="0x1029a5b00" bit-offset="I:0" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="__darwin_x86_exception_state64" ref="0x1029953d0"/></type-tag>
      </field>
      <field name="__ss" ref="0x1029a5bb0" bit-offset="I:128" size="I:168">
        <type-tag size="I:168" alignment="I:8"><struct-ref name="__darwin_x86_thread_state64" ref="0x102975a10"/></type-tag>
      </field>
      <field name="__fs" ref="0x1029a5c60" bit-offset="I:1472" size="I:844">
        <type-tag size="I:844" alignment="I:4"><struct-ref name="__darwin_x86_avx_state64" ref="0x1029825b0"/></type-tag>
      </field>
    </struct>
    <struct name="group_req" loc="531:/usr/include/netinet/in.h" ref="0x103043a50" defined="" size="I:136" alignment="I:8">
      <field name="gr_interface" ref="0x1030421c0" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x102770400"/></typename>
        </type-int>
      </field>
      <field name="gr_group" ref="0x103042270" bit-offset="I:64" size="I:128">
        <type-tag size="I:128" alignment="I:8"><struct-ref name="sockaddr_storage" ref="0x103006170"/></type-tag>
      </field>
    </struct>
    <nx_struct name="serial_metadata" loc="136:/Users/ytc/Applications/tinyos-main/tos/lib/serial/Serial.h" ref="0x102f45d90" defined="" size="I:1" alignment="I:1">
      <field name="ack" ref="0x102f44270" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x102901020"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <enum loc="138:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h" ref="0x1036ab880" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="__darwin_mcontext32" loc="38:/usr/include/i386/_mcontext.h" ref="0x10299d1a0" defined="" size="I:600" alignment="I:4">
      <field name="__es" ref="0x10299dc80" bit-offset="I:0" size="I:12">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="__darwin_i386_exception_state" ref="0x102977210"/></type-tag>
      </field>
      <field name="__ss" ref="0x10299dd30" bit-offset="I:96" size="I:64">
        <type-tag size="I:64" alignment="I:4"><struct-ref name="__darwin_i386_thread_state" ref="0x10294b6f0"/></type-tag>
      </field>
      <field name="__fs" ref="0x10299dde0" bit-offset="I:608" size="I:524">
        <type-tag size="I:524" alignment="I:4"><struct-ref name="__darwin_i386_float_state" ref="0x10295dd70"/></type-tag>
      </field>
    </struct>
    <union loc="193:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x103af9b40" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x103af9d50" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x103af9e00" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x103af9410"/></type-tag>
      </field>
    </union>
    <attribute name="atmostonce" loc="97:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/tos.h" ref="0x102c5fbb0" defined="" size="I:0" alignment="I:1">
    </attribute>
    <struct name="overheardcountlistnode" loc="51:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricOR.h" ref="0x102fc5870" defined="" size="I:12" alignment="I:4">
      <field name="nodeid" ref="0x102fc40e0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="overheardcount" ref="0x102fc4190" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="forwardcount" ref="0x102fc4240" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="fpunchhole" loc="428:/usr/include/sys/fcntl.h" ref="0x102fe2d40" defined="" size="I:24" alignment="I:8">
      <field name="fp_flags" ref="0x102fe17e0" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="reserved" ref="0x102fe1890" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="fp_offset" ref="0x102fe1940" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="off_t" ref="0x102c0e1e0"/></typename>
        </type-int>
      </field>
      <field name="fp_length" ref="0x102fe19f0" bit-offset="I:128" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="off_t" ref="0x102c0e1e0"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="sigvec" loc="348:/usr/include/sys/signal.h" ref="0x1029b41a0" defined="" size="I:16" alignment="I:8">
      <field name="sv_handler" ref="0x1029b4dc0" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="sv_mask" ref="0x1029b4e90" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="sv_flags" ref="0x1029b4f40" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="75:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x103abeae0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum name="uio_rw" loc="90:/usr/include/sys/uio.h" ref="0x102fcd790" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="list_attributes_s" loc="177:/Users/ytc/Documents/workspace/NewMetricOR/src/simclist.h" ref="0x1031b7480" defined="" size="I:56" alignment="I:8">
      <field name="comparator" ref="0x1031b6740" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-qualified const="">
                  <type-void size="I:1" alignment="I:1"></type-void>
                </type-qualified>
              </type-pointer>
              <type-pointer size="I:8" alignment="I:8">
                <type-qualified const="">
                  <type-void size="I:1" alignment="I:1"></type-void>
                </type-qualified>
              </type-pointer>
            </function-parameters>
          </type-function>
          <typename><typedef-ref name="element_comparator" ref="0x1031bf730"/></typename>
        </type-pointer>
      </field>
      <field name="seeker" ref="0x1031b67f0" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-qualified const="">
                  <type-void size="I:1" alignment="I:1"></type-void>
                </type-qualified>
              </type-pointer>
              <type-pointer size="I:8" alignment="I:8">
                <type-qualified const="">
                  <type-void size="I:1" alignment="I:1"></type-void>
                </type-qualified>
              </type-pointer>
            </function-parameters>
          </type-function>
          <typename><typedef-ref name="element_seeker" ref="0x1031be650"/></typename>
        </type-pointer>
      </field>
      <field name="meter" ref="0x1031b68a0" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
              <typename><typedef-ref name="size_t" ref="0x102493a60"/></typename>
            </type-int>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-qualified const="">
                  <type-void size="I:1" alignment="I:1"></type-void>
                </type-qualified>
              </type-pointer>
            </function-parameters>
          </type-function>
          <typename><typedef-ref name="element_meter" ref="0x1031bc2a0"/></typename>
        </type-pointer>
      </field>
      <field name="copy_data" ref="0x1031b6950" bit-offset="I:192" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="hasher" ref="0x1031b6a00" bit-offset="I:256" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-int cname="int" size="I:4" alignment="I:4">
              <typename><typedef-ref name="list_hash_t" ref="0x1031c2090"/></typename>
            </type-int>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-qualified const="">
                  <type-void size="I:1" alignment="I:1"></type-void>
                </type-qualified>
              </type-pointer>
            </function-parameters>
          </type-function>
          <typename><typedef-ref name="element_hash_computer" ref="0x1031bce40"/></typename>
        </type-pointer>
      </field>
      <field name="serializer" ref="0x1031b6ab0" bit-offset="I:320" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-pointer size="I:8" alignment="I:8">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-qualified const="">
                  <type-void size="I:1" alignment="I:1"></type-void>
                </type-qualified>
              </type-pointer>
              <type-pointer size="I:8" alignment="I:8">
                <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
                  <typename><typedef-ref name="uint32_t" ref="0x102770400"/></typename>
                </type-int>
              </type-pointer>
            </function-parameters>
          </type-function>
          <typename><typedef-ref name="element_serializer" ref="0x1031bbdd0"/></typename>
        </type-pointer>
      </field>
      <field name="unserializer" ref="0x1031b6b60" bit-offset="I:384" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-pointer size="I:8" alignment="I:8">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-qualified const="">
                  <type-void size="I:1" alignment="I:1"></type-void>
                </type-qualified>
              </type-pointer>
              <type-pointer size="I:8" alignment="I:8">
                <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
                  <typename><typedef-ref name="uint32_t" ref="0x102770400"/></typename>
                </type-int>
              </type-pointer>
            </function-parameters>
          </type-function>
          <typename><typedef-ref name="element_unserializer" ref="0x1031b8050"/></typename>
        </type-pointer>
      </field>
    </struct>
    <struct name="cmsghdr" loc="577:/usr/include/sys/socket.h" ref="0x103027190" defined="" size="I:12" alignment="I:4">
      <field name="cmsg_len" ref="0x103027930" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="socklen_t" ref="0x10300f480"/></typename>
        </type-int>
      </field>
      <field name="cmsg_level" ref="0x1030279e0" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="cmsg_type" ref="0x103027a90" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="rusage_info_v3" loc="250:/usr/include/sys/resource.h" ref="0x1029d7260" defined="" size="I:232" alignment="I:8">
      <field name="ri_uuid" ref="0x1029deb30" bit-offset="I:0" size="I:16">
        <type-array elements="I:16" size="I:16" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="ri_user_time" ref="0x1029debe0" bit-offset="I:128" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_system_time" ref="0x1029dec90" bit-offset="I:192" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_pkg_idle_wkups" ref="0x1029ded40" bit-offset="I:256" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_interrupt_wkups" ref="0x1029dedf0" bit-offset="I:320" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_pageins" ref="0x1029deea0" bit-offset="I:384" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_wired_size" ref="0x1029def50" bit-offset="I:448" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_resident_size" ref="0x1029dd030" bit-offset="I:512" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_phys_footprint" ref="0x1029dd0e0" bit-offset="I:576" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_proc_start_abstime" ref="0x1029dd190" bit-offset="I:640" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_proc_exit_abstime" ref="0x1029dd240" bit-offset="I:704" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_child_user_time" ref="0x1029dd2f0" bit-offset="I:768" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_child_system_time" ref="0x1029dd3a0" bit-offset="I:832" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_child_pkg_idle_wkups" ref="0x1029dd550" bit-offset="I:896" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_child_interrupt_wkups" ref="0x1029dd600" bit-offset="I:960" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_child_pageins" ref="0x1029dd6b0" bit-offset="I:1024" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_child_elapsed_abstime" ref="0x1029dd760" bit-offset="I:1088" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_diskio_bytesread" ref="0x1029dd810" bit-offset="I:1152" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_diskio_byteswritten" ref="0x1029dd8c0" bit-offset="I:1216" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_cpu_time_qos_default" ref="0x1029dd970" bit-offset="I:1280" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_cpu_time_qos_maintenance" ref="0x1029dda20" bit-offset="I:1344" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_cpu_time_qos_background" ref="0x1029ddad0" bit-offset="I:1408" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_cpu_time_qos_utility" ref="0x1029ddb80" bit-offset="I:1472" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_cpu_time_qos_legacy" ref="0x1029ddc30" bit-offset="I:1536" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_cpu_time_qos_user_initiated" ref="0x1029ddce0" bit-offset="I:1600" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_cpu_time_qos_user_interactive" ref="0x1029db020" bit-offset="I:1664" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_billed_system_time" ref="0x1029db0d0" bit-offset="I:1728" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_serviced_system_time" ref="0x1029db180" bit-offset="I:1792" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="63:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_log.c" ref="0x102c65a10" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="_opaque_pthread_rwlockattr_t" loc="98:/usr/include/sys/_pthread/_pthread_types.h" ref="0x102766020" defined="" size="I:24" alignment="I:8">
      <field name="__sig" ref="0x102766690" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__opaque" ref="0x102766740" bit-offset="I:64" size="I:16">
        <type-array elements="I:16" size="I:16" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <struct loc="153:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x103aff3b0" defined="" size="I:1" alignment="I:1">
      <field name="tov0" ref="0x103aff5c0" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="ocf0" ref="0x103aff670" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="tov1" ref="0x103aff720" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="ocf1b" ref="0x103aff7d0" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="ocf1a" ref="0x103aff880" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="icf1" ref="0x103aff930" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="tov2" ref="0x103aff9e0" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="ocf2" ref="0x103affa90" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="hwevent"  loc="NONE" ref="0x102490a90" size="V:" alignment="V:">
    </attribute>
    <struct name="sa_endpoints" loc="300:/usr/include/sys/socket.h" ref="0x10300c1e0" defined="" size="I:40" alignment="I:8">
      <field name="sae_srcif" ref="0x10300b250" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="sae_srcaddr" ref="0x10300b300" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-qualified const="">
            <type-tag size="I:16" alignment="I:1"><struct-ref name="sockaddr" ref="0x10300c650"/></type-tag>
          </type-qualified>
        </type-pointer>
      </field>
      <field name="sae_srcaddrlen" ref="0x10300b3b0" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="socklen_t" ref="0x10300f480"/></typename>
        </type-int>
      </field>
      <field name="sae_dstaddr" ref="0x10300b460" bit-offset="I:192" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-qualified const="">
            <type-tag size="I:16" alignment="I:1"><struct-ref name="sockaddr" ref="0x10300c650"/></type-tag>
          </type-qualified>
        </type-pointer>
      </field>
      <field name="sae_dstaddrlen" ref="0x10300b510" bit-offset="I:256" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="socklen_t" ref="0x10300f480"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="63:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x103ac06b0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="hashtable" ref="0x102c5c210" size="V:" alignment="V:">
    </struct>
    <struct name="heap" loc="61:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/heap.h" ref="0x102cd3690" defined="" size="I:24" alignment="I:8">
      <field name="size" ref="0x102cd3de0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="data" ref="0x102cd3e90" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="private_size" ref="0x102cd3f40" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <attribute name="safe"  loc="NONE" ref="0x102491ce0" size="V:" alignment="V:">
    </attribute>
    <enum loc="152:/usr/include/time.h" ref="0x102d6dce0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="300:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x103ae4290" defined="" size="I:1" alignment="I:1">
      <field name="ocie1c" ref="0x103ae44a0" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="ocie3c" ref="0x103ae4550" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="toie3" ref="0x103ae4600" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="ocie3b" ref="0x103ae46b0" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="ocie3a" ref="0x103ae4760" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="ticie3" ref="0x103ae4810" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0x103ae48c0" bit-offset="I:6" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="sockaddr_in6" loc="170:/usr/include/netinet6/in6.h" ref="0x103058990" defined="" size="I:28" alignment="I:4">
      <field name="sin6_len" ref="0x1030578e0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="__uint8_t" ref="0x10274f090"/></typename>
        </type-int>
      </field>
      <field name="sin6_family" ref="0x103057990" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="sa_family_t" ref="0x10300f020"/></typename>
        </type-int>
      </field>
      <field name="sin6_port" ref="0x103057a40" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="in_port_t" ref="0x102fd60d0"/></typename>
        </type-int>
      </field>
      <field name="sin6_flowinfo" ref="0x103057af0" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x102750020"/></typename>
        </type-int>
      </field>
      <field name="sin6_addr" ref="0x103057ba0" bit-offset="I:64" size="I:16">
        <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x10305a510"/></type-tag>
      </field>
      <field name="sin6_scope_id" ref="0x103057c50" bit-offset="I:192" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x102750020"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="132:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h" ref="0x1036ace80" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="log2phys" loc="473:/usr/include/sys/fcntl.h" ref="0x102fdeb80" defined="" size="I:24" alignment="I:8">
      <field name="l2p_flags" ref="0x103001490" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="l2p_contigbytes" ref="0x103001540" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="off_t" ref="0x102c0e1e0"/></typename>
        </type-int>
      </field>
      <field name="l2p_devoffset" ref="0x1030015f0" bit-offset="I:128" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="off_t" ref="0x102c0e1e0"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="ipv6_mreq" loc="528:/usr/include/netinet6/in6.h" ref="0x103050080" defined="" size="I:20" alignment="I:4">
      <field name="ipv6mr_multiaddr" ref="0x103050790" bit-offset="I:0" size="I:16">
        <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x10305a510"/></type-tag>
      </field>
      <field name="ipv6mr_interface" ref="0x103050840" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="__darwin_i386_avx_state" loc="269:/usr/include/mach/i386/_structs.h" ref="0x102968e80" defined="" size="I:716" alignment="I:4">
      <field name="__fpu_reserved" ref="0x102969e10" bit-offset="I:0" size="I:8">
        <type-array elements="I:2" size="I:8" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </type-array>
      </field>
      <field name="__fpu_fcw" ref="0x102969ec0" bit-offset="I:64" size="I:2">
        <type-tag size="I:2" alignment="I:2"><struct-ref name="__darwin_fp_control" ref="0x102950390"/></type-tag>
      </field>
      <field name="__fpu_fsw" ref="0x102972020" bit-offset="I:80" size="I:2">
        <type-tag size="I:2" alignment="I:2"><struct-ref name="__darwin_fp_status" ref="0x102958930"/></type-tag>
      </field>
      <field name="__fpu_ftw" ref="0x1029720d0" bit-offset="I:96" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="__uint8_t" ref="0x10274f090"/></typename>
        </type-int>
      </field>
      <field name="__fpu_rsrv1" ref="0x102972180" bit-offset="I:104" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="__uint8_t" ref="0x10274f090"/></typename>
        </type-int>
      </field>
      <field name="__fpu_fop" ref="0x102972230" bit-offset="I:112" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10274f7e0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_ip" ref="0x1029722e0" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x102750020"/></typename>
        </type-int>
      </field>
      <field name="__fpu_cs" ref="0x102972390" bit-offset="I:160" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10274f7e0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_rsrv2" ref="0x102972440" bit-offset="I:176" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10274f7e0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_dp" ref="0x1029724f0" bit-offset="I:192" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x102750020"/></typename>
        </type-int>
      </field>
      <field name="__fpu_ds" ref="0x1029725a0" bit-offset="I:224" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10274f7e0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_rsrv3" ref="0x102972650" bit-offset="I:240" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10274f7e0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_mxcsr" ref="0x102972700" bit-offset="I:256" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x102750020"/></typename>
        </type-int>
      </field>
      <field name="__fpu_mxcsrmask" ref="0x1029728b0" bit-offset="I:288" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x102750020"/></typename>
        </type-int>
      </field>
      <field name="__fpu_stmm0" ref="0x102972960" bit-offset="I:320" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x10295ea30"/></type-tag>
      </field>
      <field name="__fpu_stmm1" ref="0x102972a10" bit-offset="I:448" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x10295ea30"/></type-tag>
      </field>
      <field name="__fpu_stmm2" ref="0x102972ac0" bit-offset="I:576" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x10295ea30"/></type-tag>
      </field>
      <field name="__fpu_stmm3" ref="0x102972b70" bit-offset="I:704" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x10295ea30"/></type-tag>
      </field>
      <field name="__fpu_stmm4" ref="0x102972c20" bit-offset="I:832" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x10295ea30"/></type-tag>
      </field>
      <field name="__fpu_stmm5" ref="0x102972cd0" bit-offset="I:960" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x10295ea30"/></type-tag>
      </field>
      <field name="__fpu_stmm6" ref="0x102972d80" bit-offset="I:1088" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x10295ea30"/></type-tag>
      </field>
      <field name="__fpu_stmm7" ref="0x102972e30" bit-offset="I:1216" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x10295ea30"/></type-tag>
      </field>
      <field name="__fpu_xmm0" ref="0x102972ee0" bit-offset="I:1344" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_xmm1" ref="0x102970020" bit-offset="I:1472" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_xmm2" ref="0x1029700d0" bit-offset="I:1600" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_xmm3" ref="0x102970380" bit-offset="I:1728" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_xmm4" ref="0x102970430" bit-offset="I:1856" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_xmm5" ref="0x1029704e0" bit-offset="I:1984" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_xmm6" ref="0x102970590" bit-offset="I:2112" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_xmm7" ref="0x102970640" bit-offset="I:2240" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_rsrv4" ref="0x1029706f0" bit-offset="I:2368" size="I:224">
        <type-array elements="I:224" size="I:224" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__fpu_reserved1" ref="0x1029707a0" bit-offset="I:4160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__avx_reserved1" ref="0x102970850" bit-offset="I:4192" size="I:64">
        <type-array elements="I:64" size="I:64" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__fpu_ymmh0" ref="0x102970900" bit-offset="I:4704" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_ymmh1" ref="0x1029709b0" bit-offset="I:4832" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_ymmh2" ref="0x102970a60" bit-offset="I:4960" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_ymmh3" ref="0x102970b10" bit-offset="I:5088" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_ymmh4" ref="0x102970bc0" bit-offset="I:5216" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_ymmh5" ref="0x102970c70" bit-offset="I:5344" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_ymmh6" ref="0x102970d20" bit-offset="I:5472" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_ymmh7" ref="0x102970dd0" bit-offset="I:5600" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
    </struct>
    <struct name="__darwin_i386_thread_state" loc="43:/usr/include/mach/i386/_structs.h" ref="0x10294b6f0" defined="" size="I:64" alignment="I:4">
      <field name="__eax" ref="0x102952560" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__ebx" ref="0x102952610" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__ecx" ref="0x1029526c0" bit-offset="I:64" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__edx" ref="0x102952770" bit-offset="I:96" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__edi" ref="0x102952820" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__esi" ref="0x1029528d0" bit-offset="I:160" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__ebp" ref="0x102952980" bit-offset="I:192" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__esp" ref="0x102952a30" bit-offset="I:224" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__ss" ref="0x102952ae0" bit-offset="I:256" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__eflags" ref="0x102952b90" bit-offset="I:288" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__eip" ref="0x102952c40" bit-offset="I:320" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__cs" ref="0x102952cf0" bit-offset="I:352" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__ds" ref="0x102952da0" bit-offset="I:384" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__es" ref="0x102952f50" bit-offset="I:416" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__fs" ref="0x102950030" bit-offset="I:448" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__gs" ref="0x1029500e0" bit-offset="I:480" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="__darwin_x86_float_state64" loc="509:/usr/include/mach/i386/_structs.h" ref="0x10297a7d0" defined="" size="I:524" alignment="I:4">
      <field name="__fpu_reserved" ref="0x1029874b0" bit-offset="I:0" size="I:8">
        <type-array elements="I:2" size="I:8" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </type-array>
      </field>
      <field name="__fpu_fcw" ref="0x102987560" bit-offset="I:64" size="I:2">
        <type-tag size="I:2" alignment="I:2"><struct-ref name="__darwin_fp_control" ref="0x102950390"/></type-tag>
      </field>
      <field name="__fpu_fsw" ref="0x102987610" bit-offset="I:80" size="I:2">
        <type-tag size="I:2" alignment="I:2"><struct-ref name="__darwin_fp_status" ref="0x102958930"/></type-tag>
      </field>
      <field name="__fpu_ftw" ref="0x1029876c0" bit-offset="I:96" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="__uint8_t" ref="0x10274f090"/></typename>
        </type-int>
      </field>
      <field name="__fpu_rsrv1" ref="0x102987770" bit-offset="I:104" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="__uint8_t" ref="0x10274f090"/></typename>
        </type-int>
      </field>
      <field name="__fpu_fop" ref="0x102987820" bit-offset="I:112" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10274f7e0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_ip" ref="0x1029878d0" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x102750020"/></typename>
        </type-int>
      </field>
      <field name="__fpu_cs" ref="0x102987980" bit-offset="I:160" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10274f7e0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_rsrv2" ref="0x102987a30" bit-offset="I:176" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10274f7e0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_dp" ref="0x102987ae0" bit-offset="I:192" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x102750020"/></typename>
        </type-int>
      </field>
      <field name="__fpu_ds" ref="0x102987b90" bit-offset="I:224" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10274f7e0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_rsrv3" ref="0x102987c40" bit-offset="I:240" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10274f7e0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_mxcsr" ref="0x102987cf0" bit-offset="I:256" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x102750020"/></typename>
        </type-int>
      </field>
      <field name="__fpu_mxcsrmask" ref="0x102987ea0" bit-offset="I:288" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x102750020"/></typename>
        </type-int>
      </field>
      <field name="__fpu_stmm0" ref="0x102987f50" bit-offset="I:320" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x10295ea30"/></type-tag>
      </field>
      <field name="__fpu_stmm1" ref="0x102985030" bit-offset="I:448" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x10295ea30"/></type-tag>
      </field>
      <field name="__fpu_stmm2" ref="0x1029850e0" bit-offset="I:576" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x10295ea30"/></type-tag>
      </field>
      <field name="__fpu_stmm3" ref="0x102985190" bit-offset="I:704" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x10295ea30"/></type-tag>
      </field>
      <field name="__fpu_stmm4" ref="0x102985240" bit-offset="I:832" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x10295ea30"/></type-tag>
      </field>
      <field name="__fpu_stmm5" ref="0x1029852f0" bit-offset="I:960" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x10295ea30"/></type-tag>
      </field>
      <field name="__fpu_stmm6" ref="0x1029853a0" bit-offset="I:1088" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x10295ea30"/></type-tag>
      </field>
      <field name="__fpu_stmm7" ref="0x102985450" bit-offset="I:1216" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x10295ea30"/></type-tag>
      </field>
      <field name="__fpu_xmm0" ref="0x102985500" bit-offset="I:1344" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_xmm1" ref="0x1029855b0" bit-offset="I:1472" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_xmm2" ref="0x102985660" bit-offset="I:1600" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_xmm3" ref="0x102985910" bit-offset="I:1728" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_xmm4" ref="0x1029859c0" bit-offset="I:1856" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_xmm5" ref="0x102985a70" bit-offset="I:1984" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_xmm6" ref="0x102985b20" bit-offset="I:2112" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_xmm7" ref="0x102985bd0" bit-offset="I:2240" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_xmm8" ref="0x102985c80" bit-offset="I:2368" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_xmm9" ref="0x102985d30" bit-offset="I:2496" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_xmm10" ref="0x102985de0" bit-offset="I:2624" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_xmm11" ref="0x102985e90" bit-offset="I:2752" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_xmm12" ref="0x102985f40" bit-offset="I:2880" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_xmm13" ref="0x102982020" bit-offset="I:3008" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_xmm14" ref="0x1029820d0" bit-offset="I:3136" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_xmm15" ref="0x102982180" bit-offset="I:3264" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_rsrv4" ref="0x102982230" bit-offset="I:3392" size="I:96">
        <type-array elements="I:96" size="I:96" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__fpu_reserved1" ref="0x1029822e0" bit-offset="I:4160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct loc="315:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x103ae0810" defined="" size="I:1" alignment="I:1">
      <field name="ocf1c" ref="0x103ae0a20" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="ocf3c" ref="0x103ae0ad0" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="tov3" ref="0x103ae0b80" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="ocf3b" ref="0x103ae0c30" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="ocf3a" ref="0x103ae0ce0" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="icf3" ref="0x103ae0d90" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0x103ae0e40" bit-offset="I:6" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="__darwin_x86_exception_state64" loc="751:/usr/include/mach/i386/_structs.h" ref="0x1029953d0" defined="" size="I:16" alignment="I:8">
      <field name="__trapno" ref="0x102995e20" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10274f7e0"/></typename>
        </type-int>
      </field>
      <field name="__cpu" ref="0x102995ed0" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10274f7e0"/></typename>
        </type-int>
      </field>
      <field name="__err" ref="0x10299f020" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x102750020"/></typename>
        </type-int>
      </field>
      <field name="__faultvaddr" ref="0x10299f0d0" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x1027507f0"/></typename>
        </type-int>
      </field>
    </struct>
    <struct loc="67:/usr/include/runetype.h" ref="0x102b76290" defined="" size="I:16" alignment="I:8">
      <field name="__nranges" ref="0x102b764a0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__ranges" ref="0x102b76550" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:24" alignment="I:8"><struct-ref ref="0x102b785b0"/>
            <typename><typedef-ref name="_RuneEntry" ref="0x102b78b30"/></typename>
          </type-tag>
        </type-pointer>
      </field>
    </struct>
    <struct name="in6_pktinfo" loc="536:/usr/include/netinet6/in6.h" ref="0x103050a80" defined="" size="I:20" alignment="I:4">
      <field name="ipi6_addr" ref="0x10304f160" bit-offset="I:0" size="I:16">
        <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x10305a510"/></type-tag>
      </field>
      <field name="ipi6_ifindex" ref="0x10304f210" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="211:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x103af7c50" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="tm" loc="74:/usr/include/time.h" ref="0x102d533c0" defined="" size="I:56" alignment="I:8">
      <field name="tm_sec" ref="0x102d527a0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_min" ref="0x102d52850" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_hour" ref="0x102d52900" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_mday" ref="0x102d529b0" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_mon" ref="0x102d52a60" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_year" ref="0x102d52b10" bit-offset="I:160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_wday" ref="0x102d52bc0" bit-offset="I:192" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_yday" ref="0x102d52c70" bit-offset="I:224" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_isdst" ref="0x102d52d20" bit-offset="I:256" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_gmtoff" ref="0x102d52dd0" bit-offset="I:320" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="tm_zone" ref="0x102d52e80" bit-offset="I:384" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
    </struct>
    <struct loc="194:/Users/ytc/Documents/workspace/NewMetricOR/src/simclist.h" ref="0x1031b3680" defined="" size="I:120" alignment="I:8">
      <field name="head_sentinel" ref="0x1031b3890" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:24" alignment="I:8"><struct-ref name="list_entry_s" ref="0x1031b8700"/></type-tag>
        </type-pointer>
      </field>
      <field name="tail_sentinel" ref="0x1031b3940" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:24" alignment="I:8"><struct-ref name="list_entry_s" ref="0x1031b8700"/></type-tag>
        </type-pointer>
      </field>
      <field name="mid" ref="0x1031b39f0" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:24" alignment="I:8"><struct-ref name="list_entry_s" ref="0x1031b8700"/></type-tag>
        </type-pointer>
      </field>
      <field name="numels" ref="0x1031b3aa0" bit-offset="I:192" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="spareels" ref="0x1031b3b50" bit-offset="I:256" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="I:24" alignment="I:8"><struct-ref name="list_entry_s" ref="0x1031b8700"/></type-tag>
          </type-pointer>
        </type-pointer>
      </field>
      <field name="spareelsnum" ref="0x1031b3c00" bit-offset="I:320" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="iter_active" ref="0x1031b3cb0" bit-offset="I:352" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="iter_pos" ref="0x1031b3d60" bit-offset="I:384" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="iter_curentry" ref="0x1031b3e10" bit-offset="I:448" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:24" alignment="I:8"><struct-ref name="list_entry_s" ref="0x1031b8700"/></type-tag>
        </type-pointer>
      </field>
      <field name="attrs" ref="0x1031b3ec0" bit-offset="I:512" size="I:56">
        <type-tag size="I:56" alignment="I:8"><struct-ref name="list_attributes_s" ref="0x1031b7480"/></type-tag>
      </field>
    </struct>
    <union loc="133:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x103b014d0" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x103b016e0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x103b01790" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x103b02ae0"/></type-tag>
      </field>
    </union>
    <struct name="_opaque_pthread_attr_t" loc="63:/usr/include/sys/_pthread/_pthread_types.h" ref="0x1027606f0" defined="" size="I:64" alignment="I:8">
      <field name="__sig" ref="0x102761020" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__opaque" ref="0x1027610d0" bit-offset="I:64" size="I:56">
        <type-array elements="I:56" size="I:56" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <struct name="sim_log_output" loc="51:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_log.c" ref="0x102c68d90" defined="" size="I:16" alignment="I:8">
      <field name="num" ref="0x102c67440" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="files" ref="0x102c674f0" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="I:152" alignment="I:8"><struct-ref name="__sFILE" ref="0x102bb6980"/>
              <typename><typedef-ref name="FILE" ref="0x102bc2930"/></typename>
            </type-tag>
          </type-pointer>
        </type-pointer>
      </field>
    </struct>
    <union loc="76:/usr/include/i386/_types.h" ref="0x102751c10" defined="" size="I:128" alignment="I:8">
      <field name="__mbstate8" ref="0x102751e20" bit-offset="I:0" size="I:128">
        <type-array elements="I:128" size="I:128" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="_mbstateL" ref="0x102751ed0" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
    </union>
    <struct loc="218:/usr/include/sys/wait.h" ref="0x1029eb720" defined="" size="I:4" alignment="I:4">
      <field name="w_Stopval" ref="0x1029eb930" bit-offset="I:0" bit-size="I:8">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="w_Stopsig" ref="0x1029eb9e0" bit-offset="I:8" bit-size="I:8">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="w_Filler" ref="0x1029eba90" bit-offset="I:16" bit-size="I:16">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="sockaddr_in" loc="374:/usr/include/netinet/in.h" ref="0x10304a730" defined="" size="I:16" alignment="I:4">
      <field name="sin_len" ref="0x1030484c0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="__uint8_t" ref="0x10274f090"/></typename>
        </type-int>
      </field>
      <field name="sin_family" ref="0x103048570" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="sa_family_t" ref="0x10300f020"/></typename>
        </type-int>
      </field>
      <field name="sin_port" ref="0x103048620" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="in_port_t" ref="0x102fd60d0"/></typename>
        </type-int>
      </field>
      <field name="sin_addr" ref="0x1030486d0" bit-offset="I:32" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref name="in_addr" ref="0x10304a0c0"/></type-tag>
      </field>
      <field name="sin_zero" ref="0x103048780" bit-offset="I:64" size="I:8">
        <type-array elements="I:8" size="I:8" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <struct name="ip_mreqn" loc="511:/usr/include/netinet/in.h" ref="0x103044020" defined="" size="I:12" alignment="I:4">
      <field name="imr_multiaddr" ref="0x1030448e0" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref name="in_addr" ref="0x10304a0c0"/></type-tag>
      </field>
      <field name="imr_address" ref="0x103044990" bit-offset="I:32" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref name="in_addr" ref="0x10304a0c0"/></type-tag>
      </field>
      <field name="imr_ifindex" ref="0x103044a40" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="radio_stats" loc="109:/Users/ytc/Applications/tinyos-main/tos/lib/serial/Serial.h" ref="0x102f4a5c0" defined="" size="I:18" alignment="I:2">
      <field name="version" ref="0x102f48020" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="flags" ref="0x102f480d0" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="reserved" ref="0x102f48180" bit-offset="I:16" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="platform" ref="0x102f48230" bit-offset="I:24" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="MTU" ref="0x102f482e0" bit-offset="I:32" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x102770020"/></typename>
        </type-int>
      </field>
      <field name="radio_crc_fail" ref="0x102f48390" bit-offset="I:48" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x102770020"/></typename>
        </type-int>
      </field>
      <field name="radio_queue_drops" ref="0x102f48440" bit-offset="I:64" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x102770020"/></typename>
        </type-int>
      </field>
      <field name="serial_crc_fail" ref="0x102f484f0" bit-offset="I:80" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x102770020"/></typename>
        </type-int>
      </field>
      <field name="serial_tx_fail" ref="0x102f485a0" bit-offset="I:96" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x102770020"/></typename>
        </type-int>
      </field>
      <field name="serial_short_packets" ref="0x102f48650" bit-offset="I:112" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x102770020"/></typename>
        </type-int>
      </field>
      <field name="serial_proto_drops" ref="0x102f48700" bit-offset="I:128" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x102770020"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="dmemset" loc="15:/usr/local/lib/ncc/deputy_nodeputy.h" ref="0x10249d080" defined="" size="I:12" alignment="I:4">
      <field name="a1" ref="0x10249d550" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a2" ref="0x10249d600" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a3" ref="0x10249d6b0" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <attribute name="one_nok" loc="14:/usr/local/lib/ncc/deputy_nodeputy.h" ref="0x10249c670" defined="" size="I:4" alignment="I:4">
      <field name="dummy" ref="0x10249c9e0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <struct name="__darwin_mcontext_avx32" loc="46:/usr/include/i386/_mcontext.h" ref="0x10299c0e0" defined="" size="I:792" alignment="I:4">
      <field name="__es" ref="0x10299cbb0" bit-offset="I:0" size="I:12">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="__darwin_i386_exception_state" ref="0x102977210"/></type-tag>
      </field>
      <field name="__ss" ref="0x10299cc60" bit-offset="I:96" size="I:64">
        <type-tag size="I:64" alignment="I:4"><struct-ref name="__darwin_i386_thread_state" ref="0x10294b6f0"/></type-tag>
      </field>
      <field name="__fs" ref="0x10299cd10" bit-offset="I:608" size="I:716">
        <type-tag size="I:716" alignment="I:4"><struct-ref name="__darwin_i386_avx_state" ref="0x102968e80"/></type-tag>
      </field>
    </struct>
    <struct loc="93:/usr/include/stdlib.h" ref="0x102a026e0" defined="" size="I:16" alignment="I:8">
      <field name="quot" ref="0x102a028f0" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="rem" ref="0x102a029a0" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <enum loc="94:/Users/ytc/Applications/tinyos-main/tos/lib/serial/Serial.h" ref="0x102f4c1a0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="flocktimeout" loc="350:/usr/include/sys/fcntl.h" ref="0x102feae60" defined="" size="I:40" alignment="I:8">
      <field name="fl" ref="0x102fe8510" bit-offset="I:0" size="I:24">
        <type-tag size="I:24" alignment="I:8"><struct-ref name="flock" ref="0x102fede60"/></type-tag>
      </field>
      <field name="timeout" ref="0x102fe85c0" bit-offset="I:192" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timespec" ref="0x102d3f0e0"/></type-tag>
      </field>
    </struct>
    <struct name="__sbuf" loc="88:/usr/include/stdio.h" ref="0x102bb7df0" defined="" size="I:16" alignment="I:8">
      <field name="_base" ref="0x102bb63c0" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_size" ref="0x102bb6470" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <attribute name="atleastonce" loc="98:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/tos.h" ref="0x102c5e020" defined="" size="I:0" alignment="I:1">
    </attribute>
    <struct name="_filesec" ref="0x103001820" size="V:" alignment="V:">
    </struct>
    <enum loc="52:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x103ac5380" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="234:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x103af2a40" defined="" size="I:1" alignment="I:1">
      <field name="cs" ref="0x103af2c50" bit-offset="I:0" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="wgm32" ref="0x103af2d00" bit-offset="I:3" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0x103af2db0" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="ices1" ref="0x103af2e60" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="icnc1" ref="0x103af2f10" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
    </struct>
    <struct loc="72:/usr/include/runetype.h" ref="0x102b76e80" defined="" size="I:20" alignment="I:4">
      <field name="__name" ref="0x102b750e0" bit-offset="I:0" size="I:14">
        <type-array elements="I:14" size="I:14" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__mask" ref="0x102b75190" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x102750020"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="fssearchblock" ref="0x1031740c0" size="V:" alignment="V:">
    </struct>
    <struct name="fsignatures" loc="387:/usr/include/sys/fcntl.h" ref="0x102fe6a30" defined="" size="I:24" alignment="I:8">
      <field name="fs_file_start" ref="0x102fe5350" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="off_t" ref="0x102c0e1e0"/></typename>
        </type-int>
      </field>
      <field name="fs_blob_start" ref="0x102fe5400" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="fs_blob_size" ref="0x102fe54b0" bit-offset="I:128" size="I:8">
        <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="size_t" ref="0x102493a60"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="itimerval" loc="91:/usr/include/sys/time.h" ref="0x102d3eba0" defined="" size="I:32" alignment="I:8">
      <field name="it_interval" ref="0x102d3c2c0" bit-offset="I:0" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timeval" ref="0x1029c40e0"/></type-tag>
      </field>
      <field name="it_value" ref="0x102d3c370" bit-offset="I:128" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timeval" ref="0x1029c40e0"/></type-tag>
      </field>
    </struct>
    <enum loc="58:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h" ref="0x1036b72b0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="__sFILEX" ref="0x102bb66a0" size="V:" alignment="V:">
    </struct>
    <struct name="in6_addr" loc="152:/usr/include/netinet6/in6.h" ref="0x10305a510" defined="" size="I:16" alignment="I:4">
      <field name="__u6_addr" ref="0x103058740" bit-offset="I:0" size="I:16">
        <type-tag size="I:16" alignment="I:4"><union-ref ref="0x103058140"/></type-tag>
      </field>
    </struct>
    <union loc="98:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x103ab9020" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x103ab9230" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x103ab92e0" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x103aba770"/></type-tag>
      </field>
    </union>
    <struct name="__sigaction" loc="276:/usr/include/sys/signal.h" ref="0x1029aeb30" defined="" size="I:24" alignment="I:8">
      <field name="__sigaction_u" ref="0x1029b7740" bit-offset="I:0" size="I:8">
        <type-tag size="I:8" alignment="I:8"><union-ref name="__sigaction_u" ref="0x1029af170"/></type-tag>
      </field>
      <field name="sa_tramp" ref="0x1029b77f0" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
              <type-int cname="int" size="I:4" alignment="I:4"></type-int>
              <type-int cname="int" size="I:4" alignment="I:4"></type-int>
              <type-pointer size="I:8" alignment="I:8">
                <type-tag size="I:104" alignment="I:8"><struct-ref name="__siginfo" ref="0x1029a7020"/>
                  <typename><typedef-ref name="siginfo_t" ref="0x1029a6cd0"/></typename>
                </type-tag>
              </type-pointer>
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="sa_mask" ref="0x1029b7900" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="sigset_t" ref="0x1029a0740"/></typename>
        </type-int>
      </field>
      <field name="sa_flags" ref="0x1029b79b0" bit-offset="I:160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <attribute name="count_nok" loc="12:/usr/local/lib/ncc/deputy_nodeputy.h" ref="0x10249b2d0" defined="" size="I:4" alignment="I:4">
      <field name="n" ref="0x10249b610" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <struct name="__darwin_mmst_reg" loc="191:/usr/include/mach/i386/_structs.h" ref="0x10295ea30" defined="" size="I:16" alignment="I:1">
      <field name="__mmst_reg" ref="0x10295d240" bit-offset="I:0" size="I:10">
        <type-array elements="I:10" size="I:10" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__mmst_rsrv" ref="0x10295d2f0" bit-offset="I:80" size="I:6">
        <type-array elements="I:6" size="I:6" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <struct name="sigevent" loc="168:/usr/include/sys/signal.h" ref="0x1029ab700" defined="" size="I:32" alignment="I:8">
      <field name="sigev_notify" ref="0x1029a89e0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="sigev_signo" ref="0x1029a8a90" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="sigev_value" ref="0x1029a8b40" bit-offset="I:64" size="I:8">
        <type-tag size="I:8" alignment="I:8"><union-ref name="sigval" ref="0x1029a0e40"/></type-tag>
      </field>
      <field name="sigev_notify_function" ref="0x1029a8bf0" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-tag size="I:8" alignment="I:8"><union-ref name="sigval" ref="0x1029a0e40"/></type-tag>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="sigev_notify_attributes" ref="0x1029a8cc0" bit-offset="I:192" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:64" alignment="I:8"><struct-ref name="_opaque_pthread_attr_t" ref="0x1027606f0"/>
            <typename><typedef-ref name="pthread_attr_t" ref="0x1029a4550"/></typename>
          </type-tag>
        </type-pointer>
      </field>
    </struct>
    <struct name="rusage_info_v1" loc="208:/usr/include/sys/resource.h" ref="0x1029c9680" defined="" size="I:144" alignment="I:8">
      <field name="ri_uuid" ref="0x1029d2300" bit-offset="I:0" size="I:16">
        <type-array elements="I:16" size="I:16" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="ri_user_time" ref="0x1029d23b0" bit-offset="I:128" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_system_time" ref="0x1029d2460" bit-offset="I:192" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_pkg_idle_wkups" ref="0x1029d2510" bit-offset="I:256" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_interrupt_wkups" ref="0x1029d25c0" bit-offset="I:320" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_pageins" ref="0x1029d2670" bit-offset="I:384" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_wired_size" ref="0x1029d2720" bit-offset="I:448" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_resident_size" ref="0x1029d27d0" bit-offset="I:512" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_phys_footprint" ref="0x1029d2880" bit-offset="I:576" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_proc_start_abstime" ref="0x1029d2930" bit-offset="I:640" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_proc_exit_abstime" ref="0x1029d29e0" bit-offset="I:704" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_child_user_time" ref="0x1029d2a90" bit-offset="I:768" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_child_system_time" ref="0x1029d2b40" bit-offset="I:832" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_child_pkg_idle_wkups" ref="0x1029d2cf0" bit-offset="I:896" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_child_interrupt_wkups" ref="0x1029d2da0" bit-offset="I:960" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_child_pageins" ref="0x1029d2e50" bit-offset="I:1024" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
      <field name="ri_child_elapsed_abstime" ref="0x1029d2f00" bit-offset="I:1088" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="496:/usr/include/sys/fcntl.h" ref="0x103001ed0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="clockinfo" loc="172:/usr/include/sys/time.h" ref="0x102d3a020" defined="" size="I:20" alignment="I:4">
      <field name="hz" ref="0x102d3a9b0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tick" ref="0x102d3aa60" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tickadj" ref="0x102d3ab10" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="stathz" ref="0x102d3abc0" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="profhz" ref="0x102d3ac70" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="fbootstraptransfer" loc="443:/usr/include/sys/fcntl.h" ref="0x102fdfca0" defined="" size="I:24" alignment="I:8">
      <field name="fbt_offset" ref="0x102fde5b0" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="off_t" ref="0x102c0e1e0"/></typename>
        </type-int>
      </field>
      <field name="fbt_length" ref="0x102fde660" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="size_t" ref="0x102493a60"/></typename>
        </type-int>
      </field>
      <field name="fbt_buffer" ref="0x102fde710" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
    </struct>
    <struct loc="101:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x103aba770" defined="" size="I:1" alignment="I:1">
      <field name="cs" ref="0x103aba980" bit-offset="I:0" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="wgm1" ref="0x103abaa30" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="com" ref="0x103abaae0" bit-offset="I:4" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="wgm0" ref="0x103abab90" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="foc" ref="0x103abac40" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="one" loc="13:/usr/local/lib/ncc/deputy_nodeputy.h" ref="0x10249bc30" defined="" size="I:4" alignment="I:4">
      <field name="dummy" ref="0x10249c020" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <union loc="250:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x103aee790" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x103aee9a0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x103aeea50" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x103aee080"/></type-tag>
      </field>
    </union>
    <enum loc="126:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h" ref="0x1036ac480" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="spontaneous"  loc="NONE" ref="0x102491080" size="V:" alignment="V:">
    </attribute>
    <nx_struct name="DataPayload" loc="36:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricOR.h" ref="0x102fc74a0" defined="" size="I:8" alignment="I:1">
      <field name="sourceid" ref="0x102fc7ee0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x102901020"/></typename>
        </type-int>
      </field>
      <field name="hops" ref="0x102fc6020" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x102901020"/></typename>
        </type-int>
      </field>
      <field name="edc" ref="0x102fc60d0" bit-offset="I:16" size="I:4">
        <type-float cname="float" size="I:4" alignment="I:1" network="nx_float">
          <typename><typedef-ref name="nx_float" ref="0x102fadac0"/></typename>
        </type-float>
      </field>
      <field name="index" ref="0x102fc6180" bit-offset="I:48" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x102901740"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <struct name="in_addr" loc="301:/usr/include/netinet/in.h" ref="0x10304a0c0" defined="" size="I:4" alignment="I:4">
      <field name="s_addr" ref="0x10304a4d0" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="in_addr_t" ref="0x102fd8ca0"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="__darwin_x86_debug_state64" loc="771:/usr/include/mach/i386/_structs.h" ref="0x10299f3b0" defined="" size="I:64" alignment="I:8">
      <field name="__dr0" ref="0x10299e9c0" bit-offset="I:0" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x1027507f0"/></typename>
        </type-int>
      </field>
      <field name="__dr1" ref="0x10299ea70" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x1027507f0"/></typename>
        </type-int>
      </field>
      <field name="__dr2" ref="0x10299eb20" bit-offset="I:128" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x1027507f0"/></typename>
        </type-int>
      </field>
      <field name="__dr3" ref="0x10299ebd0" bit-offset="I:192" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x1027507f0"/></typename>
        </type-int>
      </field>
      <field name="__dr4" ref="0x10299ec80" bit-offset="I:256" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x1027507f0"/></typename>
        </type-int>
      </field>
      <field name="__dr5" ref="0x10299ed30" bit-offset="I:320" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x1027507f0"/></typename>
        </type-int>
      </field>
      <field name="__dr6" ref="0x10299ede0" bit-offset="I:384" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x1027507f0"/></typename>
        </type-int>
      </field>
      <field name="__dr7" ref="0x10299ee90" bit-offset="I:448" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x1027507f0"/></typename>
        </type-int>
      </field>
    </struct>
    <union loc="312:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x103b30110" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x103b30320" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x103b303d0" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x103ae0810"/></type-tag>
      </field>
    </union>
    <enum loc="126:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128hardware.h" ref="0x1036bcd00" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="673:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h" ref="0x103639980" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="__darwin_fp_control" loc="89:/usr/include/mach/i386/_structs.h" ref="0x102950390" defined="" size="I:2" alignment="I:2">
      <field name="__invalid" ref="0x102959a50" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__denorm" ref="0x102959b00" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__zdiv" ref="0x102959bb0" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__ovrfl" ref="0x102959c60" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__undfl" ref="0x102959d10" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__precis" ref="0x102959dc0" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__pc" ref="0x102959f10" bit-offset="I:8" bit-size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__rc" ref="0x102958020" bit-offset="I:10" bit-size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
    </struct>
    <attribute name="unsafe"  loc="NONE" ref="0x102493020" size="V:" alignment="V:">
    </attribute>
    <struct name="flock" loc="335:/usr/include/sys/fcntl.h" ref="0x102fede60" defined="" size="I:24" alignment="I:8">
      <field name="l_start" ref="0x102fea930" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="off_t" ref="0x102c0e1e0"/></typename>
        </type-int>
      </field>
      <field name="l_len" ref="0x102fea9e0" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="off_t" ref="0x102c0e1e0"/></typename>
        </type-int>
      </field>
      <field name="l_pid" ref="0x102feaa90" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="pid_t" ref="0x10294c880"/></typename>
        </type-int>
      </field>
      <field name="l_type" ref="0x102feab40" bit-offset="I:160" size="I:2">
        <type-int cname="short" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="l_whence" ref="0x102feabf0" bit-offset="I:176" size="I:2">
        <type-int cname="short" size="I:2" alignment="I:2"></type-int>
      </field>
    </struct>
    <struct name="__darwin_x86_avx_state64" loc="560:/usr/include/mach/i386/_structs.h" ref="0x1029825b0" defined="" size="I:844" alignment="I:4">
      <field name="__fpu_reserved" ref="0x102990200" bit-offset="I:0" size="I:8">
        <type-array elements="I:2" size="I:8" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </type-array>
      </field>
      <field name="__fpu_fcw" ref="0x1029902b0" bit-offset="I:64" size="I:2">
        <type-tag size="I:2" alignment="I:2"><struct-ref name="__darwin_fp_control" ref="0x102950390"/></type-tag>
      </field>
      <field name="__fpu_fsw" ref="0x102990360" bit-offset="I:80" size="I:2">
        <type-tag size="I:2" alignment="I:2"><struct-ref name="__darwin_fp_status" ref="0x102958930"/></type-tag>
      </field>
      <field name="__fpu_ftw" ref="0x102990410" bit-offset="I:96" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="__uint8_t" ref="0x10274f090"/></typename>
        </type-int>
      </field>
      <field name="__fpu_rsrv1" ref="0x1029904c0" bit-offset="I:104" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="__uint8_t" ref="0x10274f090"/></typename>
        </type-int>
      </field>
      <field name="__fpu_fop" ref="0x102990570" bit-offset="I:112" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10274f7e0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_ip" ref="0x102990620" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x102750020"/></typename>
        </type-int>
      </field>
      <field name="__fpu_cs" ref="0x1029906d0" bit-offset="I:160" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10274f7e0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_rsrv2" ref="0x102990780" bit-offset="I:176" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10274f7e0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_dp" ref="0x102990830" bit-offset="I:192" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x102750020"/></typename>
        </type-int>
      </field>
      <field name="__fpu_ds" ref="0x1029908e0" bit-offset="I:224" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10274f7e0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_rsrv3" ref="0x102990990" bit-offset="I:240" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10274f7e0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_mxcsr" ref="0x102990a40" bit-offset="I:256" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x102750020"/></typename>
        </type-int>
      </field>
      <field name="__fpu_mxcsrmask" ref="0x102990bf0" bit-offset="I:288" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x102750020"/></typename>
        </type-int>
      </field>
      <field name="__fpu_stmm0" ref="0x102990ca0" bit-offset="I:320" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x10295ea30"/></type-tag>
      </field>
      <field name="__fpu_stmm1" ref="0x102990d50" bit-offset="I:448" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x10295ea30"/></type-tag>
      </field>
      <field name="__fpu_stmm2" ref="0x102990e00" bit-offset="I:576" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x10295ea30"/></type-tag>
      </field>
      <field name="__fpu_stmm3" ref="0x102990eb0" bit-offset="I:704" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x10295ea30"/></type-tag>
      </field>
      <field name="__fpu_stmm4" ref="0x10298e020" bit-offset="I:832" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x10295ea30"/></type-tag>
      </field>
      <field name="__fpu_stmm5" ref="0x10298e0d0" bit-offset="I:960" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x10295ea30"/></type-tag>
      </field>
      <field name="__fpu_stmm6" ref="0x10298e180" bit-offset="I:1088" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x10295ea30"/></type-tag>
      </field>
      <field name="__fpu_stmm7" ref="0x10298e230" bit-offset="I:1216" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x10295ea30"/></type-tag>
      </field>
      <field name="__fpu_xmm0" ref="0x10298e2e0" bit-offset="I:1344" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_xmm1" ref="0x10298e390" bit-offset="I:1472" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_xmm2" ref="0x10298e440" bit-offset="I:1600" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_xmm3" ref="0x10298e6f0" bit-offset="I:1728" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_xmm4" ref="0x10298e7a0" bit-offset="I:1856" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_xmm5" ref="0x10298e850" bit-offset="I:1984" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_xmm6" ref="0x10298e900" bit-offset="I:2112" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_xmm7" ref="0x10298e9b0" bit-offset="I:2240" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_xmm8" ref="0x10298ea60" bit-offset="I:2368" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_xmm9" ref="0x10298eb10" bit-offset="I:2496" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_xmm10" ref="0x10298ebc0" bit-offset="I:2624" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_xmm11" ref="0x10298ec70" bit-offset="I:2752" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_xmm12" ref="0x10298ed20" bit-offset="I:2880" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_xmm13" ref="0x10298edd0" bit-offset="I:3008" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_xmm14" ref="0x10298ee80" bit-offset="I:3136" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_xmm15" ref="0x10298ef30" bit-offset="I:3264" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_rsrv4" ref="0x102997020" bit-offset="I:3392" size="I:96">
        <type-array elements="I:96" size="I:96" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__fpu_reserved1" ref="0x1029970d0" bit-offset="I:4160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__avx_reserved1" ref="0x102997180" bit-offset="I:4192" size="I:64">
        <type-array elements="I:64" size="I:64" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__fpu_ymmh0" ref="0x102997230" bit-offset="I:4704" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_ymmh1" ref="0x1029972e0" bit-offset="I:4832" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_ymmh2" ref="0x102997390" bit-offset="I:4960" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_ymmh3" ref="0x102997440" bit-offset="I:5088" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_ymmh4" ref="0x1029974f0" bit-offset="I:5216" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_ymmh5" ref="0x1029975a0" bit-offset="I:5344" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_ymmh6" ref="0x102997650" bit-offset="I:5472" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_ymmh7" ref="0x102997700" bit-offset="I:5600" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_ymmh8" ref="0x102997bb0" bit-offset="I:5728" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_ymmh9" ref="0x102997c60" bit-offset="I:5856" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_ymmh10" ref="0x102997d10" bit-offset="I:5984" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_ymmh11" ref="0x102997dc0" bit-offset="I:6112" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_ymmh12" ref="0x102997e70" bit-offset="I:6240" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_ymmh13" ref="0x102997f20" bit-offset="I:6368" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_ymmh14" ref="0x102995020" bit-offset="I:6496" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_ymmh15" ref="0x1029950d0" bit-offset="I:6624" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
    </struct>
    <struct name="__darwin_x86_thread_state64" loc="454:/usr/include/mach/i386/_structs.h" ref="0x102975a10" defined="" size="I:168" alignment="I:8">
      <field name="__rax" ref="0x10297c580" bit-offset="I:0" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x1027507f0"/></typename>
        </type-int>
      </field>
      <field name="__rbx" ref="0x10297c630" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x1027507f0"/></typename>
        </type-int>
      </field>
      <field name="__rcx" ref="0x10297c6e0" bit-offset="I:128" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x1027507f0"/></typename>
        </type-int>
      </field>
      <field name="__rdx" ref="0x10297c790" bit-offset="I:192" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x1027507f0"/></typename>
        </type-int>
      </field>
      <field name="__rdi" ref="0x10297c840" bit-offset="I:256" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x1027507f0"/></typename>
        </type-int>
      </field>
      <field name="__rsi" ref="0x10297c8f0" bit-offset="I:320" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x1027507f0"/></typename>
        </type-int>
      </field>
      <field name="__rbp" ref="0x10297c9a0" bit-offset="I:384" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x1027507f0"/></typename>
        </type-int>
      </field>
      <field name="__rsp" ref="0x10297ca50" bit-offset="I:448" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x1027507f0"/></typename>
        </type-int>
      </field>
      <field name="__r8" ref="0x10297cb00" bit-offset="I:512" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x1027507f0"/></typename>
        </type-int>
      </field>
      <field name="__r9" ref="0x10297cbb0" bit-offset="I:576" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x1027507f0"/></typename>
        </type-int>
      </field>
      <field name="__r10" ref="0x10297cc60" bit-offset="I:640" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x1027507f0"/></typename>
        </type-int>
      </field>
      <field name="__r11" ref="0x10297cd10" bit-offset="I:704" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x1027507f0"/></typename>
        </type-int>
      </field>
      <field name="__r12" ref="0x10297cdc0" bit-offset="I:768" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x1027507f0"/></typename>
        </type-int>
      </field>
      <field name="__r13" ref="0x10297a020" bit-offset="I:832" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x1027507f0"/></typename>
        </type-int>
      </field>
      <field name="__r14" ref="0x10297a0d0" bit-offset="I:896" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x1027507f0"/></typename>
        </type-int>
      </field>
      <field name="__r15" ref="0x10297a180" bit-offset="I:960" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x1027507f0"/></typename>
        </type-int>
      </field>
      <field name="__rip" ref="0x10297a230" bit-offset="I:1024" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x1027507f0"/></typename>
        </type-int>
      </field>
      <field name="__rflags" ref="0x10297a2e0" bit-offset="I:1088" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x1027507f0"/></typename>
        </type-int>
      </field>
      <field name="__cs" ref="0x10297a390" bit-offset="I:1152" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x1027507f0"/></typename>
        </type-int>
      </field>
      <field name="__fs" ref="0x10297a440" bit-offset="I:1216" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x1027507f0"/></typename>
        </type-int>
      </field>
      <field name="__gs" ref="0x10297a4f0" bit-offset="I:1280" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x1027507f0"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="in_pktinfo" loc="612:/usr/include/netinet/in.h" ref="0x10305c710" defined="" size="I:12" alignment="I:4">
      <field name="ipi_ifindex" ref="0x10305a020" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="ipi_spec_dst" ref="0x10305a0d0" bit-offset="I:32" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref name="in_addr" ref="0x10304a0c0"/></type-tag>
      </field>
      <field name="ipi_addr" ref="0x10305a180" bit-offset="I:64" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref name="in_addr" ref="0x10304a0c0"/></type-tag>
      </field>
    </struct>
    <struct name="rusage" loc="152:/usr/include/sys/resource.h" ref="0x1029c3020" defined="" size="I:144" alignment="I:8">
      <field name="ru_utime" ref="0x1029c2e30" bit-offset="I:0" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timeval" ref="0x1029c40e0"/></type-tag>
      </field>
      <field name="ru_stime" ref="0x1029c2ee0" bit-offset="I:128" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timeval" ref="0x1029c40e0"/></type-tag>
      </field>
      <field name="ru_maxrss" ref="0x1029c1020" bit-offset="I:256" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_ixrss" ref="0x1029c10d0" bit-offset="I:320" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_idrss" ref="0x1029c1180" bit-offset="I:384" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_isrss" ref="0x1029c1230" bit-offset="I:448" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_minflt" ref="0x1029c12e0" bit-offset="I:512" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_majflt" ref="0x1029c1390" bit-offset="I:576" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_nswap" ref="0x1029c1440" bit-offset="I:640" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_inblock" ref="0x1029c14f0" bit-offset="I:704" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_oublock" ref="0x1029c15a0" bit-offset="I:768" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_msgsnd" ref="0x1029c1650" bit-offset="I:832" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_msgrcv" ref="0x1029c1700" bit-offset="I:896" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_nsignals" ref="0x1029c18b0" bit-offset="I:960" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_nvcsw" ref="0x1029c1960" bit-offset="I:1024" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_nivcsw" ref="0x1029c1a10" bit-offset="I:1088" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <struct name="list_dump_header_s" loc="1119:/Users/ytc/Documents/workspace/NewMetricOR/src/simclist.h" ref="0x1032101a0" defined="" size="I:40" alignment="I:8">
      <field name="ver" ref="0x10320f160" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x102770020"/></typename>
        </type-int>
      </field>
      <field name="timestamp" ref="0x10320f210" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="int64_t" ref="0x10276e7f0"/></typename>
        </type-int>
      </field>
      <field name="rndterm" ref="0x10320f2c0" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="int32_t" ref="0x10276e420"/></typename>
        </type-int>
      </field>
      <field name="totlistlen" ref="0x10320f370" bit-offset="I:160" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x102770400"/></typename>
        </type-int>
      </field>
      <field name="numels" ref="0x10320f420" bit-offset="I:192" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x102770400"/></typename>
        </type-int>
      </field>
      <field name="elemlen" ref="0x10320f4d0" bit-offset="I:224" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x102770400"/></typename>
        </type-int>
      </field>
      <field name="listhash" ref="0x10320f580" bit-offset="I:256" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="int32_t" ref="0x10276e420"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="rlimit" loc="325:/usr/include/sys/resource.h" ref="0x1029db8c0" defined="" size="I:16" alignment="I:8">
      <field name="rlim_cur" ref="0x1029dbeb0" bit-offset="I:0" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="rlim_t" ref="0x1029c4b90"/></typename>
        </type-int>
      </field>
      <field name="rlim_max" ref="0x1029da020" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="rlim_t" ref="0x1029c4b90"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="__darwin_i386_exception_state" loc="402:/usr/include/mach/i386/_structs.h" ref="0x102977210" defined="" size="I:12" alignment="I:4">
      <field name="__trapno" ref="0x102977c60" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10274f7e0"/></typename>
        </type-int>
      </field>
      <field name="__cpu" ref="0x102977d10" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10274f7e0"/></typename>
        </type-int>
      </field>
      <field name="__err" ref="0x102977dc0" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x102750020"/></typename>
        </type-int>
      </field>
      <field name="__faultvaddr" ref="0x102977e70" bit-offset="I:64" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x102750020"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="sockaddr_storage" loc="437:/usr/include/sys/socket.h" ref="0x103006170" defined="" size="I:128" alignment="I:8">
      <field name="ss_len" ref="0x103004560" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="__uint8_t" ref="0x10274f090"/></typename>
        </type-int>
      </field>
      <field name="ss_family" ref="0x103004610" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="sa_family_t" ref="0x10300f020"/></typename>
        </type-int>
      </field>
      <field name="__ss_pad1" ref="0x1030046c0" bit-offset="I:16" size="I:6">
        <type-array elements="I:6" size="I:6" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__ss_align" ref="0x103004770" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__int64_t" ref="0x1027503e0"/></typename>
        </type-int>
      </field>
      <field name="__ss_pad2" ref="0x103004820" bit-offset="I:128" size="I:112">
        <type-array elements="I:112" size="I:112" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <attribute name="nts" loc="17:/usr/local/lib/ncc/deputy_nodeputy.h" ref="0x10249e980" defined="" size="I:4" alignment="I:4">
      <field name="dummy" ref="0x10249ecf0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <struct name="exception" loc="779:/opt/local/lib/gcc47/gcc/x86_64-apple-darwin16/4.7.4/include-fixed/math.h" ref="0x102b69ca0" defined="" size="I:40" alignment="I:8">
      <field name="type" ref="0x102b686a0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="name" ref="0x102b68750" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="arg1" ref="0x102b68800" bit-offset="I:128" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="arg2" ref="0x102b688b0" bit-offset="I:192" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="retval" ref="0x102b68960" bit-offset="I:256" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
    </struct>
    <struct name="sim_log_channel" loc="56:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_log.c" ref="0x102c679c0" defined="" size="I:24" alignment="I:8">
      <field name="name" ref="0x102c65450" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-qualified const="">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
      <field name="numOutputs" ref="0x102c65500" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="size" ref="0x102c655b0" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="outputs" ref="0x102c65660" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="I:152" alignment="I:8"><struct-ref name="__sFILE" ref="0x102bb6980"/>
              <typename><typedef-ref name="FILE" ref="0x102bc2930"/></typename>
            </type-tag>
          </type-pointer>
        </type-pointer>
      </field>
    </struct>
    <struct name="__darwin_xmm_reg" loc="210:/usr/include/mach/i386/_structs.h" ref="0x10295d590" defined="" size="I:16" alignment="I:1">
      <field name="__xmm_reg" ref="0x10295da80" bit-offset="I:0" size="I:16">
        <type-array elements="I:16" size="I:16" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <struct name="__darwin_pthread_handler_rec" loc="57:/usr/include/sys/_pthread/_pthread_types.h" ref="0x10275f470" defined="" size="I:24" alignment="I:8">
      <field name="__routine" ref="0x1027602e0" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="__arg" ref="0x1027603b0" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__next" ref="0x102760460" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:24" alignment="I:8"><struct-ref name="__darwin_pthread_handler_rec" ref="0x10275f470"/></type-tag>
        </type-pointer>
      </field>
    </struct>
    <attribute name="C"  loc="NONE" ref="0x1024907d0" size="V:" alignment="V:">
    </attribute>
    <struct loc="239:/usr/include/inttypes.h" ref="0x10277c490" defined="" size="I:16" alignment="I:8">
      <field name="quot" ref="0x10277c6a0" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="intmax_t" ref="0x102778630"/></typename>
        </type-int>
      </field>
      <field name="rem" ref="0x10277c750" bit-offset="I:64" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="intmax_t" ref="0x102778630"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="sim_noise_hash_t" loc="64:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_noise.h" ref="0x102d6f0c0" defined="" size="I:488" alignment="I:8">
      <field name="key" ref="0x102d6e020" bit-offset="I:0" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="numElements" ref="0x102d6e0d0" bit-offset="I:160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="size" ref="0x102d6e180" bit-offset="I:192" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="elements" ref="0x102d6e230" bit-offset="I:256" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="flag" ref="0x102d6e2e0" bit-offset="I:320" size="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="dist" ref="0x102d6e390" bit-offset="I:352" size="I:444">
        <type-array elements="I:111" size="I:444" alignment="I:4">
          <type-float cname="float" size="I:4" alignment="I:4"></type-float>
        </type-array>
      </field>
    </struct>
    <struct ref="0x10248b530" size="V:" alignment="V:">
    </struct>
    <struct loc="82:/usr/include/stdlib.h" ref="0x1029f7220" defined="" size="I:8" alignment="I:4">
      <field name="quot" ref="0x1029f7430" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="rem" ref="0x1029f74e0" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="searchstate" ref="0x103174360" size="V:" alignment="V:">
    </struct>
    <union loc="231:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x103af1280" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x103af1490" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x103af1540" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x103af2a40"/></type-tag>
      </field>
    </union>
    <struct loc="136:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x103b02ae0" defined="" size="I:1" alignment="I:1">
      <field name="toie0" ref="0x103b02cf0" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="ocie0" ref="0x103b02da0" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="toie1" ref="0x103b02e50" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="ocie1b" ref="0x103b02f00" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="ocie1a" ref="0x103b01020" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="ticie1" ref="0x103b010d0" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="toie2" ref="0x103b01180" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="ocie2" ref="0x103b01230" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="macro"  loc="NONE" ref="0x1024916b0" size="V:" alignment="V:">
      <field name="macro_name" ref="0x1024918c0" bit-offset="U:" bit-size="U:">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
    </attribute>
    <enum loc="104:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h" ref="0x1036af870" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="_opaque_pthread_rwlock_t" loc="93:/usr/include/sys/_pthread/_pthread_types.h" ref="0x1027655a0" defined="" size="I:200" alignment="I:8">
      <field name="__sig" ref="0x102765c10" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__opaque" ref="0x102765cc0" bit-offset="I:64" size="I:192">
        <type-array elements="I:192" size="I:192" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <union name="sigval" loc="158:/usr/include/sys/signal.h" ref="0x1029a0e40" defined="" size="I:8" alignment="I:8">
      <field name="sival_int" ref="0x1029ab440" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="sival_ptr" ref="0x1029ab4f0" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
    </union>
    <nx_struct name="message_t" loc="14:/Users/ytc/Applications/tinyos-main/tos/types/message.h" ref="0x102f417d0" defined="" size="I:48" alignment="I:1">
      <field name="header" ref="0x102f40a70" bit-offset="I:0" size="I:7">
        <type-array elements="I:7" size="I:7" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x102901020"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="data" ref="0x102f40b20" bit-offset="I:56" size="I:28">
        <type-array elements="I:28" size="I:28" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x102901020"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="footer" ref="0x102f40bd0" bit-offset="I:280" size="I:2">
        <type-array elements="I:2" size="I:2" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x102901020"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="metadata" ref="0x102f40c80" bit-offset="I:296" size="I:11">
        <type-array elements="I:11" size="I:11" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x102901020"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <nx_struct name="tossim_header" loc="6:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimRadioMsg.h" ref="0x102f30ab0" defined="" size="I:7" alignment="I:1">
      <field name="dest" ref="0x102f2f780" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x102f33bb0"/></typename>
        </type-int>
      </field>
      <field name="src" ref="0x102f2f830" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x102f33bb0"/></typename>
        </type-int>
      </field>
      <field name="length" ref="0x102f2f8e0" bit-offset="I:32" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x102901020"/></typename>
        </type-int>
      </field>
      <field name="group" ref="0x102f2f990" bit-offset="I:40" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_group_t" ref="0x102f337a0"/></typename>
        </type-int>
      </field>
      <field name="type" ref="0x102f2fa40" bit-offset="I:48" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_id_t" ref="0x102f33270"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <struct name="_opaque_pthread_condattr_t" loc="73:/usr/include/sys/_pthread/_pthread_types.h" ref="0x102761d40" defined="" size="I:16" alignment="I:8">
      <field name="__sig" ref="0x1027623e0" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__opaque" ref="0x102762490" bit-offset="I:64" size="I:8">
        <type-array elements="I:8" size="I:8" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <struct name="_opaque_pthread_mutex_t" loc="78:/usr/include/sys/_pthread/_pthread_types.h" ref="0x102762730" defined="" size="I:64" alignment="I:8">
      <field name="__sig" ref="0x102762da0" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__opaque" ref="0x102762e50" bit-offset="I:64" size="I:56">
        <type-array elements="I:56" size="I:56" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <struct name="fcodeblobs" loc="370:/usr/include/sys/fcntl.h" ref="0x102fe7130" defined="" size="I:48" alignment="I:8">
      <field name="f_cd_hash" ref="0x102fe6100" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="f_hash_size" ref="0x102fe61b0" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="size_t" ref="0x102493a60"/></typename>
        </type-int>
      </field>
      <field name="f_cd_buffer" ref="0x102fe6260" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="f_cd_size" ref="0x102fe6310" bit-offset="I:192" size="I:8">
        <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="size_t" ref="0x102493a60"/></typename>
        </type-int>
      </field>
      <field name="f_out_size" ref="0x102fe63c0" bit-offset="I:256" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
        </type-pointer>
      </field>
      <field name="f_arch" ref="0x102fe6470" bit-offset="I:320" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__padding" ref="0x102fe6520" bit-offset="I:352" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <union loc="167:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x103afcec0" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x103afb100" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x103afb1b0" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x103afc6a0"/></type-tag>
      </field>
    </union>
    <struct name="msghdr" loc="536:/usr/include/sys/socket.h" ref="0x103004ad0" defined="" size="I:48" alignment="I:8">
      <field name="msg_name" ref="0x103003b00" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="msg_namelen" ref="0x103003bb0" bit-offset="I:64" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="socklen_t" ref="0x10300f480"/></typename>
        </type-int>
      </field>
      <field name="msg_iov" ref="0x103003c60" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:16" alignment="I:8"><struct-ref name="iovec" ref="0x102fceeb0"/></type-tag>
        </type-pointer>
      </field>
      <field name="msg_iovlen" ref="0x103003d10" bit-offset="I:192" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="msg_control" ref="0x103003dc0" bit-offset="I:256" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="msg_controllen" ref="0x103003e70" bit-offset="I:320" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="socklen_t" ref="0x10300f480"/></typename>
        </type-int>
      </field>
      <field name="msg_flags" ref="0x103003f20" bit-offset="I:352" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="fchecklv" loc="403:/usr/include/sys/fcntl.h" ref="0x102fe5960" defined="" size="I:24" alignment="I:8">
      <field name="lv_file_start" ref="0x102fe3360" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="off_t" ref="0x102c0e1e0"/></typename>
        </type-int>
      </field>
      <field name="lv_error_message_size" ref="0x102fe3410" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="size_t" ref="0x102493a60"/></typename>
        </type-int>
      </field>
      <field name="lv_error_message" ref="0x102fe34c0" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
    </struct>
    <struct name="sim_noise_node_t" loc="73:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_noise.h" ref="0x102d6e940" defined="" size="I:80" alignment="I:8">
      <field name="key" ref="0x102d85100" bit-offset="I:0" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="freqKey" ref="0x102d851b0" bit-offset="I:160" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="lastNoiseVal" ref="0x102d85260" bit-offset="I:320" size="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="noiseGenTime" ref="0x102d85310" bit-offset="I:352" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x102770400"/></typename>
        </type-int>
      </field>
      <field name="noiseTable" ref="0x102d853c0" bit-offset="I:384" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="V:" alignment="V:"><struct-ref name="hashtable" ref="0x102c5c210"/></type-tag>
        </type-pointer>
      </field>
      <field name="noiseTrace" ref="0x102d85470" bit-offset="I:448" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="noiseTraceLen" ref="0x102d85520" bit-offset="I:512" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x102770400"/></typename>
        </type-int>
      </field>
      <field name="noiseTraceIndex" ref="0x102d855d0" bit-offset="I:544" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x102770400"/></typename>
        </type-int>
      </field>
      <field name="generated" ref="0x102d85680" bit-offset="I:576" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x102c30190"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="__darwin_i386_float_state" loc="232:/usr/include/mach/i386/_structs.h" ref="0x10295dd70" defined="" size="I:524" alignment="I:4">
      <field name="__fpu_reserved" ref="0x102960340" bit-offset="I:0" size="I:8">
        <type-array elements="I:2" size="I:8" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </type-array>
      </field>
      <field name="__fpu_fcw" ref="0x1029603f0" bit-offset="I:64" size="I:2">
        <type-tag size="I:2" alignment="I:2"><struct-ref name="__darwin_fp_control" ref="0x102950390"/></type-tag>
      </field>
      <field name="__fpu_fsw" ref="0x1029604a0" bit-offset="I:80" size="I:2">
        <type-tag size="I:2" alignment="I:2"><struct-ref name="__darwin_fp_status" ref="0x102958930"/></type-tag>
      </field>
      <field name="__fpu_ftw" ref="0x102960550" bit-offset="I:96" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="__uint8_t" ref="0x10274f090"/></typename>
        </type-int>
      </field>
      <field name="__fpu_rsrv1" ref="0x102960600" bit-offset="I:104" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="__uint8_t" ref="0x10274f090"/></typename>
        </type-int>
      </field>
      <field name="__fpu_fop" ref="0x1029606b0" bit-offset="I:112" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10274f7e0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_ip" ref="0x102960760" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x102750020"/></typename>
        </type-int>
      </field>
      <field name="__fpu_cs" ref="0x102960810" bit-offset="I:160" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10274f7e0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_rsrv2" ref="0x1029608c0" bit-offset="I:176" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10274f7e0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_dp" ref="0x102960970" bit-offset="I:192" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x102750020"/></typename>
        </type-int>
      </field>
      <field name="__fpu_ds" ref="0x102960a20" bit-offset="I:224" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10274f7e0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_rsrv3" ref="0x102960ad0" bit-offset="I:240" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10274f7e0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_mxcsr" ref="0x102960b80" bit-offset="I:256" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x102750020"/></typename>
        </type-int>
      </field>
      <field name="__fpu_mxcsrmask" ref="0x102960d30" bit-offset="I:288" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x102750020"/></typename>
        </type-int>
      </field>
      <field name="__fpu_stmm0" ref="0x102960de0" bit-offset="I:320" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x10295ea30"/></type-tag>
      </field>
      <field name="__fpu_stmm1" ref="0x102960e90" bit-offset="I:448" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x10295ea30"/></type-tag>
      </field>
      <field name="__fpu_stmm2" ref="0x102960f40" bit-offset="I:576" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x10295ea30"/></type-tag>
      </field>
      <field name="__fpu_stmm3" ref="0x102968020" bit-offset="I:704" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x10295ea30"/></type-tag>
      </field>
      <field name="__fpu_stmm4" ref="0x1029680d0" bit-offset="I:832" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x10295ea30"/></type-tag>
      </field>
      <field name="__fpu_stmm5" ref="0x102968180" bit-offset="I:960" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x10295ea30"/></type-tag>
      </field>
      <field name="__fpu_stmm6" ref="0x102968230" bit-offset="I:1088" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x10295ea30"/></type-tag>
      </field>
      <field name="__fpu_stmm7" ref="0x1029682e0" bit-offset="I:1216" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x10295ea30"/></type-tag>
      </field>
      <field name="__fpu_xmm0" ref="0x102968390" bit-offset="I:1344" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_xmm1" ref="0x102968440" bit-offset="I:1472" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_xmm2" ref="0x1029684f0" bit-offset="I:1600" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_xmm3" ref="0x1029687a0" bit-offset="I:1728" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_xmm4" ref="0x102968850" bit-offset="I:1856" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_xmm5" ref="0x102968900" bit-offset="I:1984" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_xmm6" ref="0x1029689b0" bit-offset="I:2112" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_xmm7" ref="0x102968a60" bit-offset="I:2240" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x10295d590"/></type-tag>
      </field>
      <field name="__fpu_rsrv4" ref="0x102968b10" bit-offset="I:2368" size="I:224">
        <type-array elements="I:224" size="I:224" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__fpu_reserved1" ref="0x102968bc0" bit-offset="I:4160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <union loc="120:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x103b05ad0" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x103b05ce0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x103b05d90" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x103b05370"/></type-tag>
      </field>
    </union>
    <enum loc="144:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h" ref="0x1036aa2f0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="_opaque_pthread_mutexattr_t" loc="83:/usr/include/sys/_pthread/_pthread_types.h" ref="0x1027641d0" defined="" size="I:16" alignment="I:8">
      <field name="__sig" ref="0x102764840" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__opaque" ref="0x1027648f0" bit-offset="I:64" size="I:8">
        <type-array elements="I:8" size="I:8" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <struct name="__msfilterreq" loc="549:/usr/include/netinet/in.h" ref="0x103040290" defined="" size="I:152" alignment="I:8">
      <field name="msfr_ifindex" ref="0x10303f300" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x102770400"/></typename>
        </type-int>
      </field>
      <field name="msfr_fmode" ref="0x10303f3b0" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x102770400"/></typename>
        </type-int>
      </field>
      <field name="msfr_nsrcs" ref="0x10303f460" bit-offset="I:64" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x102770400"/></typename>
        </type-int>
      </field>
      <field name="__msfr_align" ref="0x10303f510" bit-offset="I:96" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x102770400"/></typename>
        </type-int>
      </field>
      <field name="msfr_group" ref="0x10303f5c0" bit-offset="I:128" size="I:128">
        <type-tag size="I:128" alignment="I:8"><struct-ref name="sockaddr_storage" ref="0x103006170"/></type-tag>
      </field>
      <field name="msfr_srcs" ref="0x10303f670" bit-offset="I:1152" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:128" alignment="I:8"><struct-ref name="sockaddr_storage" ref="0x103006170"/></type-tag>
        </type-pointer>
      </field>
    </struct>
    <struct name="so_np_extensions" loc="330:/usr/include/sys/socket.h" ref="0x10300a2a0" defined="" size="I:8" alignment="I:4">
      <field name="npx_flags" ref="0x10300a8d0" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="u_int32_t" ref="0x102a43130"/></typename>
        </type-int>
      </field>
      <field name="npx_mask" ref="0x10300a980" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="u_int32_t" ref="0x102a43130"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="__sFILE" loc="122:/usr/include/stdio.h" ref="0x102bb6980" defined="" size="I:152" alignment="I:8">
      <field name="_p" ref="0x102bc4820" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_r" ref="0x102bc48d0" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_w" ref="0x102bc4980" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_flags" ref="0x102bc4a30" bit-offset="I:128" size="I:2">
        <type-int cname="short" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="_file" ref="0x102bc4ae0" bit-offset="I:144" size="I:2">
        <type-int cname="short" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="_bf" ref="0x102bc4b90" bit-offset="I:192" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="__sbuf" ref="0x102bb7df0"/></type-tag>
      </field>
      <field name="_lbfsize" ref="0x102bc4c40" bit-offset="I:320" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_cookie" ref="0x102bc4cf0" bit-offset="I:384" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="_close" ref="0x102bc4da0" bit-offset="I:448" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="_read" ref="0x102bc4e70" bit-offset="I:512" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
              <type-pointer size="I:8" alignment="I:8">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-pointer>
              <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="_seek" ref="0x102bc2020" bit-offset="I:576" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-int cname="long long" size="I:8" alignment="I:8">
              <typename><typedef-ref name="fpos_t" ref="0x102bb7ae0"/></typename>
            </type-int>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
              <type-int cname="long long" size="I:8" alignment="I:8">
                <typename><typedef-ref name="fpos_t" ref="0x102bb7ae0"/></typename>
              </type-int>
              <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="_write" ref="0x102bc2110" bit-offset="I:640" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
              <type-pointer size="I:8" alignment="I:8">
                <type-qualified const="">
                  <type-int cname="char" size="I:1" alignment="I:1"></type-int>
                </type-qualified>
              </type-pointer>
              <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="_ub" ref="0x102bc2200" bit-offset="I:704" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="__sbuf" ref="0x102bb7df0"/></type-tag>
      </field>
      <field name="_extra" ref="0x102bc23b0" bit-offset="I:832" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="V:" alignment="V:"><struct-ref name="__sFILEX" ref="0x102bb66a0"/></type-tag>
        </type-pointer>
      </field>
      <field name="_ur" ref="0x102bc2460" bit-offset="I:896" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_ubuf" ref="0x102bc2510" bit-offset="I:928" size="I:3">
        <type-array elements="I:3" size="I:3" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="_nbuf" ref="0x102bc25c0" bit-offset="I:952" size="I:1">
        <type-array elements="I:1" size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="_lb" ref="0x102bc2670" bit-offset="I:960" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="__sbuf" ref="0x102bb7df0"/></type-tag>
      </field>
      <field name="_blksize" ref="0x102bc2720" bit-offset="I:1088" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_offset" ref="0x102bc27d0" bit-offset="I:1152" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="fpos_t" ref="0x102bb7ae0"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="sockaddr" loc="404:/usr/include/sys/socket.h" ref="0x10300c650" defined="" size="I:16" alignment="I:1">
      <field name="sa_len" ref="0x1030093d0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="__uint8_t" ref="0x10274f090"/></typename>
        </type-int>
      </field>
      <field name="sa_family" ref="0x103009480" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="sa_family_t" ref="0x10300f020"/></typename>
        </type-int>
      </field>
      <field name="sa_data" ref="0x103009530" bit-offset="I:16" size="I:14">
        <type-array elements="I:14" size="I:14" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <enum loc="90:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x103abc7d0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="76:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/tos.h" ref="0x102c30460" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="ostat" loc="110:/usr/include/sys/stat.h" ref="0x10316c020" defined="" size="I:96" alignment="I:8">
      <field name="st_dev" ref="0x1031691c0" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10274f7e0"/></typename>
        </type-int>
      </field>
      <field name="st_ino" ref="0x103169270" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="ino_t" ref="0x102fd64e0"/></typename>
        </type-int>
      </field>
      <field name="st_mode" ref="0x103169320" bit-offset="I:128" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="mode_t" ref="0x102a4f250"/></typename>
        </type-int>
      </field>
      <field name="st_nlink" ref="0x1031693d0" bit-offset="I:144" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="nlink_t" ref="0x102fd5160"/></typename>
        </type-int>
      </field>
      <field name="st_uid" ref="0x103169480" bit-offset="I:160" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10274f7e0"/></typename>
        </type-int>
      </field>
      <field name="st_gid" ref="0x103169530" bit-offset="I:176" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10274f7e0"/></typename>
        </type-int>
      </field>
      <field name="st_rdev" ref="0x1031695e0" bit-offset="I:192" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x10274f7e0"/></typename>
        </type-int>
      </field>
      <field name="st_size" ref="0x103169690" bit-offset="I:224" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__int32_t" ref="0x10274fb60"/></typename>
        </type-int>
      </field>
      <field name="st_atimespec" ref="0x103169740" bit-offset="I:256" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timespec" ref="0x102d3f0e0"/></type-tag>
      </field>
      <field name="st_mtimespec" ref="0x1031697f0" bit-offset="I:384" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timespec" ref="0x102d3f0e0"/></type-tag>
      </field>
      <field name="st_ctimespec" ref="0x1031698a0" bit-offset="I:512" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timespec" ref="0x102d3f0e0"/></type-tag>
      </field>
      <field name="st_blksize" ref="0x103169950" bit-offset="I:640" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__int32_t" ref="0x10274fb60"/></typename>
        </type-int>
      </field>
      <field name="st_blocks" ref="0x103169a00" bit-offset="I:672" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__int32_t" ref="0x10274fb60"/></typename>
        </type-int>
      </field>
      <field name="st_flags" ref="0x103169bb0" bit-offset="I:704" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x102750020"/></typename>
        </type-int>
      </field>
      <field name="st_gen" ref="0x103169c60" bit-offset="I:736" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x102750020"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="atomic_hwevent"  loc="NONE" ref="0x102490d50" size="V:" alignment="V:">
    </attribute>
    <attribute name="dmemcpy" loc="16:/usr/local/lib/ncc/deputy_nodeputy.h" ref="0x10249dd00" defined="" size="I:12" alignment="I:4">
      <field name="a1" ref="0x10249e200" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a2" ref="0x10249e2b0" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a3" ref="0x10249e360" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <struct name="ip_mreq_source" loc="521:/usr/include/netinet/in.h" ref="0x103044ca0" defined="" size="I:12" alignment="I:4">
      <field name="imr_multiaddr" ref="0x1030436c0" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref name="in_addr" ref="0x10304a0c0"/></type-tag>
      </field>
      <field name="imr_sourceaddr" ref="0x103043770" bit-offset="I:32" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref name="in_addr" ref="0x10304a0c0"/></type-tag>
      </field>
      <field name="imr_interface" ref="0x103043820" bit-offset="I:64" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref name="in_addr" ref="0x10304a0c0"/></type-tag>
      </field>
    </struct>
    <enum loc="598:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc" ref="0x102ff2210" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="NewMetricORC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="448:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc" ref="0x1034f66b0" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="NewMetricORC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="419:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc" ref="0x10361a820" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="NewMetricORC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="570:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc" ref="0x1030f3420" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="NewMetricORC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="470:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc" ref="0x1032db620" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="NewMetricORC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="588:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc" ref="0x103056360" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="NewMetricORC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="519:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc" ref="0x1031c65b0" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="NewMetricORC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="431:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc" ref="0x10361b770" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="NewMetricORC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="53:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/SimSchedulerBasicP.nc" ref="0x102f73240" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="156:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc" ref="0x103950e20" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="102:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc" ref="0x1039ac020" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="97:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc" ref="0x1039ab280" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="receive_message" loc="68:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/CpmModelC.nc" ref="0x1039f0160" defined="" scoped="" size="I:64" alignment="I:8">
      <component-ref qname="CpmModelC"/>
      <field name="source" ref="0x1039efc30" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="start" ref="0x1039efce0" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="sim_time_t" ref="0x102c2f320"/></typename>
        </type-int>
      </field>
      <field name="end" ref="0x1039efd90" bit-offset="I:128" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="sim_time_t" ref="0x102c2f320"/></typename>
        </type-int>
      </field>
      <field name="power" ref="0x1039efe40" bit-offset="I:192" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="reversePower" ref="0x1039efef0" bit-offset="I:256" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="strength" ref="0x1039ee020" bit-offset="I:320" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1">
          <typename><typedef-ref name="int8_t" ref="0x10276dcc0"/></typename>
        </type-int>
      </field>
      <field name="lost" ref="0x1039ee0d0" bit-offset="I:328" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x102c30190"/></typename>
        </type-int>
      </field>
      <field name="ack" ref="0x1039ee180" bit-offset="I:336" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x102c30190"/></typename>
        </type-int>
      </field>
      <field name="msg" ref="0x1039ee230" bit-offset="I:384" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
            <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
          </type-tag>
        </type-pointer>
      </field>
      <field name="next" ref="0x1039ee2e0" bit-offset="I:448" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:64" alignment="I:8"><struct-ref name="receive_message" scoped="" ref="0x1039f0160"/>
            <typename><typedef-ref name="receive_message_t" scoped="" ref="0x1039f05d0"/></typename>
          </type-tag>
        </type-pointer>
      </field>
    </struct>
    <enum loc="71:/Users/ytc/Applications/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" ref="0x103cf96b0" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="74:/Users/ytc/Applications/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" ref="0x103cd5210" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="AlarmToTimerC"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="44:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" ref="0x103b38270" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="53:/Users/ytc/Applications/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" ref="0x103ced680" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <struct loc="59:/Users/ytc/Applications/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" ref="0x103cebca0" defined="" scoped="" size="I:12" alignment="I:4">
      <component-ref qname="VirtualizeTimerC"/>
      <field name="t0" ref="0x103cebeb0" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x102770400"/></typename>
        </type-int>
      </field>
      <field name="dt" ref="0x103cea020" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x102770400"/></typename>
        </type-int>
      </field>
      <field name="isoneshot" ref="0x103cea0d0" bit-offset="I:64" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x102c30190"/></typename>
        </type-int>
      </field>
      <field name="isrunning" ref="0x103cea180" bit-offset="I:65" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x102c30190"/></typename>
        </type-int>
      </field>
      <field name="_reserved" ref="0x103cea230" bit-offset="I:66" bit-size="I:6">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x102c30190"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="126:/Users/ytc/Applications/tinyos-main/tos/system/AMQueueImplP.nc" ref="0x103e16b50" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="47:/Users/ytc/Applications/tinyos-main/tos/system/AMQueueP.nc" ref="0x103dae200" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="AMQueueP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="169:/Users/ytc/Applications/tinyos-main/tos/system/AMQueueImplP.nc" ref="0x103daaa30" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <struct loc="55:/Users/ytc/Applications/tinyos-main/tos/system/AMQueueImplP.nc" ref="0x103da3110" defined="" scoped="" size="I:8" alignment="I:8">
      <component-ref qname="AMQueueImplP"/>
      <field name="msg" ref="0x103da3320" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
            <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
          </type-tag>
        </type-pointer>
      </field>
    </struct>
    <enum loc="31:/Users/ytc/Documents/workspace/NewMetricOR/src/NeighborDiscovery/NeighborDiscoveryP.nc" ref="0x103e2f870" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="NeighborDiscoveryP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
  </tags>
  <variables>
    <variable name="randCM" ref="0x102e482a0" loc="39:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/randomlib.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="dummy" ref="0x102ee8090" loc="283:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_noise.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="current_node" ref="0x102d7f7f0" loc="52:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_tossim.c">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="test" ref="0x102e48b90" loc="41:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/randomlib.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="optarg" ref="0x1030f6bd0" loc="510:/usr/include/unistd.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-pointer>
    </variable>
    <variable name="channelTable" ref="0x102c63a50" loc="68:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_log.c">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="V:" alignment="V:"><struct-ref name="hashtable" ref="0x102c5c210"/></type-tag>
      </type-pointer>
    </variable>
    <variable name="noiseData" ref="0x102e78e60" loc="58:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_noise.c">
      <type-array elements="I:1000" size="I:80000" alignment="I:8">
        <type-tag size="I:80" alignment="I:8"><struct-ref name="sim_noise_node_t" ref="0x102d6e940"/>
          <typename><typedef-ref name="sim_noise_node_t" ref="0x102d857e0"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="in6addr_linklocal_allnodes" ref="0x103053020" loc="216:/usr/include/netinet6/in6.h">
      <type-qualified const="">
        <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x10305a510"/></type-tag>
      </type-qualified>
    </variable>
    <variable name="outputs" ref="0x102c635f0" loc="67:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_log.c">
      <type-array elements="I:225" size="I:3600" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="sim_log_output" ref="0x102c68d90"/>
          <typename><typedef-ref name="sim_log_output_t" ref="0x102c67650"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="randU" ref="0x102e4bae0" loc="39:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/randomlib.c">
      <type-array elements="I:97" size="I:776" alignment="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </type-array>
    </variable>
    <variable name="optind" ref="0x1030f4020" loc="511:/usr/include/unistd.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="timezone" ref="0x102d50e10" loc="102:/usr/include/time.h">
      <type-int cname="long" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="eventHeap" ref="0x102d1a8b0" loc="44:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_event_queue.c">
      <documentation loc="33:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_event_queue.h">
        <short>&#10; The event queue is the core of the mote side of TOSSIM.</short>
        <long>&#10; The event queue is the core of the mote side of TOSSIM. It is a&#10; wrapper around the underlying heap. Unlike the 1.x version, it is&#10; not re-entrant: merging the Python console and TOSSIM means that&#10; functionality like packet injection/reception from external tools&#10; is on the Python side.&#10;&#10; @author Phil Levis&#10; @date   November 22 2005&#10;</long>
      </documentation>
      <type-tag size="I:24" alignment="I:8"><struct-ref name="heap" ref="0x102cd3690"/>
        <typename><typedef-ref name="heap_t" ref="0x102cd20d0"/></typename>
      </type-tag>
    </variable>
    <variable name="in6addr_linklocal_allrouters" ref="0x103053560" loc="217:/usr/include/netinet6/in6.h">
      <type-qualified const="">
        <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x10305a510"/></type-tag>
      </type-qualified>
    </variable>
    <variable name="csmaRxTxDelay" ref="0x102ddb4d0" loc="54:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="numCase1" ref="0x102e79880" loc="51:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_noise.c">
      <documentation loc="32:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_noise.h">
        <short>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.&#10;&#10; @author Hyungjune Lee&#10; @date   Oct 13 2006&#10;</long>
      </documentation>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="__stderrp" ref="0x102bc0560" loc="158:/usr/include/stdio.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:152" alignment="I:8"><struct-ref name="__sFILE" ref="0x102bb6980"/>
          <typename><typedef-ref name="FILE" ref="0x102bc2930"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="in6addr_linklocal_allv2routers" ref="0x103053ab0" loc="218:/usr/include/netinet6/in6.h">
      <type-qualified const="">
        <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x10305a510"/></type-tag>
      </type-qualified>
    </variable>
    <variable name="randC" ref="0x102e4bd60" loc="39:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/randomlib.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="FreqKeyNum" ref="0x102e78810" loc="56:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_noise.c">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x102770400"/></typename>
      </type-int>
    </variable>
    <variable name="optreset" ref="0x10316d8b0" loc="770:/usr/include/unistd.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaLow" ref="0x102dc1120" loc="47:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaPreambleLength" ref="0x102dc0020" loc="50:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="numTotal" ref="0x102e78300" loc="53:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_noise.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="daylight" ref="0x102d4f1d0" loc="104:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaExponentBase" ref="0x102dc04f0" loc="51:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="randCD" ref="0x102e48020" loc="39:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/randomlib.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="getdate_err" ref="0x102d50560" loc="100:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="in6addr_any" ref="0x103055090" loc="212:/usr/include/netinet6/in6.h">
      <type-qualified const="">
        <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x10305a510"/></type-tag>
      </type-qualified>
    </variable>
    <variable name="j97" ref="0x102e48840" loc="40:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/randomlib.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="TOS_NODE_ID" ref="0x102c30de0" loc="78:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/tos.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x102770020"/></typename>
      </type-int>
    </variable>
    <variable name="sys_errlist" ref="0x102c29150" loc="459:/usr/include/stdio.h">
      <type-qualified const="">
        <type-array elements="V:" size="V:" alignment="V:">
          <type-qualified const="">
            <type-pointer size="I:8" alignment="I:8">
              <type-qualified const="">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </type-qualified>
        </type-array>
      </type-qualified>
    </variable>
    <variable name="_CurrentRuneLocale" ref="0x102b7f4b0" loc="112:/usr/include/runetype.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:3208" alignment="I:8"><struct-ref ref="0x102b70be0"/>
          <typename><typedef-ref name="_RuneLocale" ref="0x102b81ab0"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="tzname" ref="0x102d501d0" loc="97:/usr/include/time.h">
      <type-array elements="V:" size="V:" alignment="V:">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </type-array>
    </variable>
    <variable name="STARTING_SIZE" ref="0x102cca4a0" loc="58:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/heap.c">
      <type-qualified const="">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-qualified>
    </variable>
    <variable name="opterr" ref="0x1030f42a0" loc="511:/usr/include/unistd.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="=va_arg" ref="0x10248b860"  loc="NONE">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaHigh" ref="0x102dc2c90" loc="46:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaMaxIterations" ref="0x102dc09c0" loc="52:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="atm128RegFile" ref="0x103690ce0" loc="51:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128hardware.h">
      <documentation loc="32:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_tossim.h">
        <short>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-array elements="I:1000" size="I:160000" alignment="I:1">
        <type-array elements="I:160" size="I:160" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
          </type-int>
        </type-array>
      </type-array>
    </variable>
    <variable name="__stdinp" ref="0x102bc2d40" loc="156:/usr/include/stdio.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:152" alignment="I:8"><struct-ref name="__sFILE" ref="0x102bb6980"/>
          <typename><typedef-ref name="FILE" ref="0x102bc2930"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="localNoise" ref="0x102e14020" loc="10:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_gain.c">
      <type-array elements="I:1001" size="I:16016" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="sim_gain_noise" ref="0x102df99a0"/>
          <typename><typedef-ref name="sim_gain_noise_t" ref="0x102df8230"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="csmaInitLow" ref="0x102dc2810" loc="45:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="numCase2" ref="0x102e79dd0" loc="52:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_noise.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="suboptarg" ref="0x102a76d20" loc="735:/usr/include/unistd.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-pointer>
    </variable>
    <variable name="sim_ticks" ref="0x102d7f410" loc="51:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_tossim.c">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0x102c2f320"/></typename>
      </type-int>
    </variable>
    <variable name="in6addr_nodelocal_allnodes" ref="0x103055a90" loc="215:/usr/include/netinet6/in6.h">
      <type-qualified const="">
        <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x10305a510"/></type-tag>
      </type-qualified>
    </variable>
    <variable name="connectivity" ref="0x102df8920" loc="9:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_gain.c">
      <type-array elements="I:1001" size="I:8008" alignment="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:24" alignment="I:8"><struct-ref name="gain_entry" ref="0x102dea510"/>
            <typename><typedef-ref name="gain_entry_t" ref="0x102e05020"/></typename>
          </type-tag>
        </type-pointer>
      </type-array>
    </variable>
    <variable name="sys_nerr" ref="0x102c15c50" loc="458:/usr/include/stdio.h">
      <type-qualified const="">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-qualified>
    </variable>
    <variable name="simTimeBuf" ref="0x102dbe6e0" loc="183:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_tossim.c">
      <type-array elements="I:128" size="I:128" alignment="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-array>
    </variable>
    <variable name="__stdoutp" ref="0x102bc0170" loc="157:/usr/include/stdio.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:152" alignment="I:8"><struct-ref name="__sFILE" ref="0x102bb6980"/>
          <typename><typedef-ref name="FILE" ref="0x102bc2930"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="sim_seed" ref="0x102d7fb70" loc="53:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_tossim.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="sensitivity" ref="0x102e14370" loc="11:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_gain.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="signgam" ref="0x102b6ea10" loc="709:/opt/local/lib/gcc47/gcc/x86_64-apple-darwin16/4.7.4/include-fixed/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaInitHigh" ref="0x102dc2380" loc="44:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="optopt" ref="0x1030f4520" loc="511:/usr/include/unistd.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="_DefaultRuneLocale" ref="0x102b7f020" loc="111:/usr/include/runetype.h">
      <type-tag size="I:3208" alignment="I:8"><struct-ref ref="0x102b70be0"/>
        <typename><typedef-ref name="_RuneLocale" ref="0x102b81ab0"/></typename>
      </type-tag>
    </variable>
    <variable name="csmaAckTime" ref="0x102ddb960" loc="55:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaSymbolsPerSec" ref="0x102dc15f0" loc="48:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaMinFreeSamples" ref="0x102ddb020" loc="53:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="__mb_cur_max" ref="0x102a00020" loc="117:/usr/include/stdlib.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="in6addr_loopback" ref="0x103055560" loc="213:/usr/include/netinet6/in6.h">
      <type-qualified const="">
        <type-tag size="I:16" alignment="I:4"><struct-ref name="in6_addr" ref="0x10305a510"/></type-tag>
      </type-qualified>
    </variable>
    <variable name="csmaBitsPerSymbol" ref="0x102dc1ac0" loc="49:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="i97" ref="0x102e485e0" loc="40:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/randomlib.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="vacantAckOffset" ref="0x10348fbd0" loc="82:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="neighborSet" ref="0x103496c80" loc="66:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-tag size="I:120" alignment="I:8"><struct-ref ref="0x1031b3680"/>
        <typename><typedef-ref name="list_t" ref="0x1031b1090"/></typename>
      </type-tag>
    </variable>
    <variable name="WAKE_PERIOD_MILLI" ref="0x103495a20" loc="69:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="msgreplicacount" ref="0x103495550" loc="68:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="pkt" ref="0x103492020" loc="70:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
        <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
      </type-tag>
    </variable>
    <variable name="index" ref="0x103492a70" loc="73:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x102770020"/></typename>
      </type-int>
    </variable>
    <variable name="lastforwarderid" ref="0x1034903a0" loc="78:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
      </type-int>
    </variable>
    <variable name="flags" ref="0x103492380" loc="71:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
    </variable>
    <variable name="nodeedc" ref="0x1034926f0" loc="72:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-qualified volatile="">
        <type-float cname="float" size="I:4" alignment="I:4"></type-float>
      </type-qualified>
    </variable>
    <variable name="ocl" ref="0x10348d510" loc="85:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-tag size="I:120" alignment="I:8"><struct-ref ref="0x1031b3680"/>
        <typename><typedef-ref name="list_t" ref="0x1031b1090"/></typename>
      </type-tag>
    </variable>
    <variable name="judge" ref="0x1034914b0" loc="75:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x102c30190"/></typename>
      </type-int>
    </variable>
    <variable name="onehopdelay" ref="0x10348d090" loc="83:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-float cname="float" size="I:4" alignment="I:4"></type-float>
    </variable>
    <variable name="forwardBuffer" ref="0x10348f020" loc="80:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:8" alignment="I:1"><nx_struct-ref name="DataPayload" ref="0x102fc74a0"/>
          <typename><typedef-ref name="DataPayload" ref="0x102fc62e0"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="sinkacked" ref="0x103491960" loc="76:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x102c30190"/></typename>
      </type-int>
    </variable>
    <variable name="isForwardRequest" ref="0x103491e60" loc="77:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x102c30190"/></typename>
      </type-int>
    </variable>
    <variable name="sendingdsn" ref="0x103491020" loc="74:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x102770020"/></typename>
      </type-int>
    </variable>
    <variable name="currentForwardingDsn" ref="0x10348f710" loc="81:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x102770020"/></typename>
      </type-int>
    </variable>
    <variable name="shouldAck" ref="0x103490990" loc="79:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-qualified volatile="">
          <typename><typedef-ref name="bool" ref="0x102c30190"/></typename>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
      </type-qualified>
    </variable>
    <variable name="forwardreplicacount" ref="0x103495090" loc="67:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="sim_scheduler_event_pending" ref="0x102f95e60" loc="66:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x102c30190"/></typename>
      </type-int>
    </variable>
    <variable name="m_tail" ref="0x102f95570" loc="60:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
      </type-int>
    </variable>
    <variable name="m_head" ref="0x102f95200" loc="59:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
      </type-int>
    </variable>
    <variable name="m_next" ref="0x102f95a20" loc="61:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-array elements="I:16" size="I:16" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="sim_scheduler_event" ref="0x102f943e0" loc="67:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x102c38020"/>
        <typename><typedef-ref name="sim_event_t" ref="0x102c38410"/></typename>
      </type-tag>
    </variable>
    <variable name="bootEvent" ref="0x10387e290" loc="53:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x102c38020"/>
          <typename><typedef-ref name="sim_event_t" ref="0x102c38410"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="startTime" ref="0x10387fb30" loc="51:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="euid" ref="0x10387f770" loc="50:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="isOn" ref="0x10387fe70" loc="52:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x102c30190"/></typename>
      </type-int>
    </variable>
    <variable name="buffer" ref="0x1038e8250" loc="63:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimActiveMessageC.nc">
      <component-ref qname="TossimActiveMessageC"/>
      <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
        <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
      </type-tag>
    </variable>
    <variable name="bufferPointer" ref="0x1038e8660" loc="64:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimActiveMessageC.nc">
      <component-ref qname="TossimActiveMessageC"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
          <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="sendEvent" ref="0x10393f850" loc="78:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x102c38020"/>
        <typename><typedef-ref name="sim_event_t" ref="0x102c38410"/></typename>
      </type-tag>
    </variable>
    <variable name="initialized" ref="0x10394a290" loc="70:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x102c30190"/></typename>
      </type-int>
    </variable>
    <variable name="error" ref="0x1039be5e0" loc="305:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
      </type-int>
    </variable>
    <variable name="backoffCount" ref="0x10394ac20" loc="72:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
      </type-int>
    </variable>
    <variable name="neededFreeSamples" ref="0x103940020" loc="73:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
      </type-int>
    </variable>
    <variable name="sending" ref="0x1039403f0" loc="74:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
          <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="running" ref="0x10394a730" loc="71:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x102c30190"/></typename>
      </type-int>
    </variable>
    <variable name="receiveBuffer" ref="0x10393fc20" loc="81:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
        <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
      </type-tag>
    </variable>
    <variable name="sendingLength" ref="0x10393f020" loc="76:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
      </type-int>
    </variable>
    <variable name="transmitting" ref="0x103940a60" loc="75:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x102c30190"/></typename>
      </type-int>
    </variable>
    <variable name="destNode" ref="0x10393f4a0" loc="77:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="collision" ref="0x103a03650" loc="226:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x102c30190"/></typename>
      </type-int>
    </variable>
    <variable name="requestAck" ref="0x1039f1020" loc="61:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x102c30190"/></typename>
      </type-int>
    </variable>
    <variable name="receiveEvent" ref="0x103a04d10" loc="223:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x102c38020"/>
        <typename><typedef-ref name="sim_event_t" ref="0x102c38410"/></typename>
      </type-tag>
    </variable>
    <variable name="transmissionEndTime" ref="0x1039f1db0" loc="64:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0x102c2f320"/></typename>
      </type-int>
    </variable>
    <variable name="incomingSource" ref="0x103a01400" loc="228:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="outstandingReceptionHead" ref="0x1039ee6d0" loc="81:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:64" alignment="I:8"><struct-ref name="receive_message" scoped="" ref="0x1039f0160"/>
          <typename><typedef-ref name="receive_message_t" scoped="" ref="0x1039f05d0"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="incoming" ref="0x103a03d70" loc="227:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
          <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="clearThreshold" ref="0x103a030d0" loc="225:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="transmitting" ref="0x1039f1860" loc="63:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x102c30190"/></typename>
      </type-int>
    </variable>
    <variable name="outgoing" ref="0x1039f2c70" loc="60:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
          <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="receiving" ref="0x1039f1390" loc="62:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x102c30190"/></typename>
      </type-int>
    </variable>
    <variable name="group" ref="0x103aa78d0" loc="67:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="am_group_t" ref="0x102f31400"/></typename>
      </type-int>
    </variable>
    <variable name="addr" ref="0x103aa7540" loc="66:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="am_addr_t" ref="0x102f317e0"/></typename>
      </type-int>
    </variable>
    <variable name="set" ref="0x103aa7090" loc="65:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x102c30190"/></typename>
      </type-int>
    </variable>
    <variable name="base" ref="0x103b38020" loc="40:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x102770400"/></typename>
      </type-int>
    </variable>
    <variable name="t0" ref="0x103b39940" loc="39:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x102770400"/></typename>
      </type-int>
    </variable>
    <variable name="set" ref="0x103b395e0" loc="38:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
      </type-int>
    </variable>
    <variable name="dt" ref="0x103b39ba0" loc="39:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x102770400"/></typename>
      </type-int>
    </variable>
    <variable name="oldScale" ref="0x103bbfab0" loc="80:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <documentation loc="76:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
        <short> This variable is needed to keep track of when the underlying&#10;  timer starts, in order to reset lastZero.</short>
        <long> This variable is needed to keep track of when the underlying&#10;  timer starts, in order to reset lastZero. When oldScale is&#10;  AVR_CLOCK_OFF and the scale is set to something else, the&#10;  clock starts ticking. *</long>
      </documentation>
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
      </type-int>
    </variable>
    <variable name="lastZero" ref="0x103bbf5c0" loc="74:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0x102c2f320"/></typename>
      </type-int>
    </variable>
    <variable name="overflow" ref="0x103c67110" loc="480:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x102c38020"/>
          <typename><typedef-ref name="sim_event_t" ref="0x102c38410"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="compare" ref="0x103bf3020" loc="185:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x102c38020"/>
          <typename><typedef-ref name="sim_event_t" ref="0x102c38410"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="savedCounter" ref="0x103bc6c70" loc="58:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
      </type-int>
    </variable>
    <variable name="inOverflow" ref="0x103bc6780" loc="57:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x102c30190"/></typename>
      </type-int>
    </variable>
    <variable name="m_dt" ref="0x103cca7c0" loc="55:/Users/ytc/Applications/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x102770400"/></typename>
      </type-int>
    </variable>
    <variable name="m_oneshot" ref="0x103ccab30" loc="56:/Users/ytc/Applications/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x102c30190"/></typename>
      </type-int>
    </variable>
    <variable name="m_timers_changed" ref="0x103ceac30" loc="69:/Users/ytc/Applications/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x102c30190"/></typename>
      </type-int>
    </variable>
    <variable name="m_timers" ref="0x103cea870" loc="68:/Users/ytc/Applications/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref scoped="" ref="0x103cebca0"/>
          <typename><typedef-ref name="Timer_t" scoped="" ref="0x103cea390"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="current" ref="0x103da3800" loc="59:/Users/ytc/Applications/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
      </type-int>
    </variable>
    <variable name="queue" ref="0x103da2020" loc="60:/Users/ytc/Applications/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-array elements="U:" size="U:" alignment="I:8">
        <type-tag size="I:8" alignment="I:8"><struct-ref scoped="" ref="0x103da3110"/>
          <typename><typedef-ref name="queue_entry_t" scoped="" ref="0x103da3480"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="cancelMask" ref="0x103da28b0" loc="61:/Users/ytc/Applications/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-array elements="U:" size="U:" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="seed" ref="0x103e3f020" loc="52:/Users/ytc/Applications/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x102770400"/></typename>
      </type-int>
    </variable>
    <variable name="initialized" ref="0x103e24450" loc="20:/Users/ytc/Documents/workspace/NewMetricOR/src/NeighborDiscovery/NeighborDiscoveryP.nc">
      <component-ref qname="NeighborDiscoveryP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x102c30190"/></typename>
      </type-int>
    </variable>
    <variable name="probepkt" ref="0x103e240d0" loc="19:/Users/ytc/Documents/workspace/NewMetricOR/src/NeighborDiscovery/NeighborDiscoveryP.nc">
      <component-ref qname="NeighborDiscoveryP"/>
      <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
        <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
      </type-tag>
    </variable>
    <variable name="currentAckedNodeid" ref="0x103e22020" loc="21:/Users/ytc/Documents/workspace/NewMetricOR/src/NeighborDiscovery/NeighborDiscoveryP.nc">
      <component-ref qname="NeighborDiscoveryP"/>
      <type-array elements="I:32" size="I:32" alignment="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-array>
    </variable>
  </variables>
  <constants>
    <constant cst="I:3" name="ACIE" ref="0x103675c40" loc="1075:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="OCDR7" ref="0x10364b020" loc="943:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PB6" ref="0x10366cc80" loc="1132:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TXB81" ref="0x103677340" loc="1058:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:26" name="ATM128_ADC_DIFF_ADC22_1x" ref="0x1036b2d20" loc="85:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:40" name="ATM128_OCR1BL" ref="0x10360cc20" loc="140:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:17" name="ATM128_DDRD" ref="0x1036101c0" loc="81:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TOIE0" ref="0x103663340" loc="786:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PING0" ref="0x103690660" loc="1299:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_FREE_RUNNING_OFF" ref="0x1036ab260" loc="133:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ATM128_WAVE16_PWM_CAPTURE_HIGH" ref="0x103af41e0" loc="222:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:21" name="ATM128_ADC_DIFF_ADC51_1x" ref="0x1036b3b70" loc="80:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="SRL0" ref="0x103632970" loc="705:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ICES3" ref="0x10364fca0" loc="919:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS30" ref="0x10364ec70" loc="924:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINA2" ref="0x10366c020" loc="1126:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINB4" ref="0x103668660" loc="1154:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINC6" ref="0x103664ca0" loc="1182:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ADLAR" ref="0x1036729a0" loc="1093:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PA2" ref="0x103670c20" loc="1106:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WGMA1" ref="0x103655340" loc="876:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WGMB3" ref="0x103651340" loc="902:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="TOS_SERIAL_UNKNOWN_ID" ref="0x102f4b0b0" loc="98:/Users/ytc/Applications/tinyos-main/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="TWA3" ref="0x103635c80" loc="687:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:101" name="FILESEC_ACL_ALLOCSIZE" ref="0x102fffb20" loc="506:/usr/include/sys/fcntl.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM1B1" ref="0x103654020" loc="882:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ADHSM" ref="0x103649c80" loc="961:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="P_ALL" ref="0x10294ebe0" loc="80:/usr/include/sys/wait.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="INT3" ref="0x103629690" loc="763:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ISC31" ref="0x10362e070" loc="730:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINF3" ref="0x103694ca0" loc="1275:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="ATM128_WAVE16_PWM_FAST_COMPARE" ref="0x103af3390" loc="227:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM21" ref="0x103658660" loc="858:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WGM33" ref="0x10364e020" loc="920:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="ATM128_WAVE16_RESERVED" ref="0x103af4bb0" loc="225:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_ADC_SNGL_ADC5" ref="0x1036b6640" loc="64:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="XMM0" ref="0x103630020" loc="714:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:129" name="ATM128_ICR3H" ref="0x103641a50" loc="269:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS2" ref="0x10365b630" loc="839:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:51" name="ATM128_TCCR0" ref="0x103609a90" loc="169:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:134" name="ATM128_OCR3AL" ref="0x10363f710" loc="283:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="FOC1C" ref="0x10364c9a0" loc="939:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WDP1" ref="0x103649330" loc="956:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PB0" ref="0x10366a020" loc="1138:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PC2" ref="0x103666620" loc="1166:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="_CLOCK_UPTIME_RAW" ref="0x102d6a020" loc="162:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PD4" ref="0x1036a1c40" loc="1194:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PE6" ref="0x10369c320" loc="1222:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_RIGHT_ADJUST" ref="0x1036b8b70" loc="52:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_CLK8_DIVIDE_128" ref="0x103ac19b0" loc="58:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM00" ref="0x10365a980" loc="847:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ADPS2" ref="0x103673960" loc="1086:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TWA6" ref="0x103635350" loc="684:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:140" name="ATM128_TCCR3C" ref="0x10363d070" loc="298:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="INT6" ref="0x10362acf0" loc="760:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SRW10" ref="0x10365fc80" loc="817:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="USBS0" ref="0x103680660" loc="1004:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_WAVE16_PWM_FAST_8BIT" ref="0x103af5060" loc="217:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_PORTE" ref="0x103614540" loc="36:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC0" ref="0x10365a020" loc="844:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PIND0" ref="0x10369dca0" loc="1218:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINE2" ref="0x103698340" loc="1246:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WDCE" ref="0x10364a990" loc="953:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADC_PRESCALE_16" ref="0x1036ae980" loc="109:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="ATM128_WAVE16_CTC_CAPTURE" ref="0x103af4890" loc="224:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ICES" ref="0x103651020" loc="901:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:50" name="ATM128_TCNT0" ref="0x103609710" loc="166:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_POWER_ADC_NR" ref="0x1036ba410" loc="128:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="AVR_CLOCK_DIVIDE_8" ref="0x103abd570" loc="78:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_COMPARE_SET" ref="0x103abb480" loc="94:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDA6" ref="0x10366f960" loc="1112:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_CLK8_NORMAL" ref="0x103ac5a40" loc="54:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ISC71" ref="0x10362d9f0" loc="740:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="REFS0" ref="0x103672680" loc="1092:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDF7" ref="0x103696650" loc="1261:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="SERIAL_PROTO_PACKET_UNKNOWN" ref="0x102f4a280" loc="106:/Users/ytc/Applications/tinyos-main/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADCSR" ref="0x1036136f0" loc="47:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:55" name="ATM128_TIMSK" ref="0x103608c50" loc="182:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:46" name="ATM128_TCCR1B" ref="0x10360a8e0" loc="154:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:23" name="NOISE_BIN_SIZE" ref="0x102d72650" loc="56:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="OCDR2" ref="0x10364a020" loc="948:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="UPM00" ref="0x103680340" loc="1003:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="OCIE2" ref="0x103627cc0" loc="779:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCF3C" ref="0x10365f020" loc="811:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="SM2" ref="0x10365e920" loc="821:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOV1" ref="0x103662650" loc="794:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PF0" ref="0x103696320" loc="1258:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="UCSZ10" ref="0x103681660" loc="997:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PG2" ref="0x103692020" loc="1283:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:30" name="ATM128_ADC_SNGL_1_23" ref="0x1036b1a40" loc="89:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_WAVE8_CTC" ref="0x103abc160" loc="85:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:59" name="ATM128_RAMPZ" ref="0x103607aa0" loc="194:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="INTF3" ref="0x103627020" loc="773:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TWWC" ref="0x103636970" loc="679:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="RAMPZ0" ref="0x10362fcc0" loc="727:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="ATM128_ADC_DIFF_ADC10_10x" ref="0x1036b5360" loc="68:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="ATM128_ADC_DIFF_ADC22_10x" ref="0x1036b5d40" loc="71:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:125" name="HDLC_CTLESC_BYTE" ref="0x102f4de60" loc="89:/Users/ytc/Applications/tinyos-main/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="XDIV3" ref="0x10362f020" loc="721:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UPE1" ref="0x10367dc60" loc="1025:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_WAVE16_PWM_FAST_9BIT" ref="0x103af53b0" loc="218:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="FILESEC_GROUP" ref="0x103000580" loc="498:/usr/include/sys/fcntl.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_INT_ENABLE_OFF" ref="0x1036aa670" loc="145:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="EOFF" ref="0x1029d4450" loc="56:/Users/ytc/Applications/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_INT_ENABLE_ON" ref="0x1036aa9b0" loc="146:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:130" name="ATM128_OCR3C" ref="0x103641dd0" loc="272:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDF1" ref="0x103695950" loc="1267:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDG3" ref="0x103692c60" loc="1289:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MPCM1" ref="0x10367c340" loc="1027:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:300" name="WAKE_PERIOD_MILLI_BASE" ref="0x102fc89c0" loc="31:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricOR.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDB0" ref="0x103669950" loc="1148:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDC2" ref="0x103664020" loc="1176:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDD4" ref="0x10369f640" loc="1204:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDE6" ref="0x10369bc60" loc="1232:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCF1B" ref="0x103662340" loc="793:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="FOC3B" ref="0x10364dca0" loc="933:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCIE1A" ref="0x103626660" loc="782:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SPR0" ref="0x103646c60" loc="980:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PE1" ref="0x10369b320" loc="1227:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PF3" ref="0x103697920" loc="1255:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_CLK8_DIVIDE_8" ref="0x103ac5df0" loc="55:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXC0" ref="0x10367c670" loc="1030:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_ACSR" ref="0x1036121c0" loc="54:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADCW" ref="0x1036148b0" loc="39:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:125" name="ATM128_ETIMSK" ref="0x103641020" loc="264:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="XDIV6" ref="0x103630680" loc="718:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_CLK8_DIVIDE_32" ref="0x103ac1230" loc="56:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:100" name="ATM128_DDRG" ref="0x103605020" loc="216:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOIE3" ref="0x103661980" loc="802:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINF1" ref="0x103693340" loc="1277:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PING3" ref="0x103691ca0" loc="1296:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TWS5" ref="0x103633330" loc="696:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS21" ref="0x103658c80" loc="860:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINA5" ref="0x10366d660" loc="1123:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:112" name="ATM128_TWBR" ref="0x103644c50" loc="238:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:67" name="SERIAL_PROTO_ACK" ref="0x102f4b670" loc="103:/Users/ytc/Applications/tinyos-main/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:40" name="ATM128_OCR1B" ref="0x10360c8b0" loc="139:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINB7" ref="0x103669c90" loc="1151:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PA5" ref="0x103670320" loc="1103:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:38" name="ATM128_ICR1" ref="0x10360de00" loc="134:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDA1" ref="0x10366e950" loc="1117:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDB3" ref="0x103669020" loc="1145:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDC5" ref="0x103665640" loc="1173:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDD7" ref="0x1036a0c50" loc="1201:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_FREE_RUNNING_ON" ref="0x1036ab5b0" loc="134:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="NOISE_MIN_TRACE" ref="0x102d715a0" loc="60:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:132" name="ATM128_OCR3BL" ref="0x103640c40" loc="278:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ISC10" ref="0x10362d070" loc="735:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINF6" ref="0x103694340" loc="1272:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDF2" ref="0x103695640" loc="1266:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDG4" ref="0x103692950" loc="1288:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_INT_FLAG_OFF" ref="0x1036abbf0" loc="139:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_CLK8_DIVIDE_1024" ref="0x103ac0240" loc="60:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="ATM128_WAVE16_PWM_FAST_CAPTURE" ref="0x103af3020" loc="226:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS02" ref="0x103659020" loc="849:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WGM00" ref="0x10365a340" loc="845:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM12" ref="0x103650cc0" loc="912:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_POWER_IDLE" ref="0x1036ba070" loc="127:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COMB0" ref="0x103656980" loc="873:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ERESERVE" ref="0x102a51140" loc="60:/Users/ytc/Applications/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:412" name="PROBE_PERIOD_MILLI" ref="0x103e323c0" loc="7:/Users/ytc/Documents/workspace/NewMetricOR/src/NeighborDiscovery/NeighborDiscovery.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRE1" ref="0x10367d340" loc="1022:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="ATM128_ADC_DIFF_ADC01_1x" ref="0x1036b4a90" loc="75:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:144" name="ATM128_UBRR0H" ref="0x10363d400" loc="301:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:154" name="ATM128_UCSR1B" ref="0x10363c3b0" loc="313:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXCIE" ref="0x10367a020" loc="1040:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ADIE" ref="0x103673640" loc="1085:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="JTD" ref="0x10365d340" loc="826:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:120" name="PACKET_DUPLICATE_MILLI" ref="0x102fc8600" loc="30:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricOR.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_ENABLE_OFF" ref="0x1036ade80" loc="121:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:109" name="ATM128_XMCRA" ref="0x103644550" loc="232:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="COM3C1" ref="0x103652020" loc="894:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SPIF" ref="0x103648c80" loc="968:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SRE" ref="0x10365f660" loc="815:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:19" name="ATM128_PINC" ref="0x1036108b0" loc="87:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="SRW01" ref="0x103632c90" loc="706:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINC1" ref="0x1036a2ca0" loc="1187:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PIND3" ref="0x10369d340" loc="1215:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINE5" ref="0x1036999a0" loc="1243:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:56" name="ATM128_EIFR" ref="0x103607020" loc="185:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:53" name="ATM128_MCUCR" ref="0x103608560" loc="176:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="OCDR0" ref="0x10364a660" loc="950:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:136" name="ATM128_TCNT3" ref="0x10363fe00" loc="287:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_ADC_SNGL_ADC2" ref="0x1036b7c20" loc="61:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="ATM128_ADC_DIFF_ADC32_200x" ref="0x1036b4750" loc="74:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDE1" ref="0x10369ac60" loc="1237:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_ADC_PRESCALE_4" ref="0x1036ae340" loc="107:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:49" name="ATM128_OCR0" ref="0x103609390" loc="163:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ISC50" ref="0x10362c9d0" loc="745:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:39" name="ATM128_ICR1H" ref="0x10360c530" loc="136:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="ATM128_ICR3L" ref="0x1036416f0" loc="268:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="INTF1" ref="0x103627660" loc="775:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="EINVAL" ref="0x1029d4a90" loc="58:/Users/ytc/Applications/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ATM128_ADC_DIFF_ADC10_200x" ref="0x1036b5a00" loc="70:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="ATM128_ADC_DIFF_ADC22_200x" ref="0x1036b4400" loc="73:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-115" name="NOISE_MIN" ref="0x102d73020" loc="52:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:25" name="ATM128_ADC_DIFF_ADC12_1x" ref="0x1036b29e0" loc="84:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="SE" ref="0x10365e020" loc="818:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ADSC" ref="0x103674ca0" loc="1082:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="OCDR5" ref="0x10364b660" loc="945:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PB4" ref="0x10366b320" loc="1134:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:43" name="ATM128_OCR1AH" ref="0x10360ba80" loc="146:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:120" name="ATM128_OCR1CL" ref="0x1036421e0" loc="254:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PC6" ref="0x103667960" loc="1162:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_PINF" ref="0x103619a80" loc="27:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:23" name="ATM128_DDRB" ref="0x10360f700" loc="99:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINA0" ref="0x10366c660" loc="1128:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINB2" ref="0x103668ca0" loc="1156:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINC4" ref="0x1036a2340" loc="1184:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ICES1" ref="0x103650680" loc="910:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PIND6" ref="0x10369e990" loc="1212:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TWPS0" ref="0x103632020" loc="700:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TXEN" ref="0x10367ac80" loc="1044:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ01" ref="0x103680980" loc="1005:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PA0" ref="0x10366f320" loc="1108:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="UMSEL1" ref="0x103682680" loc="992:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="INTF6" ref="0x103628680" loc="770:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TWA1" ref="0x103634330" loc="689:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXC1" ref="0x10367d020" loc="1021:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="COM1C1" ref="0x103654660" loc="884:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_TIMER_COMPARE_SET" ref="0x103afa380" loc="189:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="INT1" ref="0x103629cb0" loc="765:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_ENABLE_ON" ref="0x1036ac1b0" loc="122:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_WAVE16_CTC_COMPARE" ref="0x103af6cd0" loc="216:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WGM31" ref="0x103652660" loc="896:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS0" ref="0x10365bc30" loc="841:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXCIE1" ref="0x103678020" loc="1052:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-5" name="NOISE_MAX" ref="0x102d73430" loc="53:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ACME" ref="0x103648020" loc="962:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADCL" ref="0x103613020" loc="43:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC1A" ref="0x10364c360" loc="937:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PC0" ref="0x103666c20" loc="1168:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PD2" ref="0x1036a0320" loc="1196:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2048" name="SLEEP_PERIOD_MILLI" ref="0x102fc8d60" loc="32:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricOR.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PE4" ref="0x10369c920" loc="1224:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PF6" ref="0x103697020" loc="1252:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="MAX_NODE_SIZE" ref="0x103e32730" loc="8:/Users/ytc/Documents/workspace/NewMetricOR/src/NeighborDiscovery/NeighborDiscovery.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ADPS0" ref="0x103672020" loc="1088:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TWA4" ref="0x103635970" loc="686:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="UPM0" ref="0x103645640" loc="985:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:18" name="ATM128_ADC_DIFF_ADC21_1x" ref="0x1036b31b0" loc="77:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:139" name="ATM128_TCCR3A" ref="0x10363ec70" loc="295:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_COMPARE_OFF" ref="0x103abcb10" loc="91:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="NOISE_DEFAULT_ELEMENT_SIZE" ref="0x102d72db0" loc="58:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_CLK16_EXTERNAL_RISE" ref="0x103abe650" loc="71:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:21" name="ATM128_PORTC" ref="0x10360f020" loc="93:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="RXB80" ref="0x103676980" loc="1067:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINE0" ref="0x103698980" loc="1248:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS00" ref="0x103659640" loc="851:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS12" ref="0x10364f020" loc="913:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:60" name="ATM128_XDIV" ref="0x103607e10" loc="197:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ICNC" ref="0x103652cb0" loc="900:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRIE0" ref="0x103677cc0" loc="1063:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDA4" ref="0x10366e020" loc="1114:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SPMEN" ref="0x10362a6b0" loc="756:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDB6" ref="0x10366a660" loc="1142:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ISC01" ref="0x10362d390" loc="736:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDF5" ref="0x103696c70" loc="1263:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="BLBSET" ref="0x10362bd10" loc="753:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="FOCC" ref="0x10364d640" loc="929:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PGWRT" ref="0x10362a070" loc="754:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="COMA1" ref="0x103656020" loc="870:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:111" name="ATM128_OSCCAL" ref="0x1036448e0" loc="235:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="UPM10" ref="0x103682cc0" loc="994:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="AS0" ref="0x103657340" loc="864:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:98" name="ATM128_PORTF" ref="0x1036068f0" loc="210:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="UCPOL1" ref="0x103681980" loc="998:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TXEN1" ref="0x103678980" loc="1055:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCIE0" ref="0x103663020" loc="785:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ACBG" ref="0x103675330" loc="1072:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCF3A" ref="0x103660670" loc="808:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="SM0" ref="0x10365e620" loc="820:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PG0" ref="0x103692620" loc="1285:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:149" name="ATM128_UCSR0C" ref="0x10363d790" loc="304:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:45" name="ATM128_TCNT1H" ref="0x10360a550" loc="151:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:136" name="ATM128_TCNT3L" ref="0x10363e1e0" loc="288:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WDE" ref="0x10364ac90" loc="954:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ADFR" ref="0x103673020" loc="1083:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="MUX1" ref="0x103671640" loc="1097:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:24" name="ATM128_ADC_DIFF_ADC02_1x" ref="0x1036b26a0" loc="83:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_ADC_PRESCALE_32" ref="0x1036aeca0" loc="110:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="COM3A0" ref="0x103653680" loc="891:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="XDIV1" ref="0x10362f660" loc="723:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ2" ref="0x103679340" loc="1046:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:134" name="ATM128_OCR3A" ref="0x10363f3a0" loc="282:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:156" name="ATM128_UDR1" ref="0x10363cab0" loc="319:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDG1" ref="0x103691330" loc="1291:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="FALSE" ref="0x102c30700" loc="76:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/tos.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="EBUSY" ref="0x1029d4770" loc="57:/Users/ytc/Applications/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32768" name="ATM128_TIMER0_TICKSPPS" ref="0x1036a6750" loc="61:/Users/ytc/Applications/tinyos-main/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="_CLOCK_MONOTONIC_RAW_APPROX" ref="0x102d6bba0" loc="160:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDC0" ref="0x103664640" loc="1178:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDD2" ref="0x10369fc60" loc="1206:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDE4" ref="0x10369a330" loc="1234:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:30" name="CHANNEL_BANDGAP" ref="0x1036a6020" loc="58:/Users/ytc/Applications/tinyos-main/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCIE3C" ref="0x103661ca0" loc="803:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_CLK16_OFF" ref="0x103ac09e0" loc="64:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ISC41" ref="0x10362ccf0" loc="746:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TWGCE" ref="0x103634960" loc="691:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CSB1" ref="0x103651c80" loc="905:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="MUX4" ref="0x103672cb0" loc="1094:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_POWER_EXT_STANDBY" ref="0x1036ba7f0" loc="129:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DOR0" ref="0x10367b330" loc="1034:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOIE1" ref="0x103626ca0" loc="784:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="DEFAULT_CHANNEL_SIZE" ref="0x102c68a30" loc="48:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_log.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_DDRE" ref="0x1036141c0" loc="33:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PB7" ref="0x10366c980" loc="1131:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PING1" ref="0x103690340" loc="1298:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_WAVE8_PWM_FAST" ref="0x103abc480" loc="86:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_COMPARE_CLEAR" ref="0x103abb180" loc="93:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TWS3" ref="0x103633950" loc="698:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="SRL1" ref="0x103632660" loc="704:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS31" ref="0x10364e960" loc="923:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:116" name="ATM128_TWCR" ref="0x103643a70" loc="250:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="_CLOCK_MONOTONIC_RAW" ref="0x102d6b7b0" loc="158:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINA3" ref="0x10366dca0" loc="1125:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINB5" ref="0x103668340" loc="1153:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINC7" ref="0x103664980" loc="1181:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="CPOL" ref="0x103646330" loc="977:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SPE" ref="0x103647970" loc="974:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PA3" ref="0x103670920" loc="1105:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:17" name="ATM128_ADC_DIFF_ADC11_1x" ref="0x1036b4dd0" loc="76:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:115" name="ATM128_TWDR" ref="0x103643700" loc="247:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="COM1A0" ref="0x103655cc0" loc="881:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="INT4" ref="0x103629380" loc="762:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:130" name="ATM128_OCR3CL" ref="0x1036401e0" loc="273:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:135" name="ATM128_OCR3AH" ref="0x10363fa80" loc="284:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ISC20" ref="0x10362e9d0" loc="733:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINF4" ref="0x103694980" loc="1274:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WGM10" ref="0x103653020" loc="887:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADC_SNGL_ADC6" ref="0x1036b6950" loc="65:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="XMM1" ref="0x103631c90" loc="713:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="COMC0" ref="0x103655020" loc="875:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="NOISE_QUANTIZE_INTERVAL" ref="0x102d73c70" loc="55:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PB1" ref="0x10366bc20" loc="1137:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PC3" ref="0x103666320" loc="1165:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="WDP2" ref="0x103649020" loc="955:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PD5" ref="0x1036a1940" loc="1193:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PE7" ref="0x10369c020" loc="1221:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:152" name="ATM128_UBRR1H" ref="0x10363db20" loc="307:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM01" ref="0x10365a660" loc="846:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:52" name="ATM128_MCUSR" ref="0x103609e10" loc="172:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TICIE3" ref="0x103661020" loc="799:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WDRF" ref="0x10365d960" loc="828:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WGM0" ref="0x10365c960" loc="835:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RWWSRE" ref="0x10362b9f0" loc="752:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRIE" ref="0x10367a660" loc="1042:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="INT7" ref="0x10362a9e0" loc="759:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FE0" ref="0x10367b020" loc="1033:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_CLK16_DIVIDE_1024" ref="0x103abfda0" loc="69:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="SRW11" ref="0x103631340" loc="708:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:25" name="ATM128_PINA" ref="0x10360fdf0" loc="105:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="USBS1" ref="0x103681020" loc="995:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PIND1" ref="0x10369d980" loc="1217:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINE3" ref="0x103698020" loc="1245:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TWSTA" ref="0x103636340" loc="677:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TWIE" ref="0x103635020" loc="681:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="FILESEC_UUID" ref="0x1030008e0" loc="499:/usr/include/sys/fcntl.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:44" name="ATM128_TCNT1" ref="0x10360be00" loc="149:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_SNGL_ADC0" ref="0x1036b7600" loc="59:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_PRESCALE_2" ref="0x1036afbd0" loc="105:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDA7" ref="0x10366f650" loc="1111:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:31" name="CHANNEL_GND" ref="0x1036a6370" loc="59:/Users/ytc/Applications/tinyos-main/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ISC60" ref="0x10362c390" loc="743:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="REFS1" ref="0x103672360" loc="1091:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ATM128_ADC_DIFF_ADC00_200x" ref="0x1036b56b0" loc="69:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXCIE0" ref="0x103677680" loc="1061:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_ADC_PRESCALE_128" ref="0x1036ad350" loc="112:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:23" name="ATM128_ADC_DIFF_ADC71_1x" ref="0x1036b2360" loc="82:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:122" name="ATM128_TCCR1C" ref="0x1036428e0" loc="258:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCDR3" ref="0x10364bca0" loc="947:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:41" name="ATM128_OCR1BH" ref="0x10360b020" loc="141:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UPM01" ref="0x103680020" loc="1002:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PB2" ref="0x10366b920" loc="1136:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PC4" ref="0x103666020" loc="1164:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PD6" ref="0x1036a1640" loc="1192:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TOV2" ref="0x103663980" loc="790:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PF1" ref="0x103696020" loc="1257:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PG3" ref="0x103693c80" loc="1282:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ11" ref="0x103681340" loc="996:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="INTF4" ref="0x103628cc0" loc="772:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="ATM128_SPCR" ref="0x103611390" loc="69:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="XDIV4" ref="0x103630cc0" loc="720:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TWEN" ref="0x103636c80" loc="680:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXC" ref="0x10367f640" loc="1011:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:48" name="ATM128_ASSR" ref="0x103609020" loc="160:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_POWER_SAVE" ref="0x1036bab80" loc="130:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_WAVE16_NORMAL" ref="0x103af6020" loc="212:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDB1" ref="0x103669640" loc="1147:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDC3" ref="0x103665c60" loc="1175:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDD5" ref="0x10369f330" loc="1203:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDE7" ref="0x10369b950" loc="1231:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="OCF1C" ref="0x10365f340" loc="812:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="FOC3C" ref="0x10364c020" loc="934:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PD0" ref="0x1036a0920" loc="1198:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCIE1B" ref="0x103626980" loc="783:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="SPR1" ref="0x103646950" loc="979:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PE2" ref="0x10369b020" loc="1226:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PF4" ref="0x103697620" loc="1254:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:33" name="ATM128_WDTCR" ref="0x10360ec60" loc="119:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="UMSEL" ref="0x103645020" loc="983:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM20" ref="0x103658340" loc="857:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RXEN0" ref="0x103676020" loc="1064:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CHANNEL_THERMISTOR" ref="0x1036a77e0" loc="56:/Users/ytc/Applications/tinyos-main/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_CLK16_NORMAL" ref="0x103ac0d80" loc="65:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="XMBK" ref="0x103631670" loc="711:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXC1" ref="0x10367ec60" loc="1020:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ICF3" ref="0x103660350" loc="807:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:57" name="ATM128_EIMSK" ref="0x1036073a0" loc="188:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ENOMEM" ref="0x102a517a0" loc="62:/Users/ytc/Applications/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:27" name="ATM128_PORTA" ref="0x10360e540" loc="111:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TWS6" ref="0x103633020" loc="695:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS22" ref="0x103658970" loc="859:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS10" ref="0x10364f640" loc="915:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ICNC3" ref="0x10364f980" loc="918:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ACIS0" ref="0x103674660" loc="1078:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:120" name="ATM128_OCR1C" ref="0x103643df0" loc="253:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINA6" ref="0x10366d340" loc="1122:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="ATM128_ADC_DIFF_ADC32_10x" ref="0x1036b40b0" loc="72:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:106" name="ATM128_EICRA" ref="0x103605e10" loc="226:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRE" ref="0x10367f950" loc="1012:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ACI" ref="0x103675930" loc="1074:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PA6" ref="0x103670020" loc="1102:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:69" name="SERIAL_PROTO_PACKET_NOACK" ref="0x102f4be20" loc="105:/Users/ytc/Applications/tinyos-main/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="CHANNEL_BATTERY" ref="0x1036a7bf0" loc="57:/Users/ytc/Applications/tinyos-main/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDA2" ref="0x10366e640" loc="1116:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDB4" ref="0x10366ac80" loc="1144:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDC6" ref="0x103665330" loc="1172:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_WAVE16_PWM_10BIT" ref="0x103af6990" loc="215:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ISC11" ref="0x10362ecf0" loc="734:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDF3" ref="0x103695330" loc="1265:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINF7" ref="0x103694020" loc="1271:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_PRESCALE_2b" ref="0x1036ae020" loc="106:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="XDIVEN" ref="0x103630360" loc="717:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOCA" ref="0x10364d020" loc="927:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM01" ref="0x10365aca0" loc="848:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WGM13" ref="0x1036509a0" loc="911:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COMB1" ref="0x103656660" loc="872:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ELAST" ref="0x102a51e00" loc="64:/Users/ytc/Applications/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UPE" ref="0x10367e320" loc="1015:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="IVSEL" ref="0x10365ec40" loc="822:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:27" name="ATM128_ADC_DIFF_ADC32_1x" ref="0x1036b10b0" loc="86:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ACIC" ref="0x103674020" loc="1076:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="_CLOCK_UPTIME_RAW_APPROX" ref="0x102d6a400" loc="164:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="DATAPAYLOAD" ref="0x102fcab30" loc="27:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricOR.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="_CLOCK_PROCESS_CPUTIME_ID" ref="0x102d6a7e0" loc="167:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ATM128_UCSR0A" ref="0x103612c70" loc="63:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:157" name="ATM128_UCSR1C" ref="0x10363ce40" loc="322:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TSM" ref="0x103649960" loc="960:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PUD" ref="0x103648320" loc="963:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DORD" ref="0x103647c80" loc="975:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ADIF" ref="0x103673330" loc="1084:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_START_CONVERSION_OFF" ref="0x1036ac840" loc="127:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_CLK16_DIVIDE_64" ref="0x103abf5f0" loc="67:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TXB8" ref="0x103679960" loc="1048:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="P_PID" ref="0x10294ee60" loc="81:/usr/include/sys/wait.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:108" name="ATM128_XMCRB" ref="0x1036441d0" loc="229:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM3B0" ref="0x103653cc0" loc="893:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="UIO_WRITE" ref="0x102fcdbf0" loc="90:/usr/include/sys/uio.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="JTRF" ref="0x10365d650" loc="827:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="ATM128_PIND" ref="0x103611de0" loc="78:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINB0" ref="0x103667340" loc="1158:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="OCF2" ref="0x103663670" loc="789:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM0" ref="0x10365b020" loc="837:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINC2" ref="0x1036a2980" loc="1186:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PIND4" ref="0x10369d020" loc="1214:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="UCSZ0" ref="0x103682020" loc="988:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINE6" ref="0x103699680" loc="1242:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_TIMER_COMPARE_CLEAR" ref="0x103afa020" loc="188:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SPMIE" ref="0x10362b3b0" loc="750:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCDR1" ref="0x10364a340" loc="949:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_ADC_SNGL_ADC3" ref="0x1036b6020" loc="62:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PSR0" ref="0x103648630" loc="964:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WCOL" ref="0x103647020" loc="969:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDD0" ref="0x10369e330" loc="1208:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDE2" ref="0x10369a950" loc="1236:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_WAVE16_PWM_9BIT" ref="0x103af6660" loc="214:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCIE3A" ref="0x103661340" loc="800:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ISC51" ref="0x10362c6b0" loc="744:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="U2X0" ref="0x10367b950" loc="1036:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:113" name="ATM128_TWSR" ref="0x103643020" loc="241:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="MUX2" ref="0x103671330" loc="1096:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="OCDR6" ref="0x10364b340" loc="944:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TXB80" ref="0x103676ca0" loc="1068:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PB5" ref="0x10366b020" loc="1133:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PC7" ref="0x103667660" loc="1161:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="ATM128_DDRC" ref="0x103610c20" loc="90:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:99" name="ATM128_PING" ref="0x103606c60" loc="213:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXCIE" ref="0x10367a340" loc="1041:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINA1" ref="0x10366c340" loc="1127:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINB3" ref="0x103668980" loc="1155:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TWPS1" ref="0x103633c70" loc="699:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINC5" ref="0x1036a2020" loc="1183:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PIND7" ref="0x10369e670" loc="1211:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ02" ref="0x103676660" loc="1066:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PA1" ref="0x10366f020" loc="1107:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_CLK8_DIVIDE_256" ref="0x103ac1d70" loc="59:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WGMA0" ref="0x103655660" loc="877:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGMB2" ref="0x103651660" loc="903:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TWA2" ref="0x103634020" loc="688:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="INTF7" ref="0x103628360" loc="769:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_ADC_PRESCALE_8" ref="0x1036ae660" loc="108:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CHANNEL_RSSI" ref="0x1036a73b0" loc="55:/Users/ytc/Applications/tinyos-main/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TCR0UB" ref="0x103657ca0" loc="867:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM1B0" ref="0x103654340" loc="883:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="INT2" ref="0x1036299a0" loc="764:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:133" name="ATM128_OCR3BH" ref="0x10363f020" loc="279:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ISC30" ref="0x10362e390" loc="731:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINF2" ref="0x103693020" loc="1276:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PING4" ref="0x103691980" loc="1295:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_ADC_PRESCALE" ref="0x1036ad6b0" loc="116:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="CTRLMSG" ref="0x102fcae60" loc="28:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricOR.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WGM20" ref="0x103659c90" loc="855:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM32" ref="0x10364e340" loc="921:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:28" name="ATM128_ADC_DIFF_ADC42_1x" ref="0x1036b13f0" loc="87:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADC_SNGL_ADC4" ref="0x1036b6330" loc="63:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_WAVE16_PWM_CAPTURE_LOW" ref="0x103af5a80" loc="220:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS1" ref="0x10365b930" loc="840:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:42" name="ATM128_OCR1AL" ref="0x10360b710" loc="145:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TWINT" ref="0x103639c60" loc="675:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_CLK16_DIVIDE_256" ref="0x103abf9c0" loc="68:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32" name="ATM128_SFIOR" ref="0x10360e8e0" loc="116:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TOS_SERIAL_CC1000_ID" ref="0x102f4c8f0" loc="96:/Users/ytc/Applications/tinyos-main/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADC" ref="0x103614c00" loc="41:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="FOC1B" ref="0x10364c680" loc="938:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MPCM" ref="0x10367e930" loc="1017:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WDP0" ref="0x103649640" loc="957:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PC1" ref="0x103666920" loc="1167:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PD3" ref="0x1036a0020" loc="1195:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PE5" ref="0x10369c620" loc="1223:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PF7" ref="0x103698ca0" loc="1251:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_WAVE16_PWM_FAST_10BIT" ref="0x103af5710" loc="219:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ADPS1" ref="0x103673c80" loc="1087:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="_CLOCK_REALTIME" ref="0x102d6b070" loc="153:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TWA5" ref="0x103635660" loc="685:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TICIE1" ref="0x103626340" loc="781:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="EXTRF" ref="0x10365c020" loc="830:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UPM1" ref="0x103645330" loc="984:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ" ref="0x103679020" loc="1045:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_POWER_STANDBY" ref="0x1036b9020" loc="131:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="BORF" ref="0x10365dc70" loc="829:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="_CLOCK_MONOTONIC" ref="0x102d6b400" loc="155:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:138" name="ATM128_TCCR3B" ref="0x10363e8e0" loc="292:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="RXB81" ref="0x103677020" loc="1057:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:18" name="ATM128_PORTD" ref="0x103610540" loc="84:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINE1" ref="0x103698660" loc="1247:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS01" ref="0x103659330" loc="850:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PGERS" ref="0x10362a390" loc="755:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRIE1" ref="0x103678340" loc="1053:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ADEN" ref="0x103674990" loc="1081:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_ADMUX" ref="0x103613de0" loc="51:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDA5" ref="0x10366fc70" loc="1113:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:34" name="TOS_AM_GROUP" ref="0x102f30380" loc="27:/Users/ytc/Applications/tinyos-main/tos/types/AM.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDB7" ref="0x10366a350" loc="1141:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:360222" name="PAYLOAD_PERIOD_MILLI" ref="0x102fc8240" loc="29:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricOR.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ISC70" ref="0x10362dd10" loc="741:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="FILESEC_OWNER" ref="0x103000210" loc="497:/usr/include/sys/fcntl.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDF6" ref="0x103696960" loc="1262:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:137" name="ATM128_TCNT3H" ref="0x10363e550" loc="289:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="AVR_CLOCK_OFF" ref="0x103abedf0" loc="76:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:68" name="SERIAL_PROTO_PACKET_ACK" ref="0x102f4ba40" loc="104:/Users/ytc/Applications/tinyos-main/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:47" name="ATM128_TCCR1A" ref="0x10360ac70" loc="157:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:63" name="ATM128_SREG" ref="0x1036061e0" loc="202:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UPM11" ref="0x1036829a0" loc="993:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:121" name="ATM128_OCR1CH" ref="0x103642550" loc="255:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_START_CONVERSION_ON" ref="0x1036acbb0" loc="128:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TOS_SERIAL_ACTIVE_MESSAGE_ID" ref="0x102f4c540" loc="95:/Users/ytc/Applications/tinyos-main/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:101" name="ATM128_PORTG" ref="0x1036053a0" loc="219:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCF3B" ref="0x103660990" loc="809:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="SM1" ref="0x10365e320" loc="819:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PG1" ref="0x103692320" loc="1284:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TOV0" ref="0x103662c70" loc="796:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="ATM128_UBRR0L" ref="0x103612550" loc="57:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FILESEC_MODE" ref="0x103000c40" loc="500:/usr/include/sys/fcntl.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="INTF2" ref="0x103627340" loc="774:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ECANCEL" ref="0x1029d4140" loc="55:/Users/ytc/Applications/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="COM3A1" ref="0x103653360" loc="890:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="ATM128_SPDR" ref="0x103611a70" loc="75:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="XDIV2" ref="0x10362f340" loc="722:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_ADC_VREF_2_56" ref="0x1036b8530" loc="47:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_CLK8_DIVIDE_64" ref="0x103ac15f0" loc="57:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DOR" ref="0x10367e020" loc="1014:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UPE0" ref="0x10367b640" loc="1035:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:19" name="ATM128_ADC_DIFF_ADC31_1x" ref="0x1036b34f0" loc="78:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="NOISE_HASHTABLE_SIZE" ref="0x102d71220" loc="59:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:132" name="ATM128_OCR3B" ref="0x1036408d0" loc="277:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="U2X" ref="0x10367e620" loc="1016:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_TIMER_COMPARE_TOGGLE" ref="0x103afbc80" loc="187:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_ADC_VREF_RSVD" ref="0x1036b8180" loc="46:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDF0" ref="0x103695c60" loc="1268:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDG2" ref="0x103691020" loc="1290:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_ADC_DIFF_ADC00_10x" ref="0x1036b5020" loc="67:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MPCM0" ref="0x10367bc70" loc="1037:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SRW" ref="0x10365f960" loc="816:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ACD" ref="0x103675020" loc="1071:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_CLK16_DIVIDE_8" ref="0x103abf230" loc="66:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDC1" ref="0x103664330" loc="1177:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDD3" ref="0x10369f950" loc="1205:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDE5" ref="0x10369a020" loc="1233:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCF1A" ref="0x103662020" loc="792:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC3A" ref="0x10364d980" loc="932:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PE0" ref="0x10369b620" loc="1228:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PF2" ref="0x103697c20" loc="1256:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:52" name="ATM128_MCUCSR" ref="0x1036081e0" loc="173:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="USBS" ref="0x103645950" loc="986:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PG4" ref="0x103693980" loc="1281:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="ATM128_WAVE16_PWM_COMPARE_LOW" ref="0x103af5df0" loc="221:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PAYLOAD_PRODUCE_RATIO" ref="0x102fc7140" loc="33:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricOR.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:38" name="ATM128_ICR1L" ref="0x10360c1d0" loc="135:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="PROBEMSG" ref="0x103e32020" loc="6:/Users/ytc/Documents/workspace/NewMetricOR/src/NeighborDiscovery/NeighborDiscovery.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ENOACK" ref="0x102a51ac0" loc="63:/Users/ytc/Applications/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CSB2" ref="0x103651970" loc="904:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:225" name="SIM_LOG_OUTPUT_COUNT" ref="0x102c63020" loc="64:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_log.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SPI2X" ref="0x103647340" loc="970:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_CLK16_EXTERNAL_FALL" ref="0x103abe260" loc="70:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:126" name="HDLC_FLAG_BYTE" ref="0x102f4dad0" loc="88:/Users/ytc/Applications/tinyos-main/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CPHA" ref="0x103646640" loc="978:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ICF1" ref="0x103663c90" loc="791:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DOR1" ref="0x10367d950" loc="1024:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:97" name="ATM128_DDRF" ref="0x103606570" loc="207:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TOIE2" ref="0x103626020" loc="780:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINF0" ref="0x103693660" loc="1278:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PING2" ref="0x103690020" loc="1297:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_WAVE8_PWM" ref="0x103abde30" loc="84:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="TWS4" ref="0x103633640" loc="697:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SRL2" ref="0x103632350" loc="703:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINA4" ref="0x10366d980" loc="1124:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ERETRY" ref="0x1029d4db0" loc="59:/Users/ytc/Applications/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS20" ref="0x103657020" loc="861:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ICNC1" ref="0x103650360" loc="909:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:42" name="ATM128_OCR1A" ref="0x10360b3a0" loc="144:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS32" ref="0x10364e650" loc="922:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINB6" ref="0x103668020" loc="1152:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PA4" ref="0x103670620" loc="1104:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDA0" ref="0x10366ec60" loc="1118:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="COM1A1" ref="0x1036559a0" loc="880:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="INT5" ref="0x103629070" loc="761:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDB2" ref="0x103669330" loc="1146:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDC4" ref="0x103665950" loc="1174:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDD6" ref="0x10369f020" loc="1202:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="FILESEC_ACL" ref="0x102fff020" loc="501:/usr/include/sys/fcntl.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ISC21" ref="0x10362e6b0" loc="732:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINF5" ref="0x103694660" loc="1273:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="TWSTO" ref="0x103636660" loc="678:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WGM11" ref="0x103654ca0" loc="886:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="XMM2" ref="0x103631980" loc="712:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_ADC_SNGL_ADC7" ref="0x1036b6c60" loc="66:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="COMC1" ref="0x103656ca0" loc="874:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PSR321" ref="0x103648950" loc="965:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="UIO_READ" ref="0x102fcd970" loc="90:/usr/include/sys/uio.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:124" name="ATM128_ETIFR" ref="0x103642c60" loc="261:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:37" name="ATM128_TCCR2" ref="0x10360da90" loc="131:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRE0" ref="0x10367cca0" loc="1032:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:155" name="ATM128_UCSR1A" ref="0x10363c740" loc="316:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM1" ref="0x10365b330" loc="838:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="COM3C0" ref="0x103652340" loc="895:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SPIE" ref="0x103647670" loc="973:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FE1" ref="0x10367d640" loc="1023:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:22" name="ATM128_PINB" ref="0x10360f390" loc="96:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="SRW00" ref="0x103631020" loc="707:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINC0" ref="0x1036a1020" loc="1188:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCF0" ref="0x103662960" loc="795:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC2" ref="0x103659970" loc="854:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PIND2" ref="0x10369d660" loc="1216:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINE4" ref="0x103699cc0" loc="1244:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_VREF_OFF" ref="0x1036b9a20" loc="44:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FE" ref="0x10367fc50" loc="1013:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_WAVE8_NORMAL" ref="0x103abdb40" loc="83:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ACO" ref="0x103675630" loc="1073:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_LEFT_ADJUST" ref="0x1036b7020" loc="53:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="AVR_CLOCK_ON" ref="0x103abd1d0" loc="77:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-115" name="NOISE_MIN_QUANTIZE" ref="0x102d738a0" loc="54:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="MSTR" ref="0x103646020" loc="976:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_TIMER_COMPARE_NORMAL" ref="0x103afb930" loc="186:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:29" name="ATM128_ADC_DIFF_ADC52_1x" ref="0x1036b1730" loc="88:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:36" name="ATM128_TCNT2" ref="0x10360d710" loc="128:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_SNGL_ADC1" ref="0x1036b7910" loc="60:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:111" name="NOISE_NUM_VALUES" ref="0x102d71cd0" loc="61:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDE0" ref="0x103699020" loc="1238:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ISC61" ref="0x10362c070" loc="742:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXCIE1" ref="0x103679ca0" loc="1051:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="INTF0" ref="0x103627980" loc="776:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PORF" ref="0x10365c330" loc="831:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="RXB8" ref="0x103679650" loc="1047:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_VREF_AVCC" ref="0x1036b9dd0" loc="45:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCDR4" ref="0x10364b980" loc="946:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PB3" ref="0x10366b620" loc="1135:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PC5" ref="0x103667c60" loc="1163:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PD7" ref="0x1036a1340" loc="1191:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOS_SERIAL_802_15_4_ID" ref="0x102f4ccb0" loc="97:/Users/ytc/Applications/tinyos-main/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCR0UB" ref="0x103657980" loc="866:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_ADCH" ref="0x103613370" loc="44:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOV3" ref="0x103660ca0" loc="810:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="UCSZ00" ref="0x103680ca0" loc="1006:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ12" ref="0x103678ca0" loc="1056:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:44" name="ATM128_TCNT1L" ref="0x10360a1e0" loc="150:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="UMSEL0" ref="0x103681cc0" loc="1001:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="INTF5" ref="0x1036289a0" loc="771:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TWA0" ref="0x103634640" loc="690:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXC0" ref="0x10367c980" loc="1031:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:104" name="ATM128_SPMCR" ref="0x103605720" loc="222:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_WAVE16_PWM_8BIT" ref="0x103af6340" loc="213:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="COM1C0" ref="0x103654980" loc="885:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SUCCESS" ref="0x102d2d760" loc="52:/Users/ytc/Applications/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="IVCE" ref="0x10365d020" loc="823:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ESIZE" ref="0x102d2dd90" loc="54:/Users/ytc/Applications/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="XDIV5" ref="0x1036309a0" loc="719:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="INT0" ref="0x103628020" loc="766:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:131" name="ATM128_OCR3CH" ref="0x103640550" loc="274:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="FILESEC_GRPUUID" ref="0x102fff3a0" loc="502:/usr/include/sys/fcntl.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:100" name="FILESEC_ACL_RAW" ref="0x102fff740" loc="505:/usr/include/sys/fcntl.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WGM30" ref="0x103652980" loc="897:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_COMPARE_TOGGLE" ref="0x103abce30" loc="92:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_INT_FLAG_ON" ref="0x1036aa020" loc="140:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXCIE0" ref="0x1036779a0" loc="1062:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:65535" name="AM_BROADCAST_ADDR" ref="0x102f31d60" loc="15:/Users/ytc/Applications/tinyos-main/tos/types/AM.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:22" name="ATM128_ADC_DIFF_ADC61_1x" ref="0x1036b2020" loc="81:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="FAIL" ref="0x102d2da70" loc="53:/Users/ytc/Applications/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PD1" ref="0x1036a0620" loc="1197:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="OCIE1C" ref="0x103660020" loc="804:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PE3" ref="0x10369cc20" loc="1225:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PF5" ref="0x103697320" loc="1253:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADCSRA" ref="0x103613a60" loc="48:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RXEN1" ref="0x103678660" loc="1054:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:34" name="ATM128_OCDR" ref="0x10360d020" loc="122:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM21" ref="0x103658020" loc="856:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="EALREADY" ref="0x102a51480" loc="61:/Users/ytc/Applications/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="_CLOCK_THREAD_CPUTIME_ID" ref="0x102d6abe0" loc="169:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="ATM128_ADC_DIFF_ADC41_1x" ref="0x1036b3830" loc="79:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:31" name="ATM128_ADC_SNGL_GND" ref="0x1036b1d40" loc="90:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ACIS1" ref="0x103674340" loc="1077:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:24" name="ATM128_PORTB" ref="0x10360fa80" loc="102:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TWS7" ref="0x103634c90" loc="694:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS11" ref="0x10364f330" loc="914:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINA7" ref="0x10366d020" loc="1121:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:114" name="ATM128_TWAR" ref="0x103643390" loc="244:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:58" name="ATM128_EICRB" ref="0x103607720" loc="191:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PA7" ref="0x103671c70" loc="1101:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:54" name="ATM128_TIFR" ref="0x1036088d0" loc="179:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="ATM128_ICR3" ref="0x103641390" loc="267:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADC_PRESCALE_64" ref="0x1036ad020" loc="111:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDA3" ref="0x10366e330" loc="1115:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDB5" ref="0x10366a970" loc="1143:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDC7" ref="0x103665020" loc="1171:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ISC00" ref="0x10362d6b0" loc="737:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDF4" ref="0x103695020" loc="1264:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="FOCB" ref="0x10364d330" loc="928:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_CLK8_OFF" ref="0x103ac56a0" loc="53:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TOS_AM_ADDRESS" ref="0x102f30710" loc="28:/Users/ytc/Applications/tinyos-main/tos/types/AM.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="COMA0" ref="0x103656340" loc="871:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC" ref="0x10365c650" loc="834:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ATM128_WAVE16_PWM_COMPARE_HIGH" ref="0x103af4550" loc="223:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="UCPOL0" ref="0x10367f020" loc="1007:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TXEN0" ref="0x103676340" loc="1065:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ATM128_UCSR0B" ref="0x1036128e0" loc="60:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:153" name="ATM128_UBRR1L" ref="0x10363c020" loc="310:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="ATM128_SPSR" ref="0x103611700" loc="72:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXC" ref="0x10367f340" loc="1010:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_POWER_DOWN" ref="0x1036b93b0" loc="132:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MUX0" ref="0x103671950" loc="1098:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RXEN" ref="0x10367a970" loc="1043:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM3B1" ref="0x1036539a0" loc="892:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="XDIV0" ref="0x10362f980" loc="724:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_PINE" ref="0x103619df0" loc="30:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:26" name="ATM128_DDRA" ref="0x10360e1c0" loc="108:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TCN0UB" ref="0x103657660" loc="865:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINB1" ref="0x103667020" loc="1157:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM1" ref="0x10365cc70" loc="836:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINC3" ref="0x1036a2660" loc="1185:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PIND5" ref="0x10369ecb0" loc="1213:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINE7" ref="0x103699360" loc="1241:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ1" ref="0x103645c70" loc="987:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TWEA" ref="0x103636020" loc="676:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="ATM128_UDR0" ref="0x103611020" loc="66:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDG0" ref="0x103691640" loc="1292:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="RWWSB" ref="0x10362b6d0" loc="751:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TRUE" ref="0x102c309f0" loc="76:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/tos.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDD1" ref="0x10369e020" loc="1207:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="NOISE_HISTORY" ref="0x102d729c0" loc="57:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="P_PGID" ref="0x10294c130" loc="82:/usr/include/sys/wait.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDE3" ref="0x10369a640" loc="1235:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:35" name="ATM128_OCR2" ref="0x10360d390" loc="125:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:104" name="ATM128_SPMCSR" ref="0x103605a90" loc="223:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="IDRD" ref="0x10364ccd0" loc="942:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCIE3B" ref="0x103661660" loc="801:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ISC40" ref="0x10362b070" loc="747:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="U2X1" ref="0x10367c020" loc="1026:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CSB0" ref="0x103650020" loc="906:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="UCPOL" ref="0x103682340" loc="989:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="MUX3" ref="0x103671020" loc="1095:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="sendDataPayload" ref="0x1031c63c0" loc="519:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="endForwardTask" ref="0x1034f64c0" loc="448:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="startDutyCycle" ref="0x1030f3230" loc="570:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="endDataTask" ref="0x10361b580" loc="431:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="startForwardRequestPause" ref="0x103056170" loc="588:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="clearBuffer" ref="0x10361a630" loc="419:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="forward" ref="0x1032db430" loc="470:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="updateEDC" ref="0x102ff2020" loc="598:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="NO_TASK" ref="0x102f73da0" loc="56:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="NUM_TASKS" ref="0x102f73a70" loc="55:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="stopDoneTask" ref="0x1039aeda0" loc="102:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="sendDoneTask" ref="0x103950c30" loc="156:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="startDoneTask" ref="0x1039ace40" loc="97:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="MINDT" ref="0x103b38530" loc="45:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:230" name="MAXT" ref="0x103b38860" loc="46:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="fired" ref="0x103cd5020" loc="74:/Users/ytc/Applications/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="END_OF_LIST" ref="0x103cedd30" loc="56:/Users/ytc/Applications/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="updateFromTimer" ref="0x103cf94c0" loc="71:/Users/ytc/Applications/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="NUM_TIMERS" ref="0x103ced9e0" loc="55:/Users/ytc/Applications/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="NUM_CLIENTS" ref="0x103daea40" loc="48:/Users/ytc/Applications/tinyos-main/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="errorTask" ref="0x103daa840" loc="169:/Users/ytc/Applications/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="CancelTask" ref="0x103e16960" loc="126:/Users/ytc/Applications/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="sendProbe" ref="0x103e2f680" loc="31:/Users/ytc/Documents/workspace/NewMetricOR/src/NeighborDiscovery/NeighborDiscoveryP.nc">
      <component-ref qname="NeighborDiscoveryP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
  </constants>
  <functions>
  </functions>
  <typedefs>
    <typedef name="__darwin_pthread_attr_t" ref="0x1027679b0" loc="109:/usr/include/sys/_pthread/_pthread_types.h">
      <type-tag size="I:64" alignment="I:8"><struct-ref name="_opaque_pthread_attr_t" ref="0x1027606f0"/>
        <typename><typedef-ref name="__darwin_pthread_attr_t" ref="0x1027679b0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="intptr_t" ref="0x102777e10" loc="30:/usr/include/sys/_types/_intptr_t.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="intptr_t" ref="0x102777e10"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1CH_t" ref="0x103aeac50" loc="279:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1CH_t" ref="0x103aeac50"/></typename>
      </type-int>
    </typedef>
    <typedef name="serial_packet_t" ref="0x102f45a20" loc="134:/Users/ytc/Applications/tinyos-main/tos/lib/serial/Serial.h">
      <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_packet" ref="0x102f45020"/>
        <typename><typedef-ref name="serial_packet_t" ref="0x102f45a20"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR3B_t" ref="0x103aef090" loc="247:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x103af1280"/>
        <typename><typedef-ref name="Atm128_TCCR3B_t" ref="0x103aef090"/></typename>
      </type-tag>
    </typedef>
    <typedef name="rune_t" ref="0x1029f8be0" loc="30:/usr/include/sys/_types/_rune_t.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="rune_t" ref="0x1029f8be0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_blkcnt_t" ref="0x1027575c0" loc="55:/usr/include/sys/_types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__darwin_blkcnt_t" ref="0x1027575c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="wchar_t" ref="0x102493e50" loc="325:/opt/local/lib/gcc47/gcc/x86_64-apple-darwin16/4.7.4/include/stddef.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="wchar_t" ref="0x102493e50"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_size_t" ref="0x102754020" loc="92:/usr/include/i386/_types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__darwin_size_t" ref="0x102754020"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128Admux_t" ref="0x1036af5e0" loc="99:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x1036af110"/>
        <typename><typedef-ref name="Atm128Admux_t" ref="0x1036af5e0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="ushort" ref="0x102fda020" loc="91:/usr/include/sys/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="ushort" ref="0x102fda020"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_ino_t" ref="0x1027598c0" loc="64:/usr/include/sys/_types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__darwin_ino_t" ref="0x1027598c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="tossim_footer_t" ref="0x102f50640" loc="16:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimRadioMsg.h">
      <type-tag size="I:2" alignment="I:1"><nx_struct-ref name="tossim_footer" ref="0x102f50020"/>
        <typename><typedef-ref name="tossim_footer_t" ref="0x102f50640"/></typename>
      </type-tag>
    </typedef>
    <typedef name="errno_t" ref="0x102930020" loc="30:/usr/include/sys/_types/_errno_t.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="errno_t" ref="0x102930020"/></typename>
      </type-int>
    </typedef>
    <typedef name="__int64_t" ref="0x1027503e0" loc="46:/usr/include/i386/_types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__int64_t" ref="0x1027503e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__int16_t" ref="0x10274f410" loc="42:/usr/include/i386/_types.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="__int16_t" ref="0x10274f410"/></typename>
      </type-int>
    </typedef>
    <typedef name="serial_header_t" ref="0x102f47ca0" loc="129:/Users/ytc/Applications/tinyos-main/tos/lib/serial/Serial.h">
      <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_header" ref="0x102f48bc0"/>
        <typename><typedef-ref name="serial_header_t" ref="0x102f47ca0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="TMilli" ref="0x102fafcb0" loc="42:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.h">
      <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x102faf940"/>
        <typename><typedef-ref name="TMilli" ref="0x102fafcb0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="filesec_t" ref="0x103001c40" loc="31:/usr/include/sys/_types/_filesec_t.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="V:" alignment="V:"><struct-ref name="_filesec" ref="0x103001820"/></type-tag>
        <typename><typedef-ref name="filesec_t" ref="0x103001c40"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="_RuneEntry" ref="0x102b78b30" loc="65:/usr/include/runetype.h">
      <type-tag size="I:24" alignment="I:8"><struct-ref ref="0x102b785b0"/>
        <typename><typedef-ref name="_RuneEntry" ref="0x102b78b30"/></typename>
      </type-tag>
    </typedef>
    <typedef name="user_long_t" ref="0x102a529b0" loc="100:/usr/include/i386/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="user_long_t" ref="0x102a529b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT0_t" ref="0x103b07020" loc="111:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT0_t" ref="0x103b07020"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1BL_t" ref="0x103aea840" loc="278:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1BL_t" ref="0x103aea840"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR2_t" ref="0x103b060d0" loc="116:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR2_t" ref="0x103b060d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="fd_set" ref="0x102d43020" loc="48:/usr/include/sys/_types/_fd_def.h">
      <documentation loc="32:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_mote.h">
        <short>&#10; The C functions that allow TOSSIM-side code to access the SimMoteP&#10; component.</short>
        <long>&#10; The C functions that allow TOSSIM-side code to access the SimMoteP&#10; component.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-tag size="I:128" alignment="I:4"><struct-ref name="fd_set" ref="0x102d2e530"/>
        <typename><typedef-ref name="fd_set" ref="0x102d43020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="list_t" ref="0x1031b1090" loc="217:/Users/ytc/Documents/workspace/NewMetricOR/src/simclist.h">
      <documentation loc="193:/Users/ytc/Documents/workspace/NewMetricOR/src/simclist.h">
        <short> list object *</short>
      </documentation>
      <type-tag size="I:120" alignment="I:8"><struct-ref ref="0x1031b3680"/>
        <typename><typedef-ref name="list_t" ref="0x1031b1090"/></typename>
      </type-tag>
    </typedef>
    <typedef name="sim_time_t" ref="0x102c2f320" loc="51:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_tossim.h">
      <documentation loc="32:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_tossim.h">
        <short>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0x102c2f320"/></typename>
      </type-int>
    </typedef>
    <typedef name="float_t" ref="0x102a83aa0" loc="59:/opt/local/lib/gcc47/gcc/x86_64-apple-darwin16/4.7.4/include-fixed/math.h">
      <documentation loc="50:/opt/local/lib/gcc47/gcc/x86_64-apple-darwin16/4.7.4/include-fixed/math.h">
        <short>****************************************************************************&#10; Floating point data types                                                  *&#10;*****************************************************************************</short>
      </documentation>
      <type-float cname="float" size="I:4" alignment="I:4">
        <typename><typedef-ref name="float_t" ref="0x102a83aa0"/></typename>
      </type-float>
    </typedef>
    <typedef name="mode_t" ref="0x102a4f250" loc="30:/usr/include/sys/_types/_mode_t.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="mode_t" ref="0x102a4f250"/></typename>
      </type-int>
    </typedef>
    <typedef name="mcontext_t" ref="0x1029a4090" loc="115:/usr/include/i386/_mcontext.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:712" alignment="I:8"><struct-ref name="__darwin_mcontext64" ref="0x10299a020"/></type-tag>
        <typename><typedef-ref name="mcontext_t" ref="0x1029a4090"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="Atm128_TCCR1C_t" ref="0x103aed0d0" loc="262:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x103aee790"/>
        <typename><typedef-ref name="Atm128_TCCR1C_t" ref="0x103aed0d0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="int_least32_t" ref="0x102772490" loc="40:/opt/local/lib/gcc47/gcc/x86_64-apple-darwin16/4.7.4/include-fixed/stdint.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="int_least32_t" ref="0x102772490"/></typename>
      </type-int>
    </typedef>
    <typedef name="user_size_t" ref="0x102a521e0" loc="98:/usr/include/i386/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="user_size_t" ref="0x102a521e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__builtin_va_list" ref="0x10248b690"  loc="NONE">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="V:" alignment="V:"><struct-ref ref="0x10248b530"/></type-tag>
      </type-pointer>
    </typedef>
    <typedef name="__uint32_t" ref="0x102750020" loc="45:/usr/include/i386/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__uint32_t" ref="0x102750020"/></typename>
      </type-int>
    </typedef>
    <typedef name="TMicro" ref="0x102faec80" loc="44:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.h">
      <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x102fae910"/>
        <typename><typedef-ref name="TMicro" ref="0x102faec80"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__darwin_nl_item" ref="0x10276d020" loc="39:/usr/include/_types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_nl_item" ref="0x10276d020"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_float" ref="0x102fadac0" loc="6:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricOR.h">
      <type-float cname="float" size="I:4" alignment="I:1" network="nx_float">
        <typename><typedef-ref name="nx_float" ref="0x102fadac0"/></typename>
      </type-float>
    </typedef>
    <typedef name="__darwin_wchar_t" ref="0x102754870" loc="104:/usr/include/i386/_types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_wchar_t" ref="0x102754870"/></typename>
      </type-int>
    </typedef>
    <typedef name="nlink_t" ref="0x102fd5160" loc="30:/usr/include/sys/_types/_nlink_t.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="nlink_t" ref="0x102fd5160"/></typename>
      </type-int>
    </typedef>
    <typedef name="clock_t" ref="0x102d53090" loc="30:/usr/include/sys/_types/_clock_t.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="clock_t" ref="0x102d53090"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1BH_t" ref="0x103aea430" loc="277:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1BH_t" ref="0x103aea430"/></typename>
      </type-int>
    </typedef>
    <typedef name="heap_t" ref="0x102cd20d0" loc="65:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/heap.h">
      <documentation loc="53:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/heap.h">
        <short>&#10; </short>
        <long>&#10; @author Philip Levis&#10;</long>
      </documentation>
      <type-tag size="I:24" alignment="I:8"><struct-ref name="heap" ref="0x102cd3690"/>
        <typename><typedef-ref name="heap_t" ref="0x102cd20d0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pthread_condattr_t" ref="0x102fd4de0" loc="30:/usr/include/sys/_pthread/_pthread_condattr_t.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="_opaque_pthread_condattr_t" ref="0x102761d40"/>
        <typename><typedef-ref name="pthread_condattr_t" ref="0x102fd4de0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="user_ulong_t" ref="0x102a52db0" loc="101:/usr/include/i386/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="user_ulong_t" ref="0x102a52db0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_ssize_t" ref="0x102755d00" loc="119:/usr/include/i386/_types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__darwin_ssize_t" ref="0x102755d00"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_uint16_t" ref="0x1029041f0" loc="446:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
        <typename><typedef-ref name="nxle_uint16_t" ref="0x1029041f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_log_channel_t" ref="0x102c657c0" loc="61:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_log.c">
      <type-tag size="I:24" alignment="I:8"><struct-ref name="sim_log_channel" ref="0x102c679c0"/>
        <typename><typedef-ref name="sim_log_channel_t" ref="0x102c657c0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_int" ref="0x102fdc8a0" loc="86:/usr/include/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="u_int" ref="0x102fdc8a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_once_t" ref="0x102fd1cd0" loc="30:/usr/include/sys/_pthread/_pthread_once_t.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="_opaque_pthread_once_t" ref="0x102764b80"/>
        <typename><typedef-ref name="pthread_once_t" ref="0x102fd1cd0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint" ref="0x102fda3b0" loc="92:/usr/include/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint" ref="0x102fda3b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="am_group_t" ref="0x102f31400" loc="11:/Users/ytc/Applications/tinyos-main/tos/types/AM.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="am_group_t" ref="0x102f31400"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCCR3C_t" ref="0x103aed590" loc="265:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x103aee790"/>
        <typename><typedef-ref name="Atm128_TCCR3C_t" ref="0x103aed590"/></typename>
      </type-tag>
    </typedef>
    <typedef name="ino64_t" ref="0x102fd6920" loc="30:/usr/include/sys/_types/_ino64_t.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="ino64_t" ref="0x102fd6920"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_least8_t" ref="0x102772c90" loc="42:/opt/local/lib/gcc47/gcc/x86_64-apple-darwin16/4.7.4/include-fixed/stdint.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint_least8_t" ref="0x102772c90"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT1H_t" ref="0x103aed9e0" loc="269:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT1H_t" ref="0x103aed9e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT3L_t" ref="0x103aec650" loc="272:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT3L_t" ref="0x103aec650"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_fast32_t" ref="0x102777570" loc="55:/opt/local/lib/gcc47/gcc/x86_64-apple-darwin16/4.7.4/include-fixed/stdint.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint_fast32_t" ref="0x102777570"/></typename>
      </type-int>
    </typedef>
    <typedef name="blksize_t" ref="0x102fd8480" loc="30:/usr/include/sys/_types/_blksize_t.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="blksize_t" ref="0x102fd8480"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_least64_t" ref="0x102772890" loc="41:/opt/local/lib/gcc47/gcc/x86_64-apple-darwin16/4.7.4/include-fixed/stdint.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int_least64_t" ref="0x102772890"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ETIFR_t" ref="0x103b30530" loc="324:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x103b30110"/>
        <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x103b30530"/></typename>
      </type-tag>
    </typedef>
    <typedef name="rusage_info_current" ref="0x1029db570" loc="281:/usr/include/sys/resource.h">
      <type-tag size="I:232" alignment="I:8"><struct-ref name="rusage_info_v3" ref="0x1029d7260"/>
        <typename><typedef-ref name="rusage_info_current" ref="0x1029db570"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCNT2_t" ref="0x103b07ca0" loc="115:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT2_t" ref="0x103b07ca0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1AL_t" ref="0x103aea020" loc="276:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1AL_t" ref="0x103aea020"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_mach_port_t" ref="0x10275b2e0" loc="69:/usr/include/sys/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_mach_port_t" ref="0x10275b2e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="rsize_t" ref="0x102928b90" loc="30:/usr/include/sys/_types/_rsize_t.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="rsize_t" ref="0x102928b90"/></typename>
      </type-int>
    </typedef>
    <typedef name="in_addr_t" ref="0x102fd8ca0" loc="30:/usr/include/sys/_types/_in_addr_t.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="in_addr_t" ref="0x102fd8ca0"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_event_t" ref="0x102c38410" loc="51:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_event_queue.h">
      <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x102c38020"/>
        <typename><typedef-ref name="sim_event_t" ref="0x102c38410"/></typename>
      </type-tag>
    </typedef>
    <typedef name="error_t" ref="0x102ad0cb0" loc="67:/Users/ytc/Applications/tinyos-main/tos/types/TinyError.h">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="error_t" ref="0x102ad0cb0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_uid_t" ref="0x10275d160" loc="75:/usr/include/sys/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_uid_t" ref="0x10275d160"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_SFIOR_t" ref="0x103afb310" loc="178:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x103afcec0"/>
        <typename><typedef-ref name="Atm128_SFIOR_t" ref="0x103afb310"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__darwin_clock_t" ref="0x1027554e0" loc="117:/usr/include/i386/_types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__darwin_clock_t" ref="0x1027554e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_least8_t" ref="0x102770c20" loc="38:/opt/local/lib/gcc47/gcc/x86_64-apple-darwin16/4.7.4/include-fixed/stdint.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="int_least8_t" ref="0x102770c20"/></typename>
      </type-int>
    </typedef>
    <typedef name="FILE" ref="0x102bc2930" loc="153:/usr/include/stdio.h">
      <type-tag size="I:152" alignment="I:8"><struct-ref name="__sFILE" ref="0x102bb6980"/>
        <typename><typedef-ref name="FILE" ref="0x102bc2930"/></typename>
      </type-tag>
    </typedef>
    <typedef name="fixpt_t" ref="0x102fd9b80" loc="104:/usr/include/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="fixpt_t" ref="0x102fd9b80"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ADCL_t" ref="0x1036a8cf0" loc="161:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ADCL_t" ref="0x1036a8cf0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_gid_t" ref="0x102758ab0" loc="60:/usr/include/sys/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_gid_t" ref="0x102758ab0"/></typename>
      </type-int>
    </typedef>
    <typedef name="radio_stats_t" ref="0x102f48860" loc="121:/Users/ytc/Applications/tinyos-main/tos/lib/serial/Serial.h">
      <type-tag size="I:18" alignment="I:2"><struct-ref name="radio_stats" ref="0x102f4a5c0"/>
        <typename><typedef-ref name="radio_stats_t" ref="0x102f48860"/></typename>
      </type-tag>
    </typedef>
    <typedef name="clockid_t" ref="0x102d6ae80" loc="171:/usr/include/time.h">
      <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x102d6dce0"/>
        <typename><typedef-ref name="clockid_t" ref="0x102d6ae80"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_ICR1H_t" ref="0x103ae8db0" loc="291:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ICR1H_t" ref="0x103ae8db0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ICR3L_t" ref="0x103ae69f0" loc="294:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ICR3L_t" ref="0x103ae69f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="gid_t" ref="0x102fd8890" loc="30:/usr/include/sys/_types/_gid_t.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="gid_t" ref="0x102fd8890"/></typename>
      </type-int>
    </typedef>
    <typedef name="user_addr_t" ref="0x102a43d80" loc="97:/usr/include/i386/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="user_addr_t" ref="0x102a43d80"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_packet_t" ref="0x102f209a0" loc="59:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_packet.h">
      <documentation loc="32:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_packet.h">
        <short>&#10;&#10; TOSSIM packet abstract data type, so C++ code can call into nesC&#10; code that does the native-to-network type translation.</short>
        <long>&#10;&#10; TOSSIM packet abstract data type, so C++ code can call into nesC&#10; code that does the native-to-network type translation.&#10;&#10; @author Philip Levis&#10; @date   Jan 2 2006&#10;</long>
      </documentation>
      <type-tag size="I:0" alignment="I:1"><struct-ref name="sim_packet" ref="0x102f20660"/>
        <typename><typedef-ref name="sim_packet_t" ref="0x102f209a0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128Adcsra_t" ref="0x1036a84f0" loc="158:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x1036a9d70"/>
        <typename><typedef-ref name="Atm128Adcsra_t" ref="0x1036a84f0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="int8_t" ref="0x10276dcc0" loc="30:/usr/include/sys/_types/_int8_t.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="int8_t" ref="0x10276dcc0"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_log_output_t" ref="0x102c67650" loc="54:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_log.c">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="sim_log_output" ref="0x102c68d90"/>
        <typename><typedef-ref name="sim_log_output_t" ref="0x102c67650"/></typename>
      </type-tag>
    </typedef>
    <typedef name="suseconds_t" ref="0x102d3e890" loc="30:/usr/include/sys/_types/_suseconds_t.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="suseconds_t" ref="0x102d3e890"/></typename>
      </type-int>
    </typedef>
    <typedef name="sigset_t" ref="0x1029a0740" loc="30:/usr/include/sys/_types/_sigset_t.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="sigset_t" ref="0x1029a0740"/></typename>
      </type-int>
    </typedef>
    <typedef name="T32khz" ref="0x102fae4d0" loc="43:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.h">
      <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x102fae160"/>
        <typename><typedef-ref name="T32khz" ref="0x102fae4d0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_short" ref="0x102fdc500" loc="85:/usr/include/sys/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="u_short" ref="0x102fdc500"/></typename>
      </type-int>
    </typedef>
    <typedef name="tossim_header_t" ref="0x102f2fba0" loc="12:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimRadioMsg.h">
      <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="tossim_header" ref="0x102f30ab0"/>
        <typename><typedef-ref name="tossim_header_t" ref="0x102f2fba0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="ptrdiff_t" ref="0x102493620" loc="150:/opt/local/lib/gcc47/gcc/x86_64-apple-darwin16/4.7.4/include/stddef.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="ptrdiff_t" ref="0x102493620"/></typename>
      </type-int>
    </typedef>
    <typedef name="TSecond" ref="0x102494840" loc="41:/Users/ytc/Applications/tinyos-main/tos/lib/timer/Timer.h">
      <documentation loc="1:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORAppC.nc">
        <short>&#10;Copyright (C),2014-2017, YTC, www.bjfulinux.cn&#10;Copyright (C),2014-2017, ENS Lab, ens.bjfu.edu.cn&#10;Created on  2017-06-30 09:11&#10;</short>
        <long>&#10;Copyright (C),2014-2017, YTC, www.bjfulinux.cn&#10;Copyright (C),2014-2017, ENS Lab, ens.bjfu.edu.cn&#10;Created on  2017-06-30 09:11&#10;@author: ytc recessburton@gmail.com&#10;@version: 1.7&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the University of California nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;*</long>
      </documentation>
      <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x1024944d0"/>
        <typename><typedef-ref name="TSecond" ref="0x102494840"/></typename>
      </type-tag>
    </typedef>
    <typedef name="blkcnt_t" ref="0x102fd8020" loc="30:/usr/include/sys/_types/_blkcnt_t.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="blkcnt_t" ref="0x102fd8020"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint32_t" ref="0x102770400" loc="31:/usr/include/_types/_uint32_t.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x102770400"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_fp_control_t" ref="0x1029585a0" loc="114:/usr/include/mach/i386/_structs.h">
      <type-tag size="I:2" alignment="I:2"><struct-ref name="__darwin_fp_control" ref="0x102950390"/>
        <typename><typedef-ref name="__darwin_fp_control_t" ref="0x1029585a0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="nxle_uint64_t" ref="0x10290e0d0" loc="448:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:1" network="nxle_uint64_t">
        <typename><typedef-ref name="nxle_uint64_t" ref="0x10290e0d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_uint8_t" ref="0x102901020" loc="435:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
        <typename><typedef-ref name="nx_uint8_t" ref="0x102901020"/></typename>
      </type-int>
    </typedef>
    <typedef name="uintptr_t" ref="0x102778230" loc="30:/usr/include/sys/_types/_uintptr_t.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uintptr_t" ref="0x102778230"/></typename>
      </type-int>
    </typedef>
    <typedef name="caddr_t" ref="0x102fd93d0" loc="99:/usr/include/sys/types.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        <typename><typedef-ref name="caddr_t" ref="0x102fd93d0"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="fcodeblobs_t" ref="0x102fe6680" loc="378:/usr/include/sys/fcntl.h">
      <documentation loc="369:/usr/include/sys/fcntl.h">
        <short> Information the user passes in to get the codeblobs out of the kernel *</short>
      </documentation>
      <type-tag size="I:48" alignment="I:8"><struct-ref name="fcodeblobs" ref="0x102fe7130"/>
        <typename><typedef-ref name="fcodeblobs_t" ref="0x102fe6680"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__darwin_pthread_rwlockattr_t" ref="0x10276b6a0" loc="117:/usr/include/sys/_pthread/_pthread_types.h">
      <type-tag size="I:24" alignment="I:8"><struct-ref name="_opaque_pthread_rwlockattr_t" ref="0x102766020"/>
        <typename><typedef-ref name="__darwin_pthread_rwlockattr_t" ref="0x10276b6a0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCNT3H_t" ref="0x103aec240" loc="271:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT3H_t" ref="0x103aec240"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_fast64_t" ref="0x102777980" loc="56:/opt/local/lib/gcc47/gcc/x86_64-apple-darwin16/4.7.4/include-fixed/stdint.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint_fast64_t" ref="0x102777980"/></typename>
      </type-int>
    </typedef>
    <typedef name="uuid_t" ref="0x10311dba0" loc="30:/usr/include/sys/_types/_uuid_t.h">
      <type-array elements="I:16" size="I:16" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
        <typename><typedef-ref name="uuid_t" ref="0x10311dba0"/></typename>
      </type-array>
    </typedef>
    <typedef name="__uint16_t" ref="0x10274f7e0" loc="43:/usr/include/i386/_types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="__uint16_t" ref="0x10274f7e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_char" ref="0x102fdc150" loc="84:/usr/include/sys/types.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="u_char" ref="0x102fdc150"/></typename>
      </type-int>
    </typedef>
    <typedef name="mcu_power_t" ref="0x1036bd1b0" loc="120:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="mcu_power_t" ref="0x1036bd1b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast16_t" ref="0x102775150" loc="50:/opt/local/lib/gcc47/gcc/x86_64-apple-darwin16/4.7.4/include-fixed/stdint.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="int_fast16_t" ref="0x102775150"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1AH_t" ref="0x103aeca80" loc="275:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1AH_t" ref="0x103aeca80"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1CL_t" ref="0x103ae9090" loc="280:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1CL_t" ref="0x103ae9090"/></typename>
      </type-int>
    </typedef>
    <typedef name="fpos_t" ref="0x102bb7ae0" loc="77:/usr/include/stdio.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="fpos_t" ref="0x102bb7ae0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCCR1B_t" ref="0x103af1b80" loc="244:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x103af1280"/>
        <typename><typedef-ref name="Atm128_TCCR1B_t" ref="0x103af1b80"/></typename>
      </type-tag>
    </typedef>
    <typedef name="div_t" ref="0x1029f7640" loc="85:/usr/include/stdlib.h">
      <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x1029f7220"/>
        <typename><typedef-ref name="div_t" ref="0x1029f7640"/></typename>
      </type-tag>
    </typedef>
    <typedef name="segsz_t" ref="0x102fd5580" loc="124:/usr/include/sys/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="segsz_t" ref="0x102fd5580"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_gain_noise_t" ref="0x102df8230" loc="6:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_gain.c">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="sim_gain_noise" ref="0x102df99a0"/>
        <typename><typedef-ref name="sim_gain_noise_t" ref="0x102df8230"/></typename>
      </type-tag>
    </typedef>
    <typedef name="size_t" ref="0x102493a60" loc="213:/opt/local/lib/gcc47/gcc/x86_64-apple-darwin16/4.7.4/include/stddef.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="size_t" ref="0x102493a60"/></typename>
      </type-int>
    </typedef>
    <typedef name="socklen_t" ref="0x10300f480" loc="30:/usr/include/sys/_types/_socklen_t.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="socklen_t" ref="0x10300f480"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_suseconds_t" ref="0x10275ccb0" loc="74:/usr/include/sys/_types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_suseconds_t" ref="0x10275ccb0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__uint8_t" ref="0x10274f090" loc="41:/usr/include/i386/_types.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__uint8_t" ref="0x10274f090"/></typename>
      </type-int>
    </typedef>
    <typedef name="list_hash_t" ref="0x1031c2090" loc="70:/Users/ytc/Documents/workspace/NewMetricOR/src/simclist.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="list_hash_t" ref="0x1031c2090"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCCR0_t" ref="0x103ab9aa0" loc="110:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x103ab9020"/>
        <typename><typedef-ref name="Atm128_TCCR0_t" ref="0x103ab9aa0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="nx_am_id_t" ref="0x102f33270" loc="6:/Users/ytc/Applications/tinyos-main/tos/types/AM.h">
      <documentation loc="34:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/platform_message.h">
        <short>&#10; Defining the platform-independently named packet structures to be the&#10; tossim structures.</short>
        <long>&#10; Defining the platform-independently named packet structures to be the&#10; tossim structures.&#10;&#10; @author Philip Levis&#10; @date   Dec 2 2005&#10; Revision:  $Revision: 1.5 $&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
        <typename><typedef-ref name="nx_am_id_t" ref="0x102f33270"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_ct_rune_t" ref="0x102751420" loc="70:/usr/include/i386/_types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_ct_rune_t" ref="0x102751420"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_fsfilcnt_t" ref="0x102758690" loc="59:/usr/include/sys/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_fsfilcnt_t" ref="0x102758690"/></typename>
      </type-int>
    </typedef>
    <typedef name="message_header_t" ref="0x102f43090" loc="53:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/platform_message.h">
      <type-tag size="I:7" alignment="I:1"><union-ref name="message_header" ref="0x102f44730"/>
        <typename><typedef-ref name="message_header_t" ref="0x102f43090"/></typename>
      </type-tag>
    </typedef>
    <typedef name="gain_entry_t" ref="0x102e05020" loc="57:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_gain.h">
      <documentation loc="32:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_gain.h">
        <short>&#10; The C functions that allow TOSSIM-side code to access the SimMoteP&#10; component.</short>
        <long>&#10; The C functions that allow TOSSIM-side code to access the SimMoteP&#10; component.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-tag size="I:24" alignment="I:8"><struct-ref name="gain_entry" ref="0x102dea510"/>
        <typename><typedef-ref name="gain_entry_t" ref="0x102e05020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="am_addr_t" ref="0x102f317e0" loc="12:/Users/ytc/Applications/tinyos-main/tos/types/AM.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="am_addr_t" ref="0x102f317e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_int32_t" ref="0x102902120" loc="433:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="int" size="I:4" alignment="I:1" network="nx_int32_t">
        <typename><typedef-ref name="nx_int32_t" ref="0x102902120"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ADCH_t" ref="0x1036a88f0" loc="160:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ADCH_t" ref="0x1036a88f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_least16_t" ref="0x1027740d0" loc="43:/opt/local/lib/gcc47/gcc/x86_64-apple-darwin16/4.7.4/include-fixed/stdint.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint_least16_t" ref="0x1027740d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="overheardcountlistnode" ref="0x102fc43a0" loc="55:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricOR.h">
      <type-tag size="I:12" alignment="I:4"><struct-ref name="overheardcountlistnode" ref="0x102fc5870"/>
        <typename><typedef-ref name="overheardcountlistnode" ref="0x102fc43a0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint8_t" ref="0x10276ebc0" loc="31:/usr/include/_types/_uint8_t.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x10276ebc0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_socklen_t" ref="0x102755930" loc="118:/usr/include/i386/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_socklen_t" ref="0x102755930"/></typename>
      </type-int>
    </typedef>
    <typedef name="element_unserializer" ref="0x1031b8050" loc="165:/Users/ytc/Documents/workspace/NewMetricOR/src/simclist.h">
      <documentation loc="150:/Users/ytc/Documents/workspace/NewMetricOR/src/simclist.h">
        <short>&#10; a function for un-serializing an element.</short>
        <long>&#10; a function for un-serializing an element.&#10;&#10; An unserializer function accomplishes the inverse operation of the&#10; serializer function.  An unserializer function is one that gets a&#10; serialized representation of an element and turns it backe to the original&#10; element. The serialized representation is passed as a reference to a buffer&#10; with its data, and the function allocates and returns the buffer containing&#10; the original element, and it sets the length of this buffer into the&#10; integer passed by reference.&#10;&#10; @param data              reference to the buffer with the serialized representation of the element&#10; @param data_len          reference to the location where to store the length of the data in the buffer returned&#10; @return                  reference to a buffer with the original, unserialized representation of the element&#10;</long>
      </documentation>
      <type-pointer size="I:8" alignment="I:8">
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-qualified const="">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
                <typename><typedef-ref name="uint32_t" ref="0x102770400"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <typename><typedef-ref name="element_unserializer" ref="0x1031b8050"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="time_t" ref="0x102d3e410" loc="30:/usr/include/sys/_types/_time_t.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="time_t" ref="0x102d3e410"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_blksize_t" ref="0x102757a00" loc="56:/usr/include/sys/_types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_blksize_t" ref="0x102757a00"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_int8_t" ref="0x1028ffcd0" loc="441:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="signed char" size="I:1" alignment="I:1" network="nxle_int8_t">
        <typename><typedef-ref name="nxle_int8_t" ref="0x1028ffcd0"/></typename>
      </type-int>
    </typedef>
    <typedef name="lldiv_t" ref="0x102a02b00" loc="96:/usr/include/stdlib.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x102a026e0"/>
        <typename><typedef-ref name="lldiv_t" ref="0x102a02b00"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pthread_attr_t" ref="0x1029a4550" loc="30:/usr/include/sys/_pthread/_pthread_attr_t.h">
      <type-tag size="I:64" alignment="I:8"><struct-ref name="_opaque_pthread_attr_t" ref="0x1027606f0"/>
        <typename><typedef-ref name="pthread_attr_t" ref="0x1029a4550"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pid_t" ref="0x10294c880" loc="30:/usr/include/sys/_types/_pid_t.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="pid_t" ref="0x10294c880"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_rwlockattr_t" ref="0x102fd0800" loc="30:/usr/include/sys/_pthread/_pthread_rwlockattr_t.h">
      <type-tag size="I:24" alignment="I:8"><struct-ref name="_opaque_pthread_rwlockattr_t" ref="0x102766020"/>
        <typename><typedef-ref name="pthread_rwlockattr_t" ref="0x102fd0800"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR0_t" ref="0x103b07420" loc="112:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR0_t" ref="0x103b07420"/></typename>
      </type-int>
    </typedef>
    <typedef name="__uint64_t" ref="0x1027507f0" loc="47:/usr/include/i386/_types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__uint64_t" ref="0x1027507f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_int32_t" ref="0x102907bc0" loc="443:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="int" size="I:4" alignment="I:1" network="nxle_int32_t">
        <typename><typedef-ref name="nxle_int32_t" ref="0x102907bc0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_fp_status_t" ref="0x10295e6b0" loc="164:/usr/include/mach/i386/_structs.h">
      <type-tag size="I:2" alignment="I:2"><struct-ref name="__darwin_fp_status" ref="0x102958930"/>
        <typename><typedef-ref name="__darwin_fp_status_t" ref="0x10295e6b0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="_RuneRange" ref="0x102b766b0" loc="70:/usr/include/runetype.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x102b76290"/>
        <typename><typedef-ref name="_RuneRange" ref="0x102b766b0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="va_list" ref="0x102bbb020" loc="102:/opt/local/lib/gcc47/gcc/x86_64-apple-darwin16/4.7.4/include/stdarg.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="V:" alignment="V:"><struct-ref ref="0x10248b530"/></type-tag>
        <typename><typedef-ref name="va_list" ref="0x102bbb020"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="int_fast8_t" ref="0x102774ce0" loc="49:/opt/local/lib/gcc47/gcc/x86_64-apple-darwin16/4.7.4/include-fixed/stdint.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="int_fast8_t" ref="0x102774ce0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_pthread_cond_t" ref="0x102769020" loc="110:/usr/include/sys/_pthread/_pthread_types.h">
      <type-tag size="I:48" alignment="I:8"><struct-ref name="_opaque_pthread_cond_t" ref="0x102761360"/>
        <typename><typedef-ref name="__darwin_pthread_cond_t" ref="0x102769020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="tossim_metadata_t" ref="0x102f4d090" loc="30:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimRadioMsg.h">
      <type-tag size="I:11" alignment="I:1"><nx_struct-ref name="tossim_metadata" ref="0x102f509b0"/>
        <typename><typedef-ref name="tossim_metadata_t" ref="0x102f4d090"/></typename>
      </type-tag>
    </typedef>
    <typedef name="element_hash_computer" ref="0x1031bce40" loc="128:/Users/ytc/Documents/workspace/NewMetricOR/src/simclist.h">
      <documentation loc="119:/Users/ytc/Documents/workspace/NewMetricOR/src/simclist.h">
        <short>&#10; a function computing the hash of elements.</short>
        <long>&#10; a function computing the hash of elements.&#10;&#10; An hash computing function is a function that:&#10;      -# receives the reference to an element el&#10;      -# returns a hash value for el&#10;&#10; It is responsability of the function to handle possible NULL values.&#10;</long>
      </documentation>
      <type-pointer size="I:8" alignment="I:8">
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="list_hash_t" ref="0x1031c2090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-qualified const="">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <typename><typedef-ref name="element_hash_computer" ref="0x1031bce40"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="in_port_t" ref="0x102fd60d0" loc="30:/usr/include/sys/_types/_in_port_t.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="in_port_t" ref="0x102fd60d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_off_t" ref="0x10275bb20" loc="71:/usr/include/sys/_types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__darwin_off_t" ref="0x10275bb20"/></typename>
      </type-int>
    </typedef>
    <typedef name="am_id_t" ref="0x102f31020" loc="10:/Users/ytc/Applications/tinyos-main/tos/types/AM.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="am_id_t" ref="0x102f31020"/></typename>
      </type-int>
    </typedef>
    <typedef name="intmax_t" ref="0x102778630" loc="32:/usr/include/_types/_intmax_t.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="intmax_t" ref="0x102778630"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128TimerCtrlCapture_t" ref="0x103af16a0" loc="241:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x103af1280"/>
        <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x103af16a0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__darwin_mode_t" ref="0x10275b710" loc="70:/usr/include/sys/_types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="__darwin_mode_t" ref="0x10275b710"/></typename>
      </type-int>
    </typedef>
    <typedef name="element_serializer" ref="0x1031bbdd0" loc="148:/Users/ytc/Documents/workspace/NewMetricOR/src/simclist.h">
      <documentation loc="130:/Users/ytc/Documents/workspace/NewMetricOR/src/simclist.h">
        <short>&#10; a function for serializing an element.</short>
        <long>&#10; a function for serializing an element.&#10;&#10; A serializer function is one that gets a reference to an element,&#10; and returns a reference to a buffer that contains its serialization&#10; along with the length of this buffer.&#10; It is responsability of the function to handle possible NULL values,&#10; returning a NULL buffer and a 0 buffer length.&#10;&#10; These functions have 3 goals:&#10;  -# &#34;freeze&#34; and &#34;flatten&#34; the memory representation of the element&#10;  -# provide a portable (wrt byte order, or type size) representation of the element, if the dump can be used on different sw/hw combinations&#10;  -# possibly extract a compressed representation of the element&#10;&#10; @param el                reference to the element data&#10; @param serialize_buffer  reference to fill with the length of the buffer&#10; @return                  reference to the buffer with the serialized data&#10;</long>
      </documentation>
      <type-pointer size="I:8" alignment="I:8">
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-qualified const="">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
                <typename><typedef-ref name="uint32_t" ref="0x102770400"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <typename><typedef-ref name="element_serializer" ref="0x1031bbdd0"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="__darwin_ino64_t" ref="0x102759460" loc="62:/usr/include/sys/_types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__darwin_ino64_t" ref="0x102759460"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCCR2_t" ref="0x103b078a0" loc="114:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x103ab9020"/>
        <typename><typedef-ref name="Atm128_TCCR2_t" ref="0x103b078a0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="serial_metadata_t" ref="0x102f443d0" loc="138:/Users/ytc/Applications/tinyos-main/tos/lib/serial/Serial.h">
      <type-tag size="I:1" alignment="I:1"><nx_struct-ref name="serial_metadata" ref="0x102f45d90"/>
        <typename><typedef-ref name="serial_metadata_t" ref="0x102f443d0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint16_t" ref="0x102770020" loc="31:/usr/include/_types/_uint16_t.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x102770020"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_int8_t" ref="0x102a45920" loc="30:/usr/include/sys/_types/_u_int8_t.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="u_int8_t" ref="0x102a45920"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT1L_t" ref="0x103aeddf0" loc="270:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT1L_t" ref="0x103aeddf0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR3CH_t" ref="0x103ae8580" loc="287:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3CH_t" ref="0x103ae8580"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_am_group_t" ref="0x102f337a0" loc="7:/Users/ytc/Applications/tinyos-main/tos/types/AM.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
        <typename><typedef-ref name="nx_am_group_t" ref="0x102f337a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="message_metadata_t" ref="0x102f414a0" loc="61:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/platform_message.h">
      <type-tag size="I:11" alignment="I:1"><union-ref name="message_metadata" ref="0x102f43dd0"/>
        <typename><typedef-ref name="message_metadata_t" ref="0x102f414a0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="fd_mask" ref="0x102fd4310" loc="185:/usr/include/sys/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="fd_mask" ref="0x102fd4310"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_time_t" ref="0x102757170" loc="120:/usr/include/i386/_types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__darwin_time_t" ref="0x102757170"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_uint32_t" ref="0x102901e60" loc="437:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:1" network="nx_uint32_t">
        <typename><typedef-ref name="nx_uint32_t" ref="0x102901e60"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_uuid_t" ref="0x10275dad0" loc="77:/usr/include/sys/_types.h">
      <type-array elements="I:16" size="I:16" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
        <typename><typedef-ref name="__darwin_uuid_t" ref="0x10275dad0"/></typename>
      </type-array>
    </typedef>
    <typedef name="__darwin_dev_t" ref="0x102757e10" loc="57:/usr/include/sys/_types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_dev_t" ref="0x102757e10"/></typename>
      </type-int>
    </typedef>
    <typedef name="hashtable_t" ref="0x102c5c600" loc="10:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/hashtable.h">
      <type-tag size="V:" alignment="V:"><struct-ref name="hashtable" ref="0x102c5c210"/>
        <typename><typedef-ref name="hashtable_t" ref="0x102c5c600"/></typename>
      </type-tag>
    </typedef>
    <typedef name="element_meter" ref="0x1031bc2a0" loc="117:/Users/ytc/Documents/workspace/NewMetricOR/src/simclist.h">
      <documentation loc="108:/Users/ytc/Documents/workspace/NewMetricOR/src/simclist.h">
        <short>&#10; an element lenght meter.</short>
        <long>&#10; an element lenght meter.&#10;&#10; An element meter is a function that:&#10;      -# receives the reference to an element el&#10;      -# returns its size in bytes&#10;&#10; It is responsability of the function to handle possible NULL values.&#10;</long>
      </documentation>
      <type-pointer size="I:8" alignment="I:8">
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
            <typename><typedef-ref name="size_t" ref="0x102493a60"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-qualified const="">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <typename><typedef-ref name="element_meter" ref="0x1031bc2a0"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="dev_t" ref="0x102a50df0" loc="30:/usr/include/sys/_types/_dev_t.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="dev_t" ref="0x102a50df0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_rune_t" ref="0x102754ce0" loc="109:/usr/include/i386/_types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_rune_t" ref="0x102754ce0"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_int32_t" ref="0x102a43130" loc="30:/usr/include/sys/_types/_u_int32_t.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="u_int32_t" ref="0x102a43130"/></typename>
      </type-int>
    </typedef>
    <typedef name="fsfilcnt_t" ref="0x102fcea60" loc="30:/usr/include/sys/_types/_fsfilcnt_t.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="fsfilcnt_t" ref="0x102fcea60"/></typename>
      </type-int>
    </typedef>
    <typedef name="sae_associd_t" ref="0x10300fa00" loc="286:/usr/include/sys/socket.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="sae_associd_t" ref="0x10300fa00"/></typename>
      </type-int>
    </typedef>
    <typedef name="ftrimactivefile_t" ref="0x102fdf8f0" loc="439:/usr/include/sys/fcntl.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="ftrimactivefile" ref="0x102fdf020"/>
        <typename><typedef-ref name="ftrimactivefile_t" ref="0x102fdf8f0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint_fast8_t" ref="0x102775d20" loc="53:/opt/local/lib/gcc47/gcc/x86_64-apple-darwin16/4.7.4/include-fixed/stdint.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint_fast8_t" ref="0x102775d20"/></typename>
      </type-int>
    </typedef>
    <typedef name="idtype_t" ref="0x10294c450" loc="83:/usr/include/sys/wait.h">
      <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x10294ea00"/>
        <typename><typedef-ref name="idtype_t" ref="0x10294c450"/></typename>
      </type-tag>
    </typedef>
    <typedef name="fsignatures_t" ref="0x102fe5610" loc="391:/usr/include/sys/fcntl.h">
      <type-tag size="I:24" alignment="I:8"><struct-ref name="fsignatures" ref="0x102fe6a30"/>
        <typename><typedef-ref name="fsignatures_t" ref="0x102fe5610"/></typename>
      </type-tag>
    </typedef>
    <typedef name="_RuneCharClass" ref="0x102b752f0" loc="75:/usr/include/runetype.h">
      <type-tag size="I:20" alignment="I:4"><struct-ref ref="0x102b76e80"/>
        <typename><typedef-ref name="_RuneCharClass" ref="0x102b752f0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128Assr_t" ref="0x103b03020" loc="130:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x103b05ad0"/>
        <typename><typedef-ref name="Atm128Assr_t" ref="0x103b03020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR3BL_t" ref="0x103ae8170" loc="286:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3BL_t" ref="0x103ae8170"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_int16_t" ref="0x1028fc9e0" loc="432:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="short" size="I:2" alignment="I:1" network="nx_int16_t">
        <typename><typedef-ref name="nx_int16_t" ref="0x1028fc9e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="NeighborSet" ref="0x102fc54c0" loc="49:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricOR.h">
      <type-tag size="I:20" alignment="I:4"><struct-ref name="NeighborSetNode" ref="0x102fc6650"/>
        <typename><typedef-ref name="NeighborSet" ref="0x102fc54c0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__darwin_pid_t" ref="0x10275c020" loc="72:/usr/include/sys/_types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_pid_t" ref="0x10275c020"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ICR1L_t" ref="0x103ae61f0" loc="292:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ICR1L_t" ref="0x103ae61f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="ucontext_t" ref="0x1029a02d0" loc="48:/usr/include/sys/_types/_ucontext.h">
      <type-tag size="I:56" alignment="I:8"><struct-ref name="__darwin_ucontext" ref="0x1029a39a0"/>
        <typename><typedef-ref name="ucontext_t" ref="0x1029a02d0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="qaddr_t" ref="0x102fd9020" loc="97:/usr/include/sys/types.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="quad_t" ref="0x102fdab40"/></typename>
        </type-int>
        <typename><typedef-ref name="qaddr_t" ref="0x102fd9020"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="register_t" ref="0x102a43930" loc="87:/usr/include/i386/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="register_t" ref="0x102a43930"/></typename>
      </type-int>
    </typedef>
    <typedef name="fpunchhole_t" ref="0x102fe1b50" loc="433:/usr/include/sys/fcntl.h">
      <type-tag size="I:24" alignment="I:8"><struct-ref name="fpunchhole" ref="0x102fe2d40"/>
        <typename><typedef-ref name="fpunchhole_t" ref="0x102fe1b50"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__darwin_pthread_key_t" ref="0x102769a00" loc="112:/usr/include/sys/_pthread/_pthread_types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__darwin_pthread_key_t" ref="0x102769a00"/></typename>
      </type-int>
    </typedef>
    <typedef name="element_comparator" ref="0x1031bf730" loc="93:/Users/ytc/Documents/workspace/NewMetricOR/src/simclist.h">
      <documentation loc="84:/Users/ytc/Documents/workspace/NewMetricOR/src/simclist.h">
        <short>&#10; a comparator of elements.</short>
        <long>&#10; a comparator of elements.&#10;&#10; A comparator of elements is a function that:&#10;      -# receives two references to elements a and b&#10;      -# returns {&#60;0, 0, >0} if (a > b), (a == b), (a &#60; b) respectively&#10;&#10; It is responsability of the function to handle possible NULL values.&#10;</long>
      </documentation>
      <type-pointer size="I:8" alignment="I:8">
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-qualified const="">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:8" alignment="I:8">
              <type-qualified const="">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <typename><typedef-ref name="element_comparator" ref="0x1031bf730"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="Atm128_ETIMSK_t" ref="0x103ae3020" loc="309:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x103ae4b70"/>
        <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x103ae3020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="rlim_t" ref="0x1029c4b90" loc="89:/usr/include/sys/resource.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="rlim_t" ref="0x1029c4b90"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_natural_t" ref="0x102751020" loc="50:/usr/include/i386/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_natural_t" ref="0x102751020"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128TimerControl_t" ref="0x103ab9440" loc="108:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <documentation loc="11:/Users/ytc/Applications/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x103ab9020"/>
        <typename><typedef-ref name="Atm128TimerControl_t" ref="0x103ab9440"/></typename>
      </type-tag>
    </typedef>
    <typedef name="ssize_t" ref="0x10292f790" loc="30:/usr/include/sys/_types/_ssize_t.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="ssize_t" ref="0x10292f790"/></typename>
      </type-int>
    </typedef>
    <typedef name="sig_atomic_t" ref="0x10294b230" loc="39:/usr/include/i386/signal.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="sig_atomic_t" ref="0x10294b230"/></typename>
      </type-int>
    </typedef>
    <typedef name="int32_t" ref="0x10276e420" loc="30:/usr/include/sys/_types/_int32_t.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="int32_t" ref="0x10276e420"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_mbstate_t" ref="0x1027534e0" loc="81:/usr/include/i386/_types.h">
      <type-tag size="I:128" alignment="I:8"><union-ref ref="0x102751c10"/>
        <typename><typedef-ref name="__darwin_mbstate_t" ref="0x1027534e0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint64_t" ref="0x102770820" loc="31:/usr/include/_types/_uint64_t.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint64_t" ref="0x102770820"/></typename>
      </type-int>
    </typedef>
    <typedef name="syscall_arg_t" ref="0x102a509e0" loc="111:/usr/include/i386/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="syscall_arg_t" ref="0x102a509e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_long" ref="0x102fdcc40" loc="88:/usr/include/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="u_long" ref="0x102fdcc40"/></typename>
      </type-int>
    </typedef>
    <typedef name="__nesc_atomic_t" ref="0x1036882f0" loc="94:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__nesc_atomic_t" ref="0x1036882f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_sigset_t" ref="0x10275c860" loc="73:/usr/include/sys/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_sigset_t" ref="0x10275c860"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_int64_t" ref="0x102905320" loc="444:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="long long" size="I:8" alignment="I:1" network="nxle_int64_t">
        <typename><typedef-ref name="nxle_int64_t" ref="0x102905320"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_int16_t" ref="0x102907490" loc="442:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="short" size="I:2" alignment="I:1" network="nxle_int16_t">
        <typename><typedef-ref name="nxle_int16_t" ref="0x102907490"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_t" ref="0x102fd0c60" loc="30:/usr/include/sys/_pthread/_pthread_t.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:8192" alignment="I:8"><struct-ref name="_opaque_pthread_t" ref="0x1027669a0"/></type-tag>
        <typename><typedef-ref name="pthread_t" ref="0x102fd0c60"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="imaxdiv_t" ref="0x10277c8b0" loc="242:/usr/include/inttypes.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x10277c490"/>
        <typename><typedef-ref name="imaxdiv_t" ref="0x10277c8b0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR1A_t" ref="0x103af7500" loc="205:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x103af9b40"/>
        <typename><typedef-ref name="Atm128_TCCR1A_t" ref="0x103af7500"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint_least32_t" ref="0x1027744e0" loc="44:/opt/local/lib/gcc47/gcc/x86_64-apple-darwin16/4.7.4/include-fixed/stdint.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint_least32_t" ref="0x1027744e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_pthread_mutex_t" ref="0x10276a020" loc="113:/usr/include/sys/_pthread/_pthread_types.h">
      <type-tag size="I:64" alignment="I:8"><struct-ref name="_opaque_pthread_mutex_t" ref="0x102762730"/>
        <typename><typedef-ref name="__darwin_pthread_mutex_t" ref="0x10276a020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__mbstate_t" ref="0x102753090" loc="79:/usr/include/i386/_types.h">
      <type-tag size="I:128" alignment="I:8"><union-ref ref="0x102751c10"/>
        <typename><typedef-ref name="__mbstate_t" ref="0x102753090"/></typename>
      </type-tag>
    </typedef>
    <typedef name="wint_t" ref="0x102b67990" loc="31:/usr/include/sys/_types/_wint_t.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="wint_t" ref="0x102b67990"/></typename>
      </type-int>
    </typedef>
    <typedef name="stack_t" ref="0x1029a3620" loc="42:/usr/include/sys/_types/_sigaltstack.h">
      <type-tag size="I:24" alignment="I:8"><struct-ref name="__darwin_sigaltstack" ref="0x1029a4910"/>
        <typename><typedef-ref name="stack_t" ref="0x1029a3620"/></typename>
      </type-tag>
    </typedef>
    <typedef name="message_footer_t" ref="0x102f43a50" loc="57:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/platform_message.h">
      <type-tag size="I:2" alignment="I:1"><union-ref name="message_footer" ref="0x102f433f0"/>
        <typename><typedef-ref name="message_footer_t" ref="0x102f43a50"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR3BH_t" ref="0x103ae9ce0" loc="285:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3BH_t" ref="0x103ae9ce0"/></typename>
      </type-int>
    </typedef>
    <typedef name="fsblkcnt_t" ref="0x102fce5f0" loc="30:/usr/include/sys/_types/_fsblkcnt_t.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="fsblkcnt_t" ref="0x102fce5f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="fbootstraptransfer_t" ref="0x102fde870" loc="447:/usr/include/sys/fcntl.h">
      <type-tag size="I:24" alignment="I:8"><struct-ref name="fbootstraptransfer" ref="0x102fdfca0"/>
        <typename><typedef-ref name="fbootstraptransfer_t" ref="0x102fde870"/></typename>
      </type-tag>
    </typedef>
    <typedef name="off_t" ref="0x102c0e1e0" loc="30:/usr/include/sys/_types/_off_t.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="off_t" ref="0x102c0e1e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="DataPayload" ref="0x102fc62e0" loc="41:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricOR.h">
      <type-tag size="I:8" alignment="I:1"><nx_struct-ref name="DataPayload" ref="0x102fc74a0"/>
        <typename><typedef-ref name="DataPayload" ref="0x102fc62e0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="ct_rune_t" ref="0x1029f87c0" loc="31:/usr/include/sys/_types/_ct_rune_t.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="ct_rune_t" ref="0x1029f87c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_int64_t" ref="0x102902830" loc="434:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="long long" size="I:8" alignment="I:1" network="nx_int64_t">
        <typename><typedef-ref name="nx_int64_t" ref="0x102902830"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_pthread_once_t" ref="0x10276ab20" loc="115:/usr/include/sys/_pthread/_pthread_types.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="_opaque_pthread_once_t" ref="0x102764b80"/>
        <typename><typedef-ref name="__darwin_pthread_once_t" ref="0x10276ab20"/></typename>
      </type-tag>
    </typedef>
    <typedef name="quad_t" ref="0x102fdab40" loc="96:/usr/include/sys/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="quad_t" ref="0x102fdab40"/></typename>
      </type-int>
    </typedef>
    <typedef name="sa_family_t" ref="0x10300f020" loc="30:/usr/include/sys/_types/_sa_family_t.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="sa_family_t" ref="0x10300f020"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128TimerCtrlClock_t" ref="0x103aeebb0" loc="259:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x103aee790"/>
        <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x103aeebb0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="swblk_t" ref="0x102fd5940" loc="125:/usr/include/sys/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="swblk_t" ref="0x102fd5940"/></typename>
      </type-int>
    </typedef>
    <typedef name="__int8_t" ref="0x1024a6ad0" loc="37:/usr/include/i386/_types.h">
      <documentation loc="691:/usr/include/sys/cdefs.h">
        <short>***************************************&#10;  Public darwin-specific feature macros&#10;****************************************</short>
      </documentation>
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__int8_t" ref="0x1024a6ad0"/></typename>
      </type-int>
    </typedef>
    <typedef name="element_seeker" ref="0x1031be650" loc="106:/Users/ytc/Documents/workspace/NewMetricOR/src/simclist.h">
      <documentation loc="95:/Users/ytc/Documents/workspace/NewMetricOR/src/simclist.h">
        <short>&#10; a seeker of elements.</short>
        <long>&#10; a seeker of elements.&#10;&#10; An element seeker is a function that:&#10;      -# receives a reference to an element el&#10;      -# receives a reference to some indicator data&#10;      -# returns non-0 if the element matches the indicator, 0 otherwise&#10;&#10; It is responsability of the function to handle possible NULL values in any&#10; argument.&#10;</long>
      </documentation>
      <type-pointer size="I:8" alignment="I:8">
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-qualified const="">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:8" alignment="I:8">
              <type-qualified const="">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <typename><typedef-ref name="element_seeker" ref="0x1031be650"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="uint_fast16_t" ref="0x102777160" loc="54:/opt/local/lib/gcc47/gcc/x86_64-apple-darwin16/4.7.4/include-fixed/stdint.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint_fast16_t" ref="0x102777160"/></typename>
      </type-int>
    </typedef>
    <typedef name="sa_endpoints_t" ref="0x10300b670" loc="306:/usr/include/sys/socket.h">
      <type-tag size="I:40" alignment="I:8"><struct-ref name="sa_endpoints" ref="0x10300c1e0"/>
        <typename><typedef-ref name="sa_endpoints_t" ref="0x10300b670"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR3AL_t" ref="0x103ae98d0" loc="284:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3AL_t" ref="0x103ae98d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_wint_t" ref="0x1027550d0" loc="112:/usr/include/i386/_types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_wint_t" ref="0x1027550d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="uintmax_t" ref="0x102778a50" loc="32:/usr/include/_types/_uintmax_t.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uintmax_t" ref="0x102778a50"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_am_addr_t" ref="0x102f33bb0" loc="8:/Users/ytc/Applications/tinyos-main/tos/types/AM.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
        <typename><typedef-ref name="nx_am_addr_t" ref="0x102f33bb0"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_uint16_t" ref="0x102901740" loc="436:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
        <typename><typedef-ref name="nx_uint16_t" ref="0x102901740"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_quad_t" ref="0x102fda790" loc="95:/usr/include/sys/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="u_quad_t" ref="0x102fda790"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_fsblkcnt_t" ref="0x102758270" loc="58:/usr/include/sys/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_fsblkcnt_t" ref="0x102758270"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast32_t" ref="0x102775540" loc="51:/opt/local/lib/gcc47/gcc/x86_64-apple-darwin16/4.7.4/include-fixed/stdint.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="int_fast32_t" ref="0x102775540"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_least16_t" ref="0x102772090" loc="39:/opt/local/lib/gcc47/gcc/x86_64-apple-darwin16/4.7.4/include-fixed/stdint.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="int_least16_t" ref="0x102772090"/></typename>
      </type-int>
    </typedef>
    <typedef name="useconds_t" ref="0x102fd5e70" loc="30:/usr/include/sys/_types/_useconds_t.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="useconds_t" ref="0x102fd5e70"/></typename>
      </type-int>
    </typedef>
    <typedef name="ldiv_t" ref="0x102a02090" loc="90:/usr/include/stdlib.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x1029f7c00"/>
        <typename><typedef-ref name="ldiv_t" ref="0x102a02090"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_int64_t" ref="0x102a43550" loc="30:/usr/include/sys/_types/_u_int64_t.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="u_int64_t" ref="0x102a43550"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_int16_t" ref="0x102a45d00" loc="30:/usr/include/sys/_types/_u_int16_t.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="u_int16_t" ref="0x102a45d00"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TIFR_t" ref="0x103afd180" loc="163:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x103affd30"/>
        <typename><typedef-ref name="Atm128_TIFR_t" ref="0x103afd180"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__darwin_va_list" ref="0x1027544a0" loc="98:/usr/include/i386/_types.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="V:" alignment="V:"><struct-ref ref="0x10248b530"/></type-tag>
        <typename><typedef-ref name="__darwin_va_list" ref="0x1027544a0"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="siginfo_t" ref="0x1029a6cd0" loc="188:/usr/include/sys/signal.h">
      <type-tag size="I:104" alignment="I:8"><struct-ref name="__siginfo" ref="0x1029a7020"/>
        <typename><typedef-ref name="siginfo_t" ref="0x1029a6cd0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__darwin_id_t" ref="0x102759020" loc="61:/usr/include/sys/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_id_t" ref="0x102759020"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_wctype_t" ref="0x10276d840" loc="42:/usr/include/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_wctype_t" ref="0x10276d840"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCCR3A_t" ref="0x103af79e0" loc="208:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x103af9b40"/>
        <typename><typedef-ref name="Atm128_TCCR3A_t" ref="0x103af79e0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint_least64_t" ref="0x1027748f0" loc="45:/opt/local/lib/gcc47/gcc/x86_64-apple-darwin16/4.7.4/include-fixed/stdint.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint_least64_t" ref="0x1027748f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__int32_t" ref="0x10274fb60" loc="44:/usr/include/i386/_types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__int32_t" ref="0x10274fb60"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_ptrdiff_t" ref="0x102753b00" loc="84:/usr/include/i386/_types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__darwin_ptrdiff_t" ref="0x102753b00"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_intptr_t" ref="0x102750bc0" loc="49:/usr/include/i386/_types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__darwin_intptr_t" ref="0x102750bc0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_pthread_condattr_t" ref="0x1027695c0" loc="111:/usr/include/sys/_pthread/_pthread_types.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="_opaque_pthread_condattr_t" ref="0x102761d40"/>
        <typename><typedef-ref name="__darwin_pthread_condattr_t" ref="0x1027695c0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pthread_rwlock_t" ref="0x102fd02c0" loc="30:/usr/include/sys/_pthread/_pthread_rwlock_t.h">
      <type-tag size="I:200" alignment="I:8"><struct-ref name="_opaque_pthread_rwlock_t" ref="0x1027655a0"/>
        <typename><typedef-ref name="pthread_rwlock_t" ref="0x102fd02c0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="double_t" ref="0x102a82020" loc="60:/opt/local/lib/gcc47/gcc/x86_64-apple-darwin16/4.7.4/include-fixed/math.h">
      <type-float cname="double" size="I:8" alignment="I:8">
        <typename><typedef-ref name="double_t" ref="0x102a82020"/></typename>
      </type-float>
    </typedef>
    <typedef name="bool" ref="0x102c30190" loc="65:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/tos.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x102c30190"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_noise_hash_t" ref="0x102d6e4f0" loc="71:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_noise.h">
      <documentation loc="32:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_noise.h">
        <short>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.&#10;&#10; @author Hyungjune Lee&#10; @date   Oct 13 2006&#10;</long>
      </documentation>
      <type-tag size="I:488" alignment="I:8"><struct-ref name="sim_noise_hash_t" ref="0x102d6f0c0"/>
        <typename><typedef-ref name="sim_noise_hash_t" ref="0x102d6e4f0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="rusage_info_t" ref="0x1029c1d40" loc="192:/usr/include/sys/resource.h">
      <documentation loc="132:/usr/include/sys/resource.h">
        <short>***&#10; RESOURCE USAGE&#10;</short>
      </documentation>
      <type-pointer size="I:8" alignment="I:8">
        <type-void size="I:1" alignment="I:1"></type-void>
        <typename><typedef-ref name="rusage_info_t" ref="0x1029c1d40"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="__darwin_pthread_mutexattr_t" ref="0x10276a5d0" loc="114:/usr/include/sys/_pthread/_pthread_types.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="_opaque_pthread_mutexattr_t" ref="0x1027641d0"/>
        <typename><typedef-ref name="__darwin_pthread_mutexattr_t" ref="0x10276a5d0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__darwin_pthread_t" ref="0x10276bbd0" loc="118:/usr/include/sys/_pthread/_pthread_types.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:8192" alignment="I:8"><struct-ref name="_opaque_pthread_t" ref="0x1027669a0"/></type-tag>
        <typename><typedef-ref name="__darwin_pthread_t" ref="0x10276bbd0"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="__gnuc_va_list" ref="0x102c5e9e0" loc="40:/opt/local/lib/gcc47/gcc/x86_64-apple-darwin16/4.7.4/include/stdarg.h">
      <documentation loc="32:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_log.h">
        <short>&#10; The TOSSIM logging system.</short>
        <long>&#10; The TOSSIM logging system. Unlike in TinyOS 1.x, this logging&#10; system supports an arbitrary number of channels, denoted by&#10; a string identifier. A channel can be connected to any number&#10; of outputs, and a debug statement can be associated with any&#10; number of channels.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="V:" alignment="V:"><struct-ref ref="0x10248b530"/></type-tag>
        <typename><typedef-ref name="__gnuc_va_list" ref="0x102c5e9e0"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="nxle_uint8_t" ref="0x102905a50" loc="445:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nxle_uint8_t">
        <typename><typedef-ref name="nxle_uint8_t" ref="0x102905a50"/></typename>
      </type-int>
    </typedef>
    <typedef name="user_off_t" ref="0x102a505b0" loc="103:/usr/include/i386/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="user_off_t" ref="0x102a505b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR3AH_t" ref="0x103ae94c0" loc="283:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3AH_t" ref="0x103ae94c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR3CL_t" ref="0x103ae8990" loc="288:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3CL_t" ref="0x103ae8990"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ICR3H_t" ref="0x103ae65f0" loc="293:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ICR3H_t" ref="0x103ae65f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="int64_t" ref="0x10276e7f0" loc="30:/usr/include/sys/_types/_int64_t.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int64_t" ref="0x10276e7f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="int16_t" ref="0x10276e090" loc="30:/usr/include/sys/_types/_int16_t.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="int16_t" ref="0x10276e090"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_mach_port_name_t" ref="0x102759da0" loc="68:/usr/include/sys/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_mach_port_name_t" ref="0x102759da0"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast64_t" ref="0x102775930" loc="52:/opt/local/lib/gcc47/gcc/x86_64-apple-darwin16/4.7.4/include-fixed/stdint.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int_fast64_t" ref="0x102775930"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_wctrans_t" ref="0x10276d400" loc="40:/usr/include/_types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_wctrans_t" ref="0x10276d400"/></typename>
      </type-int>
    </typedef>
    <typedef name="uid_t" ref="0x1029a0b70" loc="30:/usr/include/sys/_types/_uid_t.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uid_t" ref="0x1029a0b70"/></typename>
      </type-int>
    </typedef>
    <typedef name="user_time_t" ref="0x102a501d0" loc="102:/usr/include/i386/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="user_time_t" ref="0x102a501d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="message_t" ref="0x102f40de0" loc="19:/Users/ytc/Applications/tinyos-main/tos/types/message.h">
      <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x102f417d0"/>
        <typename><typedef-ref name="message_t" ref="0x102f40de0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="nx_uint64_t" ref="0x1028ff5b0" loc="438:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:1" network="nx_uint64_t">
        <typename><typedef-ref name="nx_uint64_t" ref="0x1028ff5b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TIMSK_t" ref="0x103b018f0" loc="146:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x103b014d0"/>
        <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x103b018f0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="sae_connid_t" ref="0x10300fe10" loc="290:/usr/include/sys/socket.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="sae_connid_t" ref="0x10300fe10"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_useconds_t" ref="0x10275d5b0" loc="76:/usr/include/sys/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_useconds_t" ref="0x10275d5b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="sig_t" ref="0x1029b6e40" loc="331:/usr/include/sys/signal.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </function-parameters>
        </type-function>
        <typename><typedef-ref name="sig_t" ref="0x1029b6e40"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="node_t" ref="0x102ce1180" loc="65:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/heap.c">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="node" ref="0x102cca8e0"/>
        <typename><typedef-ref name="node_t" ref="0x102ce1180"/></typename>
      </type-tag>
    </typedef>
    <typedef name="fchecklv_t" ref="0x102fe3620" loc="407:/usr/include/sys/fcntl.h">
      <type-tag size="I:24" alignment="I:8"><struct-ref name="fchecklv" ref="0x102fe5960"/>
        <typename><typedef-ref name="fchecklv_t" ref="0x102fe3620"/></typename>
      </type-tag>
    </typedef>
    <typedef name="nx_int8_t" ref="0x1028fc2d0" loc="431:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="signed char" size="I:1" alignment="I:1" network="nx_int8_t">
        <typename><typedef-ref name="nx_int8_t" ref="0x1028fc2d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="fstore_t" ref="0x102fe29e0" loc="425:/usr/include/sys/fcntl.h">
      <type-tag size="I:32" alignment="I:8"><struct-ref name="fstore" ref="0x102fe3970"/>
        <typename><typedef-ref name="fstore_t" ref="0x102fe29e0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="filesec_property_t" ref="0x102fffe20" loc="507:/usr/include/sys/fcntl.h">
      <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x103001ed0"/>
        <typename><typedef-ref name="filesec_property_t" ref="0x102fffe20"/></typename>
      </type-tag>
    </typedef>
    <typedef name="sim_noise_node_t" ref="0x102d857e0" loc="83:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/sim_noise.h">
      <type-tag size="I:80" alignment="I:8"><struct-ref name="sim_noise_node_t" ref="0x102d6e940"/>
        <typename><typedef-ref name="sim_noise_node_t" ref="0x102d857e0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="id_t" ref="0x10294cc80" loc="30:/usr/include/sys/_types/_id_t.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="id_t" ref="0x10294cc80"/></typename>
      </type-int>
    </typedef>
    <typedef name="user_ssize_t" ref="0x102a525d0" loc="99:/usr/include/i386/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="user_ssize_t" ref="0x102a525d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_uuid_string_t" ref="0x10275f020" loc="78:/usr/include/sys/_types.h">
      <type-array elements="I:37" size="I:37" alignment="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        <typename><typedef-ref name="__darwin_uuid_string_t" ref="0x10275f020"/></typename>
      </type-array>
    </typedef>
    <typedef name="pthread_mutex_t" ref="0x102fd12f0" loc="30:/usr/include/sys/_pthread/_pthread_mutex_t.h">
      <type-tag size="I:64" alignment="I:8"><struct-ref name="_opaque_pthread_mutex_t" ref="0x102762730"/>
        <typename><typedef-ref name="pthread_mutex_t" ref="0x102fd12f0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pthread_cond_t" ref="0x102fd48d0" loc="30:/usr/include/sys/_pthread/_pthread_cond_t.h">
      <type-tag size="I:48" alignment="I:8"><struct-ref name="_opaque_pthread_cond_t" ref="0x102761360"/>
        <typename><typedef-ref name="pthread_cond_t" ref="0x102fd48d0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pthread_key_t" ref="0x102fce160" loc="30:/usr/include/sys/_pthread/_pthread_key_t.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="pthread_key_t" ref="0x102fce160"/></typename>
      </type-int>
    </typedef>
    <typedef name="ino_t" ref="0x102fd64e0" loc="30:/usr/include/sys/_types/_ino_t.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="ino_t" ref="0x102fd64e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="daddr_t" ref="0x102fd9790" loc="100:/usr/include/sys/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="daddr_t" ref="0x102fd9790"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_uint32_t" ref="0x102904950" loc="447:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:1" network="nxle_uint32_t">
        <typename><typedef-ref name="nxle_uint32_t" ref="0x102904950"/></typename>
      </type-int>
    </typedef>
    <typedef name="key_t" ref="0x102fd6d00" loc="30:/usr/include/sys/_types/_key_t.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="key_t" ref="0x102fd6d00"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_mutexattr_t" ref="0x102fd1810" loc="30:/usr/include/sys/_pthread/_pthread_mutexattr_t.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="_opaque_pthread_mutexattr_t" ref="0x1027641d0"/>
        <typename><typedef-ref name="pthread_mutexattr_t" ref="0x102fd1810"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uart_id_t" ref="0x102f4d4e0" loc="83:/Users/ytc/Applications/tinyos-main/tos/lib/serial/Serial.h">
      <documentation loc="71:/Users/ytc/Applications/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uart_id_t" ref="0x102f4d4e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="_RuneLocale" ref="0x102b81ab0" loc="106:/usr/include/runetype.h">
      <type-tag size="I:3208" alignment="I:8"><struct-ref ref="0x102b70be0"/>
        <typename><typedef-ref name="_RuneLocale" ref="0x102b81ab0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__darwin_pthread_rwlock_t" ref="0x10276b0d0" loc="116:/usr/include/sys/_pthread/_pthread_types.h">
      <type-tag size="I:200" alignment="I:8"><struct-ref name="_opaque_pthread_rwlock_t" ref="0x1027655a0"/>
        <typename><typedef-ref name="__darwin_pthread_rwlock_t" ref="0x10276b0d0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128TimerCtrlCompare_t" ref="0x103af7020" loc="202:/Users/ytc/Applications/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x103af9b40"/>
        <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x103af7020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="list_dump_info_t" ref="0x1031c1980" loc="81:/Users/ytc/Documents/workspace/NewMetricOR/src/simclist.h">
      <type-tag size="I:40" alignment="I:8"><struct-ref ref="0x1031c11f0"/>
        <typename><typedef-ref name="list_dump_info_t" ref="0x1031c1980"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__nesc_sillytask_sendDataPayload" ref="0x1031c6970" loc="519:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-array elements="I:4" size="I:16" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_updateEDC" ref="0x102ff25c0" loc="598:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-array elements="I:7" size="I:28" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_forward" ref="0x1032db9d0" loc="470:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-array elements="I:3" size="I:12" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_endDataTask" ref="0x10361bb20" loc="431:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-array elements="I:1" size="I:4" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_startForwardRequestPause" ref="0x103056730" loc="588:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-array elements="I:6" size="I:24" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_startDutyCycle" ref="0x1030f37d0" loc="570:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-array elements="I:5" size="I:20" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_endForwardTask" ref="0x1034f6a60" loc="448:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-array elements="I:2" size="I:8" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_clearBuffer" ref="0x10361abd0" loc="419:/Users/ytc/Documents/workspace/NewMetricOR/src/NewMetricORC.nc">
      <component-ref qname="NewMetricORC"/>
      <type-array elements="I:0" size="I:0" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_startDoneTask" ref="0x1039ab630" loc="97:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-array elements="I:8" size="I:32" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_stopDoneTask" ref="0x1039ac3d0" loc="102:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-array elements="I:9" size="I:36" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_sendDoneTask" ref="0x1039ae250" loc="156:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-array elements="I:10" size="I:40" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="receive_message_t" ref="0x1039f05d0" loc="66:/Users/ytc/Applications/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-tag size="I:64" alignment="I:8"><struct-ref name="receive_message" scoped="" ref="0x1039f0160"/>
        <typename><typedef-ref name="receive_message_t" scoped="" ref="0x1039f05d0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__nesc_sillytask_fired" ref="0x103cd55c0" loc="74:/Users/ytc/Applications/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_updateFromTimer" ref="0x103cf9a70" loc="71:/Users/ytc/Applications/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="Timer_t" ref="0x103cea390" loc="66:/Users/ytc/Applications/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-tag size="I:12" alignment="I:4"><struct-ref scoped="" ref="0x103cebca0"/>
        <typename><typedef-ref name="Timer_t" scoped="" ref="0x103cea390"/></typename>
      </type-tag>
    </typedef>
    <typedef name="queue_entry_t" ref="0x103da3480" loc="57:/Users/ytc/Applications/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-tag size="I:8" alignment="I:8"><struct-ref scoped="" ref="0x103da3110"/>
        <typename><typedef-ref name="queue_entry_t" scoped="" ref="0x103da3480"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__nesc_sillytask_errorTask" ref="0x103daade0" loc="169:/Users/ytc/Applications/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_CancelTask" ref="0x103e14020" loc="126:/Users/ytc/Applications/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_sendProbe" ref="0x103e2fc20" loc="31:/Users/ytc/Documents/workspace/NewMetricOR/src/NeighborDiscovery/NeighborDiscoveryP.nc">
      <component-ref qname="NeighborDiscoveryP"/>
      <type-array elements="I:15" size="I:60" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
  </typedefs>
</nesc>
